{
  "items": [
    {
      "creator": "Suzanne Scacca",
      "title": "Removing Panic From E-Commerce Shipping And Inventory Alerts",
      "link": "https://www.smashingmagazine.com/2020/07/ecommerce-shipping-inventory-alerts/",
      "pubDate": "Thu, 09 Jul 2020 11:00:00 +0000",
      "author": "Suzanne Scacca",
      "content:encoded": "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2020/07/ecommerce-shipping-inventory-alerts/\" />\n              <title>Removing Panic From E-Commerce Shipping And Inventory Alerts</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>Removing Panic From E-Commerce Shipping And Inventory Alerts</h1>\n                  \n                    \n                    <address>Suzanne Scacca</address>\n                  \n                  <time datetime=\"2020-07-09T11:00:00&#43;00:00\" class=\"op-published\">2020-07-09T11:00:00+00:00</time>\n                  <time datetime=\"2020-07-09T11:00:00&#43;00:00\" class=\"op-modified\">2020-07-10T03:35:48+00:00</time>\n                </header>\n                \n\n<p>When it comes to displaying shipping and inventory alerts on an e-commerce website, you have to be very careful about inciting panic in your shoppers.</p>\n\n<p><em>“Item is out of stock.”</em></p>\n\n<p><em>“Expect shipping delays.”</em></p>\n\n<p><em>“Page does not exist.”</em></p>\n\n<p>These words alone are enough to turn a pleasant shopping experience into a panicked and frustrating one.</p>\n\n<p>You have to be very careful about how you design these notices on your site, too. You obviously want to inform visitors of changes that impact their shopping experience, but you don’t want panic to be the resulting emotion when your alert is seen.</p>\n\n<div class=\"c-felix-the-cat\">\n<h4>Better Search UX</h4>\n<p>For large-scale and e-commerce sites, the search experience is an increasingly critical tool. You can vastly improve the experience for users with thoughtful microcopy and the right contextualization. <a href=\"https://www.smashingmagazine.com/2019/06/better-search-ux-microcopy/\" class=\"btn btn--small btn--white btn--white--bordered\">Read a related article&nbsp;&rarr;</a></p>\n</div>\n\n\n  <div data-component=\"FeaturePanel\" data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container hidden\"></div>\n\n\n<p>When people panic, the natural response is to find a way to regain some control over the situation. The problem is, that regained control usually comes at the expense of the business’s profits, trust, and customer loyalty.</p>\n\n<blockquote class=\"pull-quote\">\n  <p>\n    <a class=\"pull-quote__link\" aria-label=\"Share on Twitter\" href=\"http://twitter.com/share?text=Unfortunately,%20some%20of%20the%20design%20choices%20we%20make%20in%20terms%20of%20alerts%20can%20cause%20undue%20panic.%0a&url=https://smashingmagazine.com%2f2020%2f07%2fecommerce-shipping-inventory-alerts%2f\">\n      Unfortunately, some of the design choices we make in terms of alerts can cause undue panic.\n\n    </a>\n  </p>\n  <div class=\"pull-quote__quotation\">\n    <div class=\"pull-quote__bg\">\n      <span class=\"pull-quote__symbol\">“</span></div>\n  </div>\n</blockquote>\n\n<p>If you want to better control your shoppers’ responses and keep them on the path to conversion, keep reading.</p>\n\n<p><strong>Note:</strong> <em>Because the following post was written during the coronavirus pandemic, many of the alerts you’re going to see are related to it. However, that doesn’t mean these tips aren’t valid for other panic-inducing situations &mdash; like when a storm destroys an area and it’s impossible to order anything in-store or online or like during the November shopping frenzy when out-of-stock inventory is commonplace.</em></p>\n\n<h4 id=\"1-avoid-out-of-stock-notices-when-possible\">1. Avoid Out-Of-Stock Notices When Possible</h4>\n\n<p>Colleen Kirk is a professor of marketing at the <a href=\"https://www.nyit.edu/box/features/panic_buying_amid_covid_19_fears\">New York Institute of Technology</a> and an expert on territorial shopping.</p>\n\n<p>She has a great analogy to help us understand why this happens:</p>\n\n<blockquote>\n<p>Have you ever felt as if another driver stole your parking spot or were upset when someone else nabbed the last sweater that you had your eye on? If so, you experienced psychological ownership. You can feel psychological ownership over pretty much anything that doesn’t belong to you, from the last chocolate truffle in a display case to the dream home you found on Zillow and even intangible things like ideas.</p>\n</blockquote>\n\n<p>When it comes to shopping in person, people exhibit territorial shopping traits by placing their items in a shopping cart. Or when they put a separator bar between their items on a conveyor belt and the person’s behind them.</p>\n\n<p>We don’t really have that luxury on a website. The best we can do is enable shoppers to save their items to their cart or a wishlist, but that doesn’t keep the items from selling out before they have a chance to buy them.</p>\n\n<p>This can lead to huge problems, especially when a shopper has gotten excited about that toy or shirt they “put aside”, only to discover a few hours later that the item is gone or no longer available.</p>\n\n<p>The worst thing you could do is to remove out-of-stock product pages. You don’t want shoppers running into a 404 page and experiencing not just panic but also confusion and frustration.</p>\n\n<p>While not as bad, I’d also recommend against displaying an inactive “Sold Out” or “Out of Stock” notice or button to shoppers as <a href=\"https://www.olivela.com/\">Olivela</a> has done here:</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/121e9295-bd49-4ef9-b18a-427222b981d9/olivela-sold-out.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/121e9295-bd49-4ef9-b18a-427222b981d9/olivela-sold-out.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/121e9295-bd49-4ef9-b18a-427222b981d9/olivela-sold-out.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/121e9295-bd49-4ef9-b18a-427222b981d9/olivela-sold-out.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/121e9295-bd49-4ef9-b18a-427222b981d9/olivela-sold-out.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/121e9295-bd49-4ef9-b18a-427222b981d9/olivela-sold-out.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/121e9295-bd49-4ef9-b18a-427222b981d9/olivela-sold-out.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Olivela &#39;sold out&#39; notice and inactive button for upcycled denim mask\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      The Olivela website displays an inactive 'Sold Out' button for its denim mask product. (Source: <a href='https://www.olivela.com/'>Olivela</a>) (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/121e9295-bd49-4ef9-b18a-427222b981d9/olivela-sold-out.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Seeing this kind of feels like Google Maps directing you to your destination, only for you to end up at the edge of a lake where there’s supposed to be a road.</p>\n\n<p><em>“Why the heck did you even send me here?”</em>, is what your shoppers are going to wonder. And then they’re going to have to turn around and try to find something comparable to buy instead.</p>\n\n<p>There are better ways to handle this that will also reduce the chances of your shoppers panic-buying a second-rate substitute for the item they really wanted. And this plays into the idea of territorial shopping (but in a healthy way).</p>\n\n<p>This is what <a href=\"https://www.target.com/\">Target</a> does when an item is “temporarily out of stock”:</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e072e2c6-afcb-4ec9-8cd4-b990c4abe62c/target-notify-me-when-in-stock.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e072e2c6-afcb-4ec9-8cd4-b990c4abe62c/target-notify-me-when-in-stock.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e072e2c6-afcb-4ec9-8cd4-b990c4abe62c/target-notify-me-when-in-stock.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e072e2c6-afcb-4ec9-8cd4-b990c4abe62c/target-notify-me-when-in-stock.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e072e2c6-afcb-4ec9-8cd4-b990c4abe62c/target-notify-me-when-in-stock.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e072e2c6-afcb-4ec9-8cd4-b990c4abe62c/target-notify-me-when-in-stock.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e072e2c6-afcb-4ec9-8cd4-b990c4abe62c/target-notify-me-when-in-stock.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Target out of stock product - &#39;Notify me when it’s back&#39; button\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Target provides shoppers with the option to get notified when out-of-stock items become available. (Source: <a href='https://www.target.com/'>Target</a>) (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e072e2c6-afcb-4ec9-8cd4-b990c4abe62c/target-notify-me-when-in-stock.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Rather than display an unclickable button and just completely shut down shoppers’ hopes of getting the item, a “Notify me when it’s back” button is presented. This is a more positive approach to handling out-of-stock inventory and, if customers really want the item, they’re more likely to use it rather than settle for something else or try another site altogether. (I’ll talk about the “Pick it up” option down below.)</p>\n\n<p>Another way you can handle this is to do what <a href=\"https://www.summersalt.com/\">Summersalt</a> does and turn your “Sold Out” button into a “Pre-order” one:</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c33cdace-cc67-4fac-a8d0-41c66bec1a78/summersalt-preorder-button.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c33cdace-cc67-4fac-a8d0-41c66bec1a78/summersalt-preorder-button.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c33cdace-cc67-4fac-a8d0-41c66bec1a78/summersalt-preorder-button.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c33cdace-cc67-4fac-a8d0-41c66bec1a78/summersalt-preorder-button.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c33cdace-cc67-4fac-a8d0-41c66bec1a78/summersalt-preorder-button.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c33cdace-cc67-4fac-a8d0-41c66bec1a78/summersalt-preorder-button.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c33cdace-cc67-4fac-a8d0-41c66bec1a78/summersalt-preorder-button.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Summersalt &#39;Pre-order&#39; button for out-of-stock items\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Summersalt provides shoppers with 'Pre-order' button for out-of-stock items. (Source: <a href='https://www.summersalt.com/'>Summersalt</a>) (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c33cdace-cc67-4fac-a8d0-41c66bec1a78/summersalt-preorder-button.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>What’s nice about this button is that it not only empowers shoppers to secure the currently unavailable item they have their eyes on, but it tells them exactly when they will get it.</p>\n\n<p>So, if you know when inventory will be restored, this is a better option than the “Notify” button as there’s more transparency about availability.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n\n\n\n<h4 id=\"2-don-t-over-promise-or-give-your-shoppers-false-hope\">2. Don’t Over-Promise Or Give Your Shoppers False Hope</h4>\n\n<p>It’s a good idea to keep your shoppers informed about how external situations may impact their online shopping experience. And you can use key areas like the website’s sticky banner or a promotional banner on the homepage to do that.</p>\n\n<p>That said, be very careful what you promote.</p>\n\n<blockquote class=\"pull-quote\">\n  <p>\n    <a class=\"pull-quote__link\" aria-label=\"Share on Twitter\" href=\"http://twitter.com/share?text=Special%20notices%20aren%e2%80%99t%20the%20kinds%20of%20things%20that%20get%20ignored%20the%20way%20that%20cookie%20consent%20notices%20or%20lead%20generation%20pop-ups%20do.%0a&url=https://smashingmagazine.com%2f2020%2f07%2fecommerce-shipping-inventory-alerts%2f\">\n      Special notices aren’t the kinds of things that get ignored the way that cookie consent notices or lead generation pop-ups do.\n\n    </a>\n  </p>\n  <div class=\"pull-quote__quotation\">\n    <div class=\"pull-quote__bg\">\n      <span class=\"pull-quote__symbol\">“</span></div>\n  </div>\n</blockquote>\n\n<p>Consumers know to look at these areas for things like promo codes and sales event details.</p>\n\n<p>If you put anything else in there, you better make sure the notice is positive, useful and truthful.</p>\n\n<p>Let’s take a look at what’s going on with the <a href=\"https://www.gap.com/\">Gap</a> website:</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b78d51e5-4885-4c8e-9b2a-fb713a2d8058/gap-covid-notice.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b78d51e5-4885-4c8e-9b2a-fb713a2d8058/gap-covid-notice.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b78d51e5-4885-4c8e-9b2a-fb713a2d8058/gap-covid-notice.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b78d51e5-4885-4c8e-9b2a-fb713a2d8058/gap-covid-notice.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b78d51e5-4885-4c8e-9b2a-fb713a2d8058/gap-covid-notice.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b78d51e5-4885-4c8e-9b2a-fb713a2d8058/gap-covid-notice.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b78d51e5-4885-4c8e-9b2a-fb713a2d8058/gap-covid-notice.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Gap’s &#39;Taking Care Takes Time&#39; banner notice on website\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Gap’s 'Taking Care Takes Time' notice addresses shipping delays due to COVID-19. (Source: <a href='https://www.gap.com/'>Gap</a>) (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b78d51e5-4885-4c8e-9b2a-fb713a2d8058/gap-covid-notice.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Gap has three notices that appear in the header of its site:</p>\n\n<ul>\n<li><strong>In black:</strong> “Free shipping on $25+, free returns on all orders.”</li>\n<li><strong>In white:</strong> “Taking Care Takes Time. We’ve implemented special procedures as we work to keep our teams &mdash; and you &mdash; safe, so shipping of orders may be delayed.”</li>\n<li><strong>In blue:</strong> “Extra 50% off markdowns + more.”</li>\n</ul>\n\n<p>It’s overwhelming. And it’s almost as if they wanted the alert in the middle to be ignored (or missed altogether) as it’s sandwiched between two very sharp-looking banners that promote attractive deals.</p>\n\n<p>If your alert is related to something that’s going to affect the shoppers’ experience, don’t bury it and don’t try to massage it with overly optimistic messaging. Also, don’t contradict it with another alert that suggests the first one isn’t one to worry about.</p>\n\n<p>Here’s why I say that:</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f9c3760a-0b44-465e-9de6-704a72660a42/gap-website-masks-are-back.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f9c3760a-0b44-465e-9de6-704a72660a42/gap-website-masks-are-back.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f9c3760a-0b44-465e-9de6-704a72660a42/gap-website-masks-are-back.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f9c3760a-0b44-465e-9de6-704a72660a42/gap-website-masks-are-back.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f9c3760a-0b44-465e-9de6-704a72660a42/gap-website-masks-are-back.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f9c3760a-0b44-465e-9de6-704a72660a42/gap-website-masks-are-back.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f9c3760a-0b44-465e-9de6-704a72660a42/gap-website-masks-are-back.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Gap promotion for &#39;Our Masks are Back&#39; during COVID-19\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Gap promotes 'Our Masks are Back' on the homepage of its website. (Source: <a href='https://www.gap.com/'>Gap</a>) (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f9c3760a-0b44-465e-9de6-704a72660a42/gap-website-masks-are-back.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>This message is problematic for a couple of reasons. For one, Gap’s masks aren’t really “back” if they’re only available for pre-order. Second, it runs contrary to the top banner’s message about shipping delays.</p>\n\n<p>Unsurprisingly, shoppers did not react well to this hyped-up announcement:</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e3217384-2a90-49f4-99bf-d0d5cc1781b2/gap-complaints-facebook.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e3217384-2a90-49f4-99bf-d0d5cc1781b2/gap-complaints-facebook.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e3217384-2a90-49f4-99bf-d0d5cc1781b2/gap-complaints-facebook.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e3217384-2a90-49f4-99bf-d0d5cc1781b2/gap-complaints-facebook.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e3217384-2a90-49f4-99bf-d0d5cc1781b2/gap-complaints-facebook.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e3217384-2a90-49f4-99bf-d0d5cc1781b2/gap-complaints-facebook.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e3217384-2a90-49f4-99bf-d0d5cc1781b2/gap-complaints-facebook.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Gap backlash on Facebook during COVID-19\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Gap receives an extraordinary amount of backlash on Facebook over mismanagement of shipping and promotions. (Source: <a href='https://www.gap.com/'>Gap</a>) (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e3217384-2a90-49f4-99bf-d0d5cc1781b2/gap-complaints-facebook.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>When Facebook ran a promotion on Facebook about the masks, it received a huge amount of backlash from customers. Many customers didn’t want to hear about the masks because they’d been waiting over a month for existing orders to ship and couldn’t get a customer service rep to talk to them. There were also complaints about items being canceled from their orders, only for them to magically become “available” again in the store.</p>\n\n<p>A website that’s handling similar circumstances well right now is <a href=\"https://www.urbanoutfitters.com/\">Urban Outfitters</a>:</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/45248250-1954-4696-86b0-2f2e8dfb071c/urbanoutfitters-positive-message.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/45248250-1954-4696-86b0-2f2e8dfb071c/urbanoutfitters-positive-message.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/45248250-1954-4696-86b0-2f2e8dfb071c/urbanoutfitters-positive-message.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/45248250-1954-4696-86b0-2f2e8dfb071c/urbanoutfitters-positive-message.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/45248250-1954-4696-86b0-2f2e8dfb071c/urbanoutfitters-positive-message.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/45248250-1954-4696-86b0-2f2e8dfb071c/urbanoutfitters-positive-message.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/45248250-1954-4696-86b0-2f2e8dfb071c/urbanoutfitters-positive-message.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Urban Outfitters curbside pickup - sticky notice on website\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Urban Outfitters is focusing on the positive of a bad situation. (Source: <a href='https://www.urbanoutfitters.com/'>Urban Outfitters</a>) (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/45248250-1954-4696-86b0-2f2e8dfb071c/urbanoutfitters-positive-message.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Urban Outfitters, like a lot of non-essential retailers right now, has had to make some adjustments in order to stay alive. But rather than displaying a notice alerting online shoppers to shipping delays like many of its counterparts, Urban Outfitters has turned it into a positive.</p>\n\n<p>The banner reads: <em>“Your local UO is now offering curbside pickup!”</em></p>\n\n<p>There’s no hidden message here that tries to explain away the brand’s bad behavior. There’s no greedy cash-grab, promising deep discounts for people who shop with them despite likely delays in shipping. There’s no overhyping of a promise they can’t possibly keep.</p>\n\n<p>This is an <em>actionable</em> offer.</p>\n\n<p>What I’d suggest for e-commerce businesses that want to keep customers on their side &mdash; even during a tumultuous time &mdash; is to keep their alerts simple, honest and useful. And if you’re going to promote multiple ones, make sure they tell the same story.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n\n\n\n<h4 id=\"3-soften-the-blow-by-promoting-multichannel-options\">3. Soften The Blow By Promoting Multichannel Options</h4>\n\n<p>I recently signed a new lease on an apartment but was dismayed to discover that my move-in date and furniture delivery date wouldn’t line up because of shipping delays. I was well-aware of this when I made the purchase, but I wasn’t as prepared as I wanted to be. And because we were in the middle of a city-wide lockdown, I was unable to crash with friends who live over the state border.</p>\n\n<p>I thought, <em>“I’ll sleep on an air mattress. No biggie.”</em> But then remembered I left mine behind in Delaware. So, I had to figure out a way to buy a cheap air mattress.</p>\n\n<p>All of my go-to e-commerce websites had shipping delay alerts. And as I perused their available products (which there were very few), my panic only worsened. Until I discovered a website that offered BOPIS.</p>\n\n<p><strong>Buy-online-pickup-in-store</strong> is a shopping trend that’s proven very popular with consumers. According to data from Doddle and <a href=\"https://www.businessinsider.com/us-consumers-use-buy-online-pickup-in-store-2019-2\">a report from Business Insider</a>:</p>\n\n<ul>\n<li>68% of U.S. shoppers have used BOPIS on numerous occasions.</li>\n<li>50% have chosen where to shop based on BOPIS availability.</li>\n<li>Shipping costs (avoiding them), speed and convenience are the primary reasons why customers prefer to buy online and shop in-store. It’s the best of both worlds.</li>\n</ul>\n\n<p>If you’re building an e-commerce site for a company with retail locations that do this, then make sure you get customers thinking about it right away.</p>\n\n<p><a href=\"https://www.barnesandnoble.com/\">Barnes and Noble</a>, for instance, enables shoppers to set their preferred local store:</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/19e9e3ab-185c-45f2-b25d-2e7a5906e39b/barnesandnoble-bopis-options-product-pages.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/19e9e3ab-185c-45f2-b25d-2e7a5906e39b/barnesandnoble-bopis-options-product-pages.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/19e9e3ab-185c-45f2-b25d-2e7a5906e39b/barnesandnoble-bopis-options-product-pages.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/19e9e3ab-185c-45f2-b25d-2e7a5906e39b/barnesandnoble-bopis-options-product-pages.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/19e9e3ab-185c-45f2-b25d-2e7a5906e39b/barnesandnoble-bopis-options-product-pages.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/19e9e3ab-185c-45f2-b25d-2e7a5906e39b/barnesandnoble-bopis-options-product-pages.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/19e9e3ab-185c-45f2-b25d-2e7a5906e39b/barnesandnoble-bopis-options-product-pages.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Barnes &amp; Noble &#39;Change My Store&#39; - location selection\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Barnes & Noble allows shoppers to set their preferred retail store location. (Source: <a href='https://www.barnesandnoble.com/'>Barnes and Noble</a>) (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/19e9e3ab-185c-45f2-b25d-2e7a5906e39b/barnesandnoble-bopis-options-product-pages.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>This is a great feature to have. The only thing I’d do differently is to place a button in the header of the site that immediately takes them to the “Change My Store” or “Find Store” pop-up or page. That way, shoppers don’t have to wait until they’ve found a product they like to discover whether or not it’s available at their store for pickup.</p>\n\n<p>Once a user has set their store location, though, Barnes &amp; Noble remembers it and uses it to enhance the remainder of the shopping experience:</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0880920c-e422-4552-9802-b18fa942e336/barnesandnoble-bopis-notes.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0880920c-e422-4552-9802-b18fa942e336/barnesandnoble-bopis-notes.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0880920c-e422-4552-9802-b18fa942e336/barnesandnoble-bopis-notes.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0880920c-e422-4552-9802-b18fa942e336/barnesandnoble-bopis-notes.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0880920c-e422-4552-9802-b18fa942e336/barnesandnoble-bopis-notes.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0880920c-e422-4552-9802-b18fa942e336/barnesandnoble-bopis-notes.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0880920c-e422-4552-9802-b18fa942e336/barnesandnoble-bopis-notes.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Barnes &amp; Noble search listings with online and in-store availability info\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Barnes & Noble uses shopper location information to enhance search listings. (Source: <a href='https://www.barnesandnoble.com/'>Barnes and Noble</a>) (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0880920c-e422-4552-9802-b18fa942e336/barnesandnoble-bopis-notes.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>This is what search listings look like for “Magna Tiles” on the Barnes &amp; Noble site when the user sets their search to “List” view. Pretty neat, right? While “Grid” view is standard, only showing the featured image, product name and price, this view provides extra detail about availability.</p>\n\n<p>This can provide a ton of relief for shoppers who too-often encounter “out-of-stock” or “not available in store” notices on individual product pages. This way, they can spend their time looking at the items they can get the most quickly and conveniently. There are no surprises.</p>\n\n<p>If cross-channel options are available &mdash; between website and mobile app, website and retail store, website and third-party delivery service &mdash; make sure you call attention to them early on so customers can take advantage of the streamlined shopping experience.</p>\n\n<h3 id=\"wrapping-up\">Wrapping Up</h3>\n\n<p>Panicked shopping can lead to serious issues for your e-commerce site. Rather than put your shoppers in a situation where they grow impatient, dissatisfied, and frustrated by the site that seems to put up barriers at every turn, design your alerts so that they turn a bad experience into a positive one.</p>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\">\n  <span>(ra, yk, il)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        ",
      "content": "When it comes to displaying shipping and inventory alerts on an e-commerce website, you have to be very careful about inciting panic in your shoppers.\n“Item is out of stock.”\n“Expect shipping delays.”\n“Page does not exist.”\nThese words alone are enough to turn a pleasant shopping experience into a panicked and frustrating one.\nYou have to be very careful about how you design these notices on your site, too.",
      "contentSnippet": "When it comes to displaying shipping and inventory alerts on an e-commerce website, you have to be very careful about inciting panic in your shoppers.\n“Item is out of stock.”\n“Expect shipping delays.”\n“Page does not exist.”\nThese words alone are enough to turn a pleasant shopping experience into a panicked and frustrating one.\nYou have to be very careful about how you design these notices on your site, too.",
      "guid": "https://www.smashingmagazine.com/2020/07/ecommerce-shipping-inventory-alerts/",
      "isoDate": "2020-07-09T11:00:00.000Z"
    },
    {
      "creator": "Kelvin Omereshone",
      "title": "Creating Tiny Desktop Apps With Tauri And Vue.js",
      "link": "https://www.smashingmagazine.com/2020/07/tiny-desktop-apps-tauri-vuejs/",
      "pubDate": "Wed, 08 Jul 2020 11:00:00 +0000",
      "author": "Kelvin Omereshone",
      "content:encoded": "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2020/07/tiny-desktop-apps-tauri-vuejs/\" />\n              <title>Creating Tiny Desktop Apps With Tauri And Vue.js</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>Creating Tiny Desktop Apps With Tauri And Vue.js</h1>\n                  \n                    \n                    <address>Kelvin Omereshone</address>\n                  \n                  <time datetime=\"2020-07-08T11:00:00&#43;00:00\" class=\"op-published\">2020-07-08T11:00:00+00:00</time>\n                  <time datetime=\"2020-07-08T11:00:00&#43;00:00\" class=\"op-modified\">2020-07-10T03:35:48+00:00</time>\n                </header>\n                \n\n<p>Technology makes our lives better, not just users, but also creators (developers and designers). In this article, I’ll introduce you to Tauri. This article will be useful to you if:</p>\n\n<ul>\n<li>you have been building applications on the web with HTML, CSS, and JavaScript, and you want to use the same technologies to create apps targeted at Windows, macOS, or Linux platforms;</li>\n<li>you are already building cross-platform desktop apps with technologies like Electron, and you want to check out alternatives;</li>\n<li>you want to build apps with web technologies for Linux distributions, such as PureOS;</li>\n<li>you are a Rust enthusiast, and you’d like to apply it to build native cross-platform applications.</li>\n</ul>\n\n<p>We will look at how to build a native cross-platform application from an existing web project. Let’s get to it!</p>\n\n<p><strong>Note</strong>: <em>This article assumes you are comfortable with HTML, CSS, JavaScript, and Vue.js.</em></p>\n\n\n  <div data-component=\"FeaturePanel\" data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container hidden\"></div>\n\n\n<h4 id=\"what-is-tauri\">What Is Tauri?</h4>\n\n<p>The <a href=\"https://tauri.studio\">official website</a> sums up Tauri well:</p>\n\n<ul>\n<li>Tauri is a polyglot toolchain for building more secure native apps with both tiny and fast binaries. By “polyglot”, I mean that Tauri uses multiple programming languages. At the moment, Rust, JavaScript, and TypeScript are used. But there are plans to let you use Go, C++, Python, and more.</li>\n<li>It lets you use any HTML and JavaScript-based front-end framework, such as Vue.js, React, or Angular, to build a native desktop app, and it can be integrated into any pipeline.</li>\n<li>It helps you build and bundle binaries for major desktop platforms (mobile and WebAssembly coming soon).</li>\n</ul>\n\n<p>So, basically, Tauri allows you to use web technologies to create tiny and secure native desktop apps.</p>\n\n<p>On its <a href=\"https://github.com/tauri-apps/tauri\">GitHub page</a>, Tauri is described as a framework-agnostic toolchain for building highly secure native apps that have tiny binaries (i.e. file size) and that are very fast (i.e. minimal RAM usage).</p>\n\n<h3 id=\"why-not-electron\">Why Not Electron?</h3>\n\n<p>A popular tool for using web technologies to build desktop applications is Electron.</p>\n\n<p>However, Electron apps have a rather large bundle size, and they tend to take up a lot of memory when running. Here is how Tauri compares to Electron:</p>\n\n<ul>\n<li><strong>Bundle</strong><br />\nThe size of a Tauri app can be less than 600 KB.</li>\n<li><strong>Memory</strong><br />\nThe footprint of a Tauri app is less than half the size of an Electron app.</li>\n<li><strong>Licence</strong><br />\nRelicensing is possible with Tauri, but not with Electron. Electron ships with Chromium right out of the box. However, Chromium includes a digital rights-management system named <a href=\"https://en.wikipedia.org/wiki/Widevine\">Widevine</a>. The inclusion of Widevine in Chromium makes apps created with Electron frowned upon by users of platforms such as PureOS for the sole reason that it is not free/libre open-source software (FLOSS). Platforms like PureOS are verified by the Free Software Foundation (FSF). This means that they can only publish free and open-source software in their app stores.</li>\n</ul>\n\n<p>In a nutshell, if your app is built with Electron, it will never be shipped officially in the PureOS store. This should be a concern for developers targeting such <a href=\"https://en.wikipedia.org/wiki/Linux_distribution\">distributions</a>.</p>\n\n<h3 id=\"more-features-of-tauri\">More Features Of Tauri</h3>\n\n<ul>\n<li>Security is really important to the Tauri team. Apps created with Tauri are meant to be secure from the get-go.</li>\n<li>Tauri is compatible with any front-end framework, so you don’t have to change your stack.</li>\n<li>It has many design patterns to help you choose important features with simple configurations.</li>\n</ul>\n\n<h3 id=\"pros-of-tauri\">Pros Of Tauri</h3>\n\n<ul>\n<li>Tauri enables you to take the code base you’ve built for the web and turn it into a native desktop app, without changing a thing.</li>\n<li>Although you could use Rust in a Tauri-based project, it is completely optional. If you did, you wouldn’t need to change anything in your original code base targeted for the web.</li>\n</ul>\n\n<h3 id=\"real-world-tauri\">Real-World Tauri</h3>\n\n<p>If you have been part of the Vue.js community for a while, then you’ll have heard of <a href=\"https://twitter.com/Akryum\">Guillaume Chau</a>, a member of the core team of Vue.js. He is responsible for the Vue.js command-line interface (CLI), as well as other awesome Vue.js libraries. He recently created <a href=\"https://guijs.dev/\">guijs</a>, which stands for “graphical user interface for JavaScript projects”. It is a Tauri-powered native desktop app to visually manage your JavaScript projects.</p>\n\n<p>Guijs is an example of what is possible with Tauri, and the fact that a core member of the Vue.js team works on the app tells us that Tauri plays nicely with Vue.js (amongst other front-end frameworks). Check out the <a href=\"https://github.com/Akryum/guijs/\">guijs repository</a> on GitHub if you are interested. And, yes, it is open-source.</p>\n\n<h3 id=\"how-tauri-works\">How Tauri Works</h3>\n\n<p>At a high level, Tauri uses <a href=\"https://nodejs.org\">Node.js</a> to scaffold an HTML, CSS, and JavaScript rendering window as a user interface (UI), managed and bootstrapped by <a href=\"https://www.rust-lang.org/\">Rust</a>. The product is a monolithic binary that can be distributed as common file types for Linux (deb/appimage), macOS (app/dmg), and Windows (exe/msi).</p>\n\n<h3 id=\"how-tauri-apps-are-made\">How Tauri Apps Are Made</h3>\n\n<p>A Tauri app is created via the following steps:</p>\n\n<ol>\n<li>First, make an interface in your GUI framework, and prepare the HTML, CSS, and JavaScript for consumption.</li>\n<li>The Tauri Node.js CLI takes it and rigs the Rust runner according to your configuration.</li>\n<li>In development mode, it creates a WebView window, with <strong>debugging</strong> and <strong>Hot Module Reloading</strong>.</li>\n<li>In build mode, it rigs the bundler and creates a final application according to your settings.</li>\n</ol>\n\n<div class=\"sponsors__lead-place\"></div>\n\n\n\n\n<h3 id=\"setting-up-your-environment\">Setting Up Your Environment</h3>\n\n<p>Now that you know what Tauri is and how it works, let me walk you through setting up your machine for development with Tauri.</p>\n\n<p><strong>Note</strong>: <em>The setup here is for Linux machines, but guides <a href=\"https://github.com/tauri-apps/tauri/wiki/03.-MacOS-Setup\">for macOS</a> and <a href=\"https://github.com/tauri-apps/tauri/wiki/04.-MS-Windows-Setup\">for Windows</a> are also available.</em></p>\n\n<h4 id=\"linux-setup\">Linux Setup</h4>\n\n<p>The polyglot nature of Tauri means that it requires a number of tool dependencies. Let’s kick it off by installing some of the dependencies. Run the following:</p>\n\n<div class=\"break-out\">\n <pre><code class=\"language-bash\">$ sudo apt update && sudo apt install libwebkit2gtk-4.0-dev build-essential curl libssl-dev appmenu-gtk3-module\n</code></pre>\n</div>\n\n<p>Once the above is successful, proceed to install Node.js (if you don’t already have it), because Tauri requires its runtime. You can do so by running this:</p>\n\n<div class=\"break-out\">\n <pre><code class=\"language-bash\">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.2/install.sh | bash\n</code></pre>\n</div>\n\n<p>This will install nvm (Node.js version manager), which allows you to easily manage the Node.js runtime and easily switch between versions of Node.js. After it is installed, run this to see a list of Node.js versions:</p>\n\n<pre><code class=\"language-bash\">nvm ls-remote\n</code></pre>\n\n<p>At the time of writing, the most recent version is 14.1.0. Install it like so:</p>\n\n<pre><code class=\"language-bash\">nvm install v14.1.0\n</code></pre>\n\n<p>Once Node.js is fully set up, you would need to install the Rust compiler and the Rust package manager: Cargo. The command below would install both:</p>\n\n<pre><code class=\"language-bash\">$ curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n</code></pre>\n\n<p>After running this command, make sure that Cargo and Rust are in your <code>$PATH</code> by running the following:</p>\n\n<pre><code class=\"language-bash\">rust --version\n</code></pre>\n\n<p>If everything has gone well, this should return a version number.</p>\n\n<p>According to the Tauri documentation, make sure you are on the latest version by running the following command:</p>\n\n<pre><code class=\"language-bash\">$ rustup update stable\n</code></pre>\n\n<p>Voilà! You are one step closer to getting your machine 100% ready for Tauri. All that’s left now is to install the <code>tauri-bundler</code> crate. It’s best to quit your CLI, and run the command below in a new CLI window:</p>\n\n<pre><code class=\"language-bash\">$ cargo install tauri-bundler --force\n</code></pre>\n\n<p>Eureka! If everything went all right, your machine is now ready for Tauri. Next up, we will get started integrating Tauri with Vue.js. Let’s get to it!</p>\n\n<h3 id=\"yarn\">Yarn</h3>\n\n<p>The Tauri team recommends installing the <a href=\"https://yarnpkg.com/\">Yarn package manager</a>. So let’s install it this way:</p>\n\n<pre><code class=\"language-bash\">npm install -g yarn\n</code></pre>\n\n<p>Then run the following:</p>\n\n<pre><code class=\"language-bash\">yarn --version\n</code></pre>\n\n<p>If everything worked, a version number should have been returned.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n\n\n\n<h3 id=\"integrating-tauri-with-vue-js\">Integrating Tauri With Vue.js</h3>\n\n<p>Now that we have Tauri installed, let’s bundle an existing web project. You can find the live demo of the project <a href=\"https://tauri-nota.netlify.app/\">on Netlify</a>. Go ahead and fork <a href=\"https://github.com/DominusKelvin/nota-web\">the repository</a>, which will serve as a shell. After forking it, make sure to clone the fork by running this:</p>\n\n<pre><code class=\"language-bash\">git clone https://github.com/[yourUserName]/nota-web\n</code></pre>\n\n<p>After cloning the project, run the following to install the dependencies:</p>\n\n<pre><code class=\"language-bash\">yarn\n</code></pre>\n\n<p>Then, run this:</p>\n\n<pre><code class=\"language-bash\">yarn serve\n</code></pre>\n\n<p>Your application should be running on <code>localhost:8080</code>. Kill the running server, and let’s install the Vue.js CLI plugin for Tauri.</p>\n\n<h4 id=\"vue-cli-plugin-tauri\">vue-cli-plugin-tauri</h4>\n\n<p>The Tauri team created a <a href=\"https://github.com/tauri-apps/vue-cli-plugin-tauri\">Vue.js CLI plugin</a> that quickly rigs and turns your Vue.js single-page application (SPA) into a tiny cross-platform desktop app that is both fast and secure. Let’s install that plugin:</p>\n\n<pre><code class=\"language-bash\">vue add tauri\n</code></pre>\n\n<p>After the plugin is installed, which might take a while, it will ask you for a window title. Just type in <code>nota</code> and press “Enter”.</p>\n\n<p>Let’s examine the changes introduced by the Tauri plugin.</p>\n\n<h3 id=\"package-json\">package.json</h3>\n\n<p>The Tauri plugin added two scripts in the scripts section of our <code>package.json</code> file. They are:</p>\n\n<pre><code class=\"language-json\">\"tauri:build\": \"vue-cli-service tauri:build\",\n\"tauri:serve\": \"vue-cli-service tauri:serve\"\n</code></pre>\n\n<p>The <code>tauri:serve</code> script should be used during development. So let’s run it:</p>\n\n<pre><code class=\"language-json\">yarn tauri:serve\n</code></pre>\n\n<p>The above would download the Rust crates needed to start our app. After that, it will launch our app in <strong>development mode</strong>, where it will create a WebView window, with <strong>debugging</strong> and <strong>Hot Module Reloading</strong>!</p>\n\n<h4 id=\"src-tauri\">src-tauri</h4>\n\n<p>You will also notice that the plugin added a <code>src-tauri</code> directory to the root of your app directory. Inside this directory are files and folders used by Tauri to configure your desktop app. Let’s check out the contents:</p>\n\n<pre><code class=\"language-json\">icons/\nsrc/\n    build.rs\n    cmd.rs\n    main.rs\nCargo.lock\nCargo.toml\nrustfmt.toml\ntauri.conf.json\ntauri.js\n</code></pre>\n\n<p>The only change we would need to make is in <code>src-tauri/Cargo.toml</code>. <code>Cargo.toml</code> is like the <code>package.json</code> file for Rust. Find the line below in <code>Cargo.toml</code>:</p>\n\n<pre><code class=\"language-toml\">name = \"app\"\n</code></pre>\n\n<p>Change it to this:</p>\n\n<pre><code class=\"language-toml\">name = \"nota\"\n</code></pre>\n\n<p>That’s all we need to change for this example!</p>\n\n<h3 id=\"bundling\">Bundling</h3>\n\n<p>To bundle <code>nota</code> for your current platform, simply run this:</p>\n\n<pre><code class=\"language-bash\">yarn tauri:build\n</code></pre>\n\n<p><strong>Note</strong>: <em>As with the development window, the first time you run this, it will take some time to collect the Rust crates and build everything. On subsequent runs, it will only need to rebuild the Tauri crates themselves.</em></p>\n\n<p>When the above is completed, you should have a binary of <code>nota</code> for your current OS. For me, I have a <code>.deb</code> binary created in the <code>src-tauri/target/release/bundle/deb/</code> directory.*</p>\n\n<h3 id=\"going-cross-platform\">Going Cross-Platform</h3>\n\n<p>You probably noticed that the <code>yarn tauri:build</code> command just generated a binary for your operating system. So, let’s generate the binaries for other operating systems. To achieve this, we will set up a workflow on GitHub. We are using GitHub here to serve as a distribution medium for our cross-platform app. So, your users could just download the binaries in the “Release” tab of the project.\nThe workflow we would implement would automatically build our binaries for us via the power of <a href=\"https://github.com/features/actions\">GitHub actions</a>. Let’s get to it.</p>\n\n<h3 id=\"creating-the-tauri-workflow\">Creating The Tauri Workflow</h3>\n\n<p>Thanks to <a href=\"https://github.com/jbolda\">Jacob Bolda</a>, we have a workflow to automatically create and release cross-platform apps with Tauri on GitHub. Apart from building the binary for the various platforms (Linux, Mac, and Windows), the action would also upload the binary for you as a release on GitHub. It also uses the <a href=\"https://github.com/jbolda/create-release\">Create a Release</a> action made by Jacob to achieve this.</p>\n\n<p>To use this workflow, create a <code>.github</code> directory in the root of <code>nota-web</code>. In this directory, create another directory named <code>workflows</code>. We would then create a workflow file in <code>.github/workflows/</code>, and name it <code>release-tauri-app.yml</code>.</p>\n\n<p>In <code>release-tauri-app.yml</code>, we would add a workflow that builds the binaries for Linux, macOS, and Windows. This workflow would also upload the binaries as a draft release on GitHub. The workflow would be triggered whenever we push to the master.</p>\n\n<p>Open <code>release-tauri-app.yml</code>, and add the snippet below:</p>\n\n<div class=\"break-out\">\n <pre><code class=\"language-yml\">name: release-tauri-app\n\non:\n  push:\n    branches:\n      - master\n    paths:\n      - '&#42;&#42;/package.json'\n\njobs:\n  check-build:\n    runs-on: ubuntu-latest\n    timeout-minutes: 30\n\n    steps:\n      &mdash; uses: actions/checkout@v2\n      &mdash; name: setup node\n        uses: actions/setup-node@v1\n        with:\n          node-version: 12\n      &mdash; name: install rust stable\n        uses: actions-rs/toolchain@v1\n        with:\n          toolchain: stable\n          profile: minimal\n      &mdash; name: install webkit2gtk\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y webkit2gtk-4.0\n      &mdash; run: yarn\n      &mdash; name: build nota for tauri app\n        run: yarn build\n      &mdash; run: cargo install tauri-bundler --force\n      &mdash; name: build tauri app\n        run: yarn tauri:build\n\n  create-release:\n    needs: check-build\n    runs-on: ubuntu-latest\n    outputs:\n      RELEASE_UPLOAD_URL: ${{ steps.create_tauri_release.outputs.upload_url }}\n\n    steps:\n      &mdash; uses: actions/checkout@v2\n      &mdash; name: setup node\n        uses: actions/setup-node@v1\n        with:\n          node-version: 12\n      &mdash; name: get version\n        run: echo ::set-env name=PACKAGE_VERSION::$(node -p \"require('./package.json').version\")\n      &mdash; name: create release\n        id: create_tauri_release\n        uses: jbolda/create-release@v1.1.0\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n        with:\n          tag_name: ${{ matrix.package.name }}-v${{ env.PACKAGE_VERSION }}\n          release_name: 'Release nota app v${{ env.PACKAGE_VERSION }}'\n          body: 'See the assets to download this version and install.'\n          draft: true\n          prerelease: false\n\n  create-and-upload-assets:\n    needs: create-release\n    runs-on: ${{ matrix.platform }}\n    timeout-minutes: 30\n\n    strategy:\n      fail-fast: false\n      matrix:\n        platform: [ubuntu-latest, macos-latest, windows-latest]\n        include:\n          &mdash; platform: ubuntu-latest\n            buildFolder: bundle/deb\n            ext: \\_0.1.0_amd64.deb\n            compressed: ''\n          &mdash; platform: macos-latest\n            buildFolder: bundle/osx\n            ext: .app\n            compressed: .tgz\n          &mdash; platform: windows-latest\n            buildFolder: ''\n            ext: .x64.msi\n            compressed: ''\n\n    steps:\n      &mdash; uses: actions/checkout@v2\n      &mdash; name: setup node\n        uses: actions/setup-node@v1\n        with:\n          node-version: 12\n      &mdash; name: install rust stable\n        uses: actions-rs/toolchain@v1\n        with:\n          toolchain: stable\n          profile: minimal\n      &mdash; name: install webkit2gtk (ubuntu only)\n        if: matrix.platform == 'ubuntu-latest'\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y webkit2gtk-4.0\n      &mdash; run: yarn\n      &mdash; name: build nota for tauri app\n        run: yarn build\n      &mdash; run: cargo install tauri-bundler --force\n      &mdash; name: build tauri app\n        run: yarn tauri:build\n      &mdash; name: compress (macos only)\n        if: matrix.platform == 'macos-latest'\n        working-directory: ${{ format('./src-tauri/target/release/{0}', matrix.buildFolder ) }}\n        run: tar -czf ${{ format('nota{0}{1}', matrix.ext, matrix.compressed ) }} ${{ format('nota{0}', matrix.ext ) }}\n      &mdash; name: upload release asset\n        id: upload-release-asset\n        uses: actions/upload-release-asset@v1.0.2\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n        with:\n          upload_url: ${{ needs.create-release.outputs.RELEASE_UPLOAD_URL }}\n          asset_path: ${{ format('./src-tauri/target/release/{0}/nota{1}{2}', matrix.buildFolder, matrix.ext, matrix.compressed ) }}\n          asset_name: ${{ format('nota{0}{1}', matrix.ext, matrix.compressed ) }}\n          asset_content_type: application/zip\n      &mdash; name: build tauri app in debug mode\n        run: yarn tauri:build --debug\n      &mdash; name: compress (macos only)\n        if: matrix.platform == 'macos-latest'\n        working-directory: ${{ format('./src-tauri/target/debug/{0}', matrix.buildFolder ) }}\n        run: tar -czf ${{ format('nota{0}{1}', matrix.ext, matrix.compressed ) }} ${{ format('nota{0}', matrix.ext ) }}\n      &mdash; name: upload release asset with debug mode on\n        id: upload-release-asset-debug-mode\n        uses: actions/upload-release-asset@v1.0.2\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n        with:\n          upload_url: ${{ needs.create-release.outputs.RELEASE_UPLOAD_URL }}\n          asset_path: ${{ format('./src-tauri/target/debug/{0}/nota{1}{2}', matrix.buildFolder, matrix.ext, matrix.compressed ) }}\n          asset_name: ${{ format('nota-debug{0}{1}', matrix.ext, matrix.compressed ) }}\n          asset_content_type: application/zip\n</code></pre>\n</div>\n\n<p>To test the workflow, commit and push your changes to your fork’s <code>master</code> branch. After successfully pushing to GitHub, you can then click on the “Actions” tab in GitHub, then click on the “Check build” link to see the progress of the workflow.</p>\n\n<p>Upon successful execution of the action, you can see the draft release in “Releases” on the repository page on GitHub. You can then go on to publish your release!</p>\n\n<h3 id=\"conclusion\">Conclusion</h3>\n\n<p>This article has introduced a polyglot toolchain for building secure, cross-platform, and tiny native applications. We’ve seen what Tauri is and how to incorporate it with Vue.js. Lastly, we bundled our first Tauri app by running <code>yarn tauri:build</code>, and we also used a GitHub action to create binaries for Linux, macOS, and Windows.</p>\n\n<p>Let me know what you think of Tauri &mdash; I’d be excited to see what you build with it. You can <a href=\"https://discord.gg/SpmNs4S\">join the Discord server</a> if you have any questions.</p>\n\n<p><em>The <a href=\"https://github.com/DominusKelvin/nota\">repository for this article</a> is on GitHub. Also, see the <a href=\"https://github.com/DominusKelvin/nota/releases/tag/v0.1.0\">binaries generated by the GitHub workflow</a>.</em></p>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\">\n  <span>(ra, il, al)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        ",
      "content": "Technology makes our lives better, not just users, but also creators (developers and designers). In this article, I’ll introduce you to Tauri. This article will be useful to you if:\nyou have been building applications on the web with HTML, CSS, and JavaScript, and you want to use the same technologies to create apps targeted at Windows, macOS, or Linux platforms; you are already building cross-platform desktop apps with technologies like Electron, and you want to check out alternatives; you want to build apps with web technologies for Linux distributions, such as PureOS; you are a Rust enthusiast, and you’d like to apply it to build native cross-platform applications.",
      "contentSnippet": "Technology makes our lives better, not just users, but also creators (developers and designers). In this article, I’ll introduce you to Tauri. This article will be useful to you if:\nyou have been building applications on the web with HTML, CSS, and JavaScript, and you want to use the same technologies to create apps targeted at Windows, macOS, or Linux platforms; you are already building cross-platform desktop apps with technologies like Electron, and you want to check out alternatives; you want to build apps with web technologies for Linux distributions, such as PureOS; you are a Rust enthusiast, and you’d like to apply it to build native cross-platform applications.",
      "guid": "https://www.smashingmagazine.com/2020/07/tiny-desktop-apps-tauri-vuejs/",
      "isoDate": "2020-07-08T11:00:00.000Z"
    },
    {
      "creator": "Rachel Andrew",
      "title": "CSS News July 2020",
      "link": "https://www.smashingmagazine.com/2020/07/css-news-july-2020/",
      "pubDate": "Tue, 07 Jul 2020 10:30:00 +0000",
      "author": "Rachel Andrew",
      "content:encoded": "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2020/07/css-news-july-2020/\" />\n              <title>CSS News July 2020</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>CSS News July 2020</h1>\n                  \n                    \n                    <address>Rachel Andrew</address>\n                  \n                  <time datetime=\"2020-07-07T10:30:00&#43;00:00\" class=\"op-published\">2020-07-07T10:30:00+00:00</time>\n                  <time datetime=\"2020-07-07T10:30:00&#43;00:00\" class=\"op-modified\">2020-07-10T03:35:48+00:00</time>\n                </header>\n                \n\n<p>Things move a lot faster than they used to in terms of the implementation of Web Platform features, and this post is a round-up of news about CSS features that are making their way into the platform. If you are the sort of person who doesn’t like reading about things if you can’t use them <em>now</em>, then this article probably isn’t for you &mdash; we have many others for you to enjoy instead! However, if you like to know what is on the way and read more about the things you can play with in a beta version of a browser, read on!</p>\n\n<h3 id=\"flexbox-gaps\">Flexbox Gaps</h3>\n\n<p>Let’s start with something that is implemented in the shipping version of one browser, and in beta in another. In CSS Grid, we can use the <code>gap</code>, <code>column-gap</code> and <code>row-gap</code> properties to define the gaps between rows and columns or both at the same time. The <code>column-gap</code> feature also appears in the <a href=\"https://www.smashingmagazine.com/2019/01/css-multiple-column-layout-multicol/\">Multi-column layout</a> to create gaps between columns.</p>\n\n<p>While you can use margins to space out grid items, the nice thing about the <code>gap</code> feature is that you only get gaps <em>between</em> your items; you do not end up with additional space to account for at the start and end of the grid. Adding margins has typically been how we have created space between flex items. To create a regular space between flex items, we use a margin. If we do not want a margin at the start and end, we have to use a negative margin on the container to remove it.</p>\n\n<p>It would be really nice to have that gap feature in Flexbox as well, wouldn’t it? The good news is that we do have &mdash; it’s already implemented in Firefox and is in the Beta version of Chrome.</p>\n\n\n  <div data-component=\"FeaturePanel\" data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container hidden\"></div>\n\n\n<p>In the next CodePen, you can see all three options. The first are flex items using margins on each side. This creates a gap at the start and end of the flex container. The second uses a negative margin on the flex container to pull that margin outside of the border. The third dispenses with margins altogether and instead uses <code>gap: 20px</code>, creating a gap between items but not on the start and end edge.</p>\n\n<figure class=\"break-out\">\n\t<p data-height=\"500\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"GRoOOGm\"\n\tdata-user=\"rachelandrew\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen <a href=\"https://codepen.io/rachelandrew/pen/GRoOOGm\">Flex Items with margins and negative margin, and the gap feature</a> by Rachel Andrew (<a href=\"https://codepen.io/rachelandrew\">@rachelandrew</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/rachelandrew/pen/GRoOOGm\">Flex Items with margins and negative margin, and the gap feature</a> by Rachel Andrew (<a href=\"https://codepen.io/rachelandrew\">@rachelandrew</a>) on <a href=\"https://codepen.io\">CodePen</a>.</figcaption>\n</figure>\n\n<h4 id=\"mind-the-gap\">Mind The Gap</h4>\n\n<p>The Flexbox <code>gap</code> implementation highlights a few interesting things. Firstly, you may well remember that when the gap feature was first introduced to Grid Layout, the properties were:</p>\n\n<ul>\n<li><code>grid-gap</code></li>\n<li><code>grid-row-gap</code></li>\n<li><code>grid-column-gap</code></li>\n</ul>\n\n<p>These properties were shipped when grid first appeared in browsers. However, in much the same way as the alignment features (<code>justify-content</code>, <code>align-content</code>, <code>align-items</code>, and so on) first appeared in Flexbox and then became available to Grid (once it was decided the gap features were useful to more than grid), they were moved and renamed.</p>\n\n<p>Along with those alignment features, the gap properties are now in the Box Alignment specification. The specification deals with alignment and space distribution so is a natural home for them. To prevent us from having multiple properties prefixed with a spec name, they were also renamed to drop the <code>grid-</code> prefix.</p>\n\n<p>If you have the <code>grid-</code> prefixed versions in your code, you don’t need to worry. They have been kept as an alias of the properties so your code won’t break. For new projects, however, the unprefixed versions are implemented in all browsers.</p>\n\n<h4 id=\"detecting-gap-support-for-flexbox\">Detecting Gap Support For Flexbox</h4>\n\n<p>You might be thinking that you could use the gap feature in Flexbox and use Feature Queries to test for support by using a margin as fallback. Sadly, this isn’t the case because feature queries test for a name and value. For example, if I want to test for grid support, I can use the following query:</p>\n\n<pre><code class=\"language-css\">@supports (display: grid) {\n  .grid {\n    /* grid layout code here */\n  }\n}\n</code></pre>\n\n<p>If I were to test for <code>gap: 20px</code>, however, I would get a positive response in Chrome which currently does not support gap in Flexbox but <em>does</em> support it in Grid. All those feature queries do is check to see if the browser recognizes the property and value. They have no way to test for support within a particular layout mode. I raised this as <a href=\"https://github.com/w3c/csswg-drafts/issues/3559\">an issue</a> in the CSS WG, however, it turns out to not be an easy thing to fix, and there are limited places currently where we have this partial implementation problem.</p>\n\n<h3 id=\"aspect-ratio-unit\">Aspect Ratio Unit</h3>\n\n<p>Some things have an aspect ratio that we want to preserve, and image or a video for example. If you place an image or video directly on the page using the HTML <code>img</code> or <code>video</code> element, then it nicely keeps the aspect ratio it arrives with (unless you forcibly change the width or height). However, we sometimes want to add an element with no intrinsic aspect ratio while making one dimension flexible with the other retaining a specific aspect ratio. This most often happens when we embed a video with an iframe, however, you might also want to make perfectly square areas on your grid (something which also requires that one dimension can react to another).</p>\n\n<p>The way we currently deal with this is by way of the <a href=\"https://css-tricks.com/aspect-ratio-boxes/\">padding hack</a>. This uses the fact that padding in the block direction is copied from the inline direction when we use a percentage. It’s a not very elegant solution to the problem, but it works.</p>\n\n<p>The aspect ratio unit seeks to solve that by allowing us to specify an aspect ratio for a length. Chrome has implemented this in Canary, so you can take a look at the demo below using Canary if you enable the <em>Experimental Web Platform Features</em> flag.</p>\n\n<p>I have created a grid layout and set my grid items to use a <code>1 / 1</code> aspect ratio. The width of the items is determined by their grid column track size (as is flexible). The height is then being copied from that to make a square. Just for fun, I then rotated the items.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c0ce6091-4840-44f4-a09d-31009a7bf7ed/smashing-grid-aspect-ratio.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c0ce6091-4840-44f4-a09d-31009a7bf7ed/smashing-grid-aspect-ratio.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c0ce6091-4840-44f4-a09d-31009a7bf7ed/smashing-grid-aspect-ratio.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c0ce6091-4840-44f4-a09d-31009a7bf7ed/smashing-grid-aspect-ratio.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c0ce6091-4840-44f4-a09d-31009a7bf7ed/smashing-grid-aspect-ratio.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c0ce6091-4840-44f4-a09d-31009a7bf7ed/smashing-grid-aspect-ratio.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c0ce6091-4840-44f4-a09d-31009a7bf7ed/smashing-grid-aspect-ratio.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"A grid of square items\"\n\t\t/>\n    \n    </a>\n  \n\n  \n</figure>\n\n<p>In Canary, you can take a look in the demo and see how the items remain square even as their track grows and shrinks, due to the fact that the block size is using a <code>1/1</code> ratio of the inline size.</p>\n\n<figure class=\"break-out\">\n\t<p data-height=\"500\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"WNrRZaV\"\n\tdata-user=\"rachelandrew\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen <a href=\"https://codepen.io/rachelandrew/pen/WNrRZaV\">Grid using the aspect ratio for items (needs Chrome Canary and Exp Web Platform Features flag)</a> by Rachel Andrew (<a href=\"https://codepen.io/rachelandrew\">@rachelandrew</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/rachelandrew/pen/WNrRZaV\">Grid using the aspect ratio for items (needs Chrome Canary and Exp Web Platform Features flag)</a> by Rachel Andrew (<a href=\"https://codepen.io/rachelandrew\">@rachelandrew</a>) on <a href=\"https://codepen.io\">CodePen</a>.</figcaption>\n</figure>\n\n<h4 id=\"native-masonry-support\">Native Masonry Support</h4>\n\n<p>Developers often ask if CSS Grid can be used to create a Masonry- or Pinterest-styled layout. While some demos look a bit like that, Grid was never designed to do Masonry.</p>\n\n<p>To explain, you need to know what a Masonry layout is. In a typical Masonry layout, items display by row. Once the first row is filled, new items populate another row. However, if some of the items in the first row are shorter than others, the second-row items will rise up to fill the gap. The <a href=\"https://masonry.desandro.com/\">Masonry library</a> is how many people achieve this using JavaScript.</p>\n\n<p>If you try to create this layout using CSS Grid and auto-placement, you will see that you lose that block direction rearrangement of items. They lay themselves out in strict rows and columns because that is what a grid does.</p>\n\n<p>So could grid ever be used as a Masonry layout? One of the engineers at Mozilla thinks so, and has created a prototype of the functionality. You can test it out by using Firefox Nightly with the flag <strong>layout.css.grid-template-masonry-value.enabled</strong> set to <code>true</code> by going to <code>about:config</code> in the Firefox Nightly URL bar.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4b754c44-8acf-4992-ad63-c7982668c041/smashing-masonry.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4b754c44-8acf-4992-ad63-c7982668c041/smashing-masonry.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4b754c44-8acf-4992-ad63-c7982668c041/smashing-masonry.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4b754c44-8acf-4992-ad63-c7982668c041/smashing-masonry.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4b754c44-8acf-4992-ad63-c7982668c041/smashing-masonry.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4b754c44-8acf-4992-ad63-c7982668c041/smashing-masonry.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4b754c44-8acf-4992-ad63-c7982668c041/smashing-masonry.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Masonry Layout in Firefox Nightly\"\n\t\t/>\n    \n    </a>\n  \n\n  \n</figure>\n\n<figure class=\"break-out\">\n\t<p data-height=\"500\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"XWmVgwV\"\n\tdata-user=\"rachelandrew\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen <a href=\"https://codepen.io/rachelandrew/pen/XWmVgwV\">Proposed Masonry (needs Firefox Nightly and the )</a> by Rachel Andrew (<a href=\"https://codepen.io/rachelandrew\">@rachelandrew</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/rachelandrew/pen/XWmVgwV\">Proposed Masonry (needs Firefox Nightly and the )</a> by Rachel Andrew (<a href=\"https://codepen.io/rachelandrew\">@rachelandrew</a>) on <a href=\"https://codepen.io\">CodePen</a>.</figcaption>\n</figure>\n\n<p>While this is very exciting for anyone who has had to create this kind of layout using JavaScript, a number of us do wonder if the grid specification is the place to define this very specific layout. You can read some of my thoughts in my article “<a href=\"https://rachelandrew.co.uk/archives/2020/05/05/does-masonry-belong-in-the-css-grid-specification/\">Does Masonry Belong In The CSS Grid Specification?</a>”.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n\n\n\n<h3 id=\"subgrid\">Subgrid</h3>\n\n<p>We have had support for the <code>subgrid</code> value of <code>grid-template-columns</code> and <code>grid-template-rows</code> in Firefox for some time. Using this value means that you can inherit the size and number of tracks from a parent grid down through child grids. Essentially, as long as a grid item has <code>display: grid</code>, it can inherit the tracks that it covers rather than creating new column or row tracks.</p>\n\n<p>The feature can be tested in Firefox, and I have lots of examples that you can test out. The article “<a href=\"https://www.smashingmagazine.com/2019/05/display-grid-subgrid/\">Digging Into The Display Property: Grids All The Way Down</a>” explains how subgrid differs from nested grids, and “<a href=\"https://www.smashingmagazine.com/2018/07/css-grid-2/\">CSS Grid Level 2: Here Comes Subgrid</a>” introduces the specification. I also have a set of broken-down examples at “<a href=\"https://gridbyexample.com/examples/#css-grid-level-2-examples\">Grid by Example</a>”.</p>\n\n<p>However, the first question people have when I talk about subgrid is, &ldquo;When will it be available in Chrome?&rdquo; I still can’t give you a <em>when</em>, but some good news is on the horizon. On June 18th in a <a href=\"https://blog.chromium.org/2020/06/improving-chromiums-browser.html\">Chromium blog post</a>, it was announced that the Microsoft Edge team (now working on Chromium) are working to reimplement Grid Layout into the LayoutNG engine, i.e. Chromium’s next-generation layout engine. Part of this work will involve also added subgrid support.</p>\n\n<p>Adding features to browsers isn’t a quick process, however, the Microsoft team brought us Grid Layout in the first place &mdash; along with the early prefixed implementation that shipped in IE10. So this is great news and I look forward to being able to test the implementation when it ships in Beta.</p>\n\n<h3 id=\"prefers-reduced-data\"><code>prefers-reduced-data</code></h3>\n\n<p><strong>Not yet implemented in any browser</strong> &mdash; but with <a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=1051189\">a bug listed for Chrome</a> with recent activity&mdash; is the <code>prefers_reduced_data</code> media feature. This will allow CSS to check if the visitor has enabled data saving in their device and adjust the website accordingly. You might, for example, choose to avoid loading large images.</p>\n\n<pre><code class=\"language-css\">@media (prefers-reduced-data: reduce) {\n  .image {\n    background-image: url(\"images/placeholder.jpg\");\n  }\n}\n</code></pre>\n\n<p>The <code>prefers_reduced_data</code> media feature works in the same way as some of the already implemented <a href=\"https://drafts.csswg.org/mediaqueries-5/#mf-user-preferences\">user preference media features</a> in the Level 5 Media Queries Specification. For example, the media features <code>prefers_reduced_motion</code> and <code>prefers_color_scheme</code> allow you to test to see if the visitor has requested to reduce motion or a dark mode in their operating system and tailor your CSS to suit.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n\n\n\n<h3 id=\"marker\" style=\"text-transform: none;\"><code>::marker</code></h3> \n\n<p>The <code>::marker</code> pseudo-element allows us to target the list marker. At a very straightforward level, this means that we can target the list bullet and change its color or size. (This was previously impossible due to the fact that you could only target the entire list item &mdash; text and marker.)</p>\n\n<figure class=\"break-out\">\n\t<p data-height=\"500\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"mdVRXBx\"\n\tdata-user=\"rachelandrew\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen <a href=\"https://codepen.io/rachelandrew/pen/mdVRXBx\">::marker</a> by Rachel Andrew (<a href=\"https://codepen.io/rachelandrew\">@rachelandrew</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/rachelandrew/pen/mdVRXBx\">::marker</a> by Rachel Andrew (<a href=\"https://codepen.io/rachelandrew\">@rachelandrew</a>) on <a href=\"https://codepen.io\">CodePen</a>.</figcaption>\n</figure>\n\n<p>Support for <code>::marker</code> is already available in Firefox, and can now be found in Chrome Beta, too.</p>\n\n<p>In addition to styling bullets on actual lists, you can use <code>::marker</code> on other elements. In the example below, I have a heading which has been given <code>display: list-item</code> and therefore has a marker which I have replaced with an emoji.</p>\n\n<figure class=\"break-out\">\n\t<p data-height=\"500\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"pogRaRX\"\n\tdata-user=\"rachelandrew\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen <a href=\"https://codepen.io/rachelandrew/pen/pogRaRX\">display: list-item and ::marker</a> by Rachel Andrew (<a href=\"https://codepen.io/rachelandrew\">@rachelandrew</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/rachelandrew/pen/pogRaRX\">display: list-item and ::marker</a> by Rachel Andrew (<a href=\"https://codepen.io/rachelandrew\">@rachelandrew</a>) on <a href=\"https://codepen.io\">CodePen</a>.</figcaption>\n</figure>\n\n<p><strong>Note</strong>: <em>You can read more about <code>::marker</code> and other list-related things in my article “<a href=\"https://www.smashingmagazine.com/2019/07/css-lists-markers-counters/\">CSS Lists, Markers and Counters</a>” here on Smashing Magazine.</em></p>\n\n<h3 id=\"please-test-new-features\">Please Test New Features</h3>\n\n<p>While it’s fun to have a little peek into what is coming up, I recommend testing out the implementations if you have a use case for any of these things. You may well find a bug or something that doesn’t work as you expect. Browser vendors and the CSS Working Group would love to know. If you think you have found a bug in a browser &mdash; perhaps you are testing <code>::marker</code> in Chrome and find it displays differently to the implementation in Firefox &mdash; then raise an issue with the browser: “<a href=\"https://web.dev/how-to-file-a-good-bug/\">How To File A Good Bug</a>” explains how. If you think that the specification could do something it doesn’t yet, then raise an issue against the specification over at the <a href=\"https://github.com/w3c/csswg-drafts/issues\">CSS Working Group GitHub repository</a>.</p>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\">\n  <span>(il)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        ",
      "content": "Things move a lot faster than they used to in terms of the implementation of Web Platform features, and this post is a round-up of news about CSS features that are making their way into the platform. If you are the sort of person who doesn’t like reading about things if you can’t use them now, then this article probably isn’t for you &mdash; we have many others for you to enjoy instead!",
      "contentSnippet": "Things move a lot faster than they used to in terms of the implementation of Web Platform features, and this post is a round-up of news about CSS features that are making their way into the platform. If you are the sort of person who doesn’t like reading about things if you can’t use them now, then this article probably isn’t for you &mdash; we have many others for you to enjoy instead!",
      "guid": "https://www.smashingmagazine.com/2020/07/css-news-july-2020/",
      "isoDate": "2020-07-07T10:30:00.000Z"
    },
    {
      "creator": "Aleem Isiaka",
      "title": "Understanding Plugin Development In Gatsby",
      "link": "https://www.smashingmagazine.com/2020/07/understanding-plugin-development-gatsby/",
      "pubDate": "Mon, 06 Jul 2020 14:30:00 +0000",
      "author": "Aleem Isiaka",
      "content:encoded": "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2020/07/understanding-plugin-development-gatsby/\" />\n              <title>Understanding Plugin Development In Gatsby</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>Understanding Plugin Development In Gatsby</h1>\n                  \n                    \n                    <address>Aleem Isiaka</address>\n                  \n                  <time datetime=\"2020-07-06T14:30:00&#43;00:00\" class=\"op-published\">2020-07-06T14:30:00+00:00</time>\n                  <time datetime=\"2020-07-06T14:30:00&#43;00:00\" class=\"op-modified\">2020-07-10T03:35:48+00:00</time>\n                </header>\n                \n\n<p>Gatsby is a React-based static-site generator that has overhauled how websites and blogs are created. It supports the use of plugins to create custom functionality that is not available in the standard installation.</p>\n\n<p>In this post, I will introduce Gatsby plugins, discuss the types of Gatsby plugins that exist, differentiate between the forms of Gatsby plugins, and, finally, create a comment plugin that can be used on any Gatsby website, one of which we will install by the end of the tutorial.</p>\n\n<h3 id=\"what-is-a-gatsby-plugin\">What Is A Gatsby Plugin?</h3>\n\n<p><a href=\"https://www.gatsbyjs.org/\">Gatsby</a>, as a static-site generator, <a href=\"https://www.gatsbyjs.org/features/\">has limits on what it can do</a>. Plugins are means to extend Gatsby with any feature not provided out of the box. We can achieve tasks like creating a <code>manifest.json</code> file for a progressive web app (PWA), embedding tweets on a page, logging page views, and much more on a Gatsby website using plugins.</p>\n\n<h3 id=\"types-of-gatsby-plugins\">Types Of Gatsby Plugins</h3>\n\n<p>There are two types of Gatsby plugins, local and external. Local plugins are developed in a Gatsby project directory, under the <code>/plugins</code> directory. External plugins are those available through npm or Yarn. Also, they may be on the same computer but linked using the <code>yarn link</code> or <code>npm link</code> command in a Gatsby website project.</p>\n\n\n  <div data-component=\"FeaturePanel\" data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container hidden\"></div>\n\n\n<h3 id=\"forms-of-gatsby-plugins\">Forms Of Gatsby Plugins</h3>\n\n<p>Plugins also exist in three primary forms and are defined by their use cases:</p>\n\n<ul>\n<li><strong>Source plugins</strong><br />\nThese kinds of plugins provide sources of data for a Gatsby website. Examples of these are <a href=\"https://www.gatsbyjs.org/packages/gatsby-source-filesystem\">gatsby-source-filesystem</a>, <a href=\"https://www.gatsbyjs.org/packages/gatsby-source-contentful/\">gatsby-source-contentful</a>, and <a href=\"https://www.gatsbyjs.org/packages/gatsby-source-wordpress/\">gatsby-source-wordpress</a>.</li>\n<li><strong>Transformer plugins</strong><br />\nThese kinds of plugins transform data from the sources of other plugins into a more usable and consumable form. Example include <a href=\"https://www.gatsbyjs.org/packages/gatsby-transformer-remark\">gatsby-transformer-remark</a>, <a href=\"https://www.gatsbyjs.org/packages/gatsby-transformer-json\">gatsby-transformer-json</a>, and <a href=\"https://www.gatsbyjs.org/packages/gatsby-transformer-sharp/\">gatsby-transformer-sharp</a>.</li>\n<li><strong>Generic plugins</strong><br />\nThese plugins do things beyond transforming and sourcing data. Notable example are <a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-mdx\">gatsby-plugin-mdx</a> and <a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-sharp\">gatsby-plugin-sharp</a>. We will be creating one in this post.</li>\n</ul>\n\n<h3 id=\"components-of-a-gatsby-plugin\">Components Of A Gatsby Plugin</h3>\n\n<p>To create a Gatsby plugin, we have to define some files:</p>\n\n<ul>\n<li><a href=\"https://www.gatsbyjs.org/docs/api-files-gatsby-node\"><code>gatsby-node.js</code></a><br />\nMakes it possible to listen to the build processes of Gatsby.</li>\n<li><a href=\"https://www.gatsbyjs.org/docs/api-files-gatsby-config\"><code>gatsby-config.js</code></a><br />\nMainly used for configuration and setup.</li>\n<li><a href=\"https://www.gatsbyjs.org/docs/api-files-gatsby-browser\"><code>gatsby-browser.js</code></a><br />\nAllows plugins to run code during one of the Gatsby’s processes in the browser.</li>\n<li><a href=\"https://www.gatsbyjs.org/docs/api-files-gatsby-ssr\"><code>gatsby-ssr.js</code></a><br />\nCustomizes and adds functionality to the server-side rendering (SSR) process.</li>\n</ul>\n\n<p>These files are referred to as API files in Gatsby’s documentation and should live in the root of a plugin’s directory, either local or external.</p>\n\n<p>Not all of these files are required to create a Gatsby plugin. In our case, we will be implementing only the <code>gatsby-node.js</code> and <code>gatsby-config.js</code> API files.</p>\n\n<h3 id=\"building-a-comment-plugin-for-gatsby\">Building A Comment Plugin For Gatsby</h3>\n\n<p>To learn how to develop a Gatsby plugin, we will create a comment plugin that is installable on any blog that runs on Gatsby. The full code for the plugin is <a href=\"https://github.com/limistah/gatsby-plugin-commentator\">on GitHub</a>.</p>\n\n<h4 id=\"serving-and-loading-comments\">Serving and Loading Comments</h4>\n\n<p>To serve comments on a website, we have to provide a server that allows for the saving and loading of comments. We will use an already available comment server at <code>gatsbyjs-comment-server.herokuapp.com</code> for this purpose.</p>\n\n<p>The server supports a <code>GET /comments</code> request for loading comments. <code>POST /comments</code> would save comments for the website, and it accepts the following fields as the body of the <code>POST /comments</code> request:</p>\n\n<ul>\n<li><code>content: [string]</code><br />\nThe comment itself,</li>\n<li><code>author: [string]</code><br />\nThe name of the comment’s author,</li>\n<li><code>website</code><br />\nThe website that the comment is being posted from,</li>\n<li><code>slug</code><br />\nThe slug for the page that the comment is meant for.</li>\n</ul>\n\n<h4 id=\"integrating-the-server-with-gatsby-using-api-files\">Integrating the Server With Gatsby Using API Files</h4>\n\n<p>Much like we do when <a href=\"https://www.gatsbyjs.org/tutorial/blog-netlify-cms-tutorial/\">creating a Gatsby blog</a>, to create an external plugin, we should start with <a href=\"https://github.com/gatsbyjs/gatsby-starter-plugin\">plugin boilerplate</a>.</p>\n\n<h5 id=\"initializing-the-folder\">Initializing the folder</h5>\n\n<p>In the command-line interace (CLI) and from any directory you are convenient with, let’s run the following command:</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-bash\">gatsby new gatsby-source-comment-server https://github.com/Gatsbyjs/gatsby-starter-plugin</code></pre>\n</div>\n\n<p>Then, change into the plugin directory, and open it in a code editor.</p>\n\n<h5 id=\"installing-axios-for-network-requests\">Installing axios for Network Requests</h5>\n\n<p>To begin, we will install the axios package to make web requests to the comments server:</p>\n\n<pre><code class=\"language-bash\">npm install axios --save\n// or\nyarn add axios</code></pre>\n\n<h5 id=\"adding-a-new-node-type\">Adding a New Node Type</h5>\n\n<p>Before pulling comments from the comments server, we need to define a new node type that the comments would extend. For this, in the plugin folder, our <code>gatsby-node.js</code> file should contain the code below:</p>\n\n<pre><code class=\"language-javascript\">exports.sourceNodes = async ({ actions }) =&gt; {\n  const { createTypes } = actions;\n  const typeDefs = `\n    type CommentServer implements Node {\n      _id: String\n      author: String\n      string: String\n      content: String\n      website: String\n      slug: String\n      createdAt: Date\n      updatedAt: Date\n    }\n  `;\n  createTypes(typeDefs);\n};</code></pre>\n\n<p>First, we pulled <a href=\"https://www.gatsbyjs.org/docs/actions/#createNode\"><code>actions</code></a> from the APIs provided by Gatsby. Then, we pulled out the <a href=\"https://www.gatsbyjs.org/docs/actions/#createTypes\"><code>createTypes</code></a> action, after which we defined a <code>CommentServer</code> type that extends Node.js. Then, we called <code>createTypes</code> with the new node type that we set.</p>\n\n<h5 id=\"fetching-comments-from-the-comments-server\">Fetching Comments From the Comments Server</h5>\n\n<p>Now, we can use axios to pull comments and then store them in the data-access layer as the <code>CommentServer</code> type. This action is called “node sourcing” in Gatsby.</p>\n\n<p>To source for new nodes, we have to implement the <a href=\"https://www.gatsbyjs.org/docs/node-apis/#sourceNodes\"><code>sourceNodes</code></a> API in <code>gatsby-node.js</code>. In our case, we would use axios to make network requests, then parse the data from the API to match a GraphQL type that we would define, and then create a <a href=\"https://www.gatsbyjs.org/docs/node-model/\">node</a> in the GraphQL layer of Gatsby using the <a href=\"https://www.gatsbyjs.org/docs/actions/#createNode\"><code>createNode</code></a> action.</p>\n\n<p>We can add the code below to the plugin’s <code>gatsby-node.js</code> API file, creating the functionality we’ve described:</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">const axios = require(\"axios\");\n\nexports.sourceNodes = async (\n  { actions, createNodeId, createContentDigest },\n  pluginOptions\n) =&gt; {\n  const { createTypes } = actions;\n  const typeDefs = `\n    type CommentServer implements Node {\n      _id: String\n      author: String\n      string: String\n      website: String\n      content: String\n      slug: String\n      createdAt: Date\n      updatedAt: Date\n    }\n  `;\n  createTypes(typeDefs);\n\n  const { createNode } = actions;\n  const { limit, website } = pluginOptions;\n  const _website = website || \"\";\n\n  const result = await axios({\n    url: `https://Gatsbyjs-comment-server.herokuapp.com/comments?limit=${_limit}&website=${_website}`,\n  });\n\n  const comments = result.data;\n\n  function convertCommentToNode(comment, { createContentDigest, createNode }) {\n    const nodeContent = JSON.stringify(comment);\n\n    const nodeMeta = {\n      id: createNodeId(`comments-${comment._id}`),\n      parent: null,\n      children: [],\n      internal: {\n        type: `CommentServer`,\n        mediaType: `text/html`,\n        content: nodeContent,\n        contentDigest: createContentDigest(comment),\n      },\n    };\n\n    const node = Object.assign({}, comment, nodeMeta);\n    createNode(node);\n  }\n\n  for (let i = 0; i &lt; comments.data.length; i++) {\n    const comment = comments.data[i];\n    convertCommentToNode(comment, { createNode, createContentDigest });\n  }\n};</code></pre>\n</div>\n\n<p>Here, we have imported the axios package, then set defaults in case our plugin’s options are not provided, and then made a request to the endpoint that serves our comments.</p>\n\n<p>We then defined a function to convert the comments into Gatsby nodes, using the action helpers provided by Gatsby. After this, we iterated over the fetched comments and called <code>convertCommentToNode</code> to convert the comments into Gatsby <a href=\"https://www.gatsbyjs.org/docs/node-model/\">nodes</a>.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n\n\n\n<h5 id=\"transforming-data-comments\">Transforming Data (Comments)</h5>\n\n<p>Next, we need to resolve the comments to posts. Gatsby has an API for that called <a href=\"https://www.gatsbyjs.org/docs/schema-customization/#createresolvers-api\"><code>createResolvers</code></a>. We can make this possible by appending the code below in the <code>gatsby-node.js</code> file of the plugin:</p>\n\n<pre><code class=\"language-javascript\">exports.createResolvers = ({ createResolvers }) =&gt; {\n  const resolvers = {\n    MarkdownRemark: {\n      comments: {\n        type: [\"CommentServer\"],\n        resolve(source, args, context, info) {\n          return context.nodeModel.runQuery({\n            query: {\n              filter: {\n                slug: { eq: source.fields.slug },\n              },\n            },\n            type: \"CommentServer\",\n            firstOnly: false,\n          });\n        },\n      },\n    },\n  };\n  createResolvers(resolvers);\n};</code></pre>\n\n<p>Here, we are extending <code>MarkdownRemark</code> to include a <code>comments</code> field. The newly added <code>comments</code> field will resolve to the <code>CommentServer</code> type, based on the slug that the comment was saved with and the slug of the post.</p>\n\n<h5 id=\"final-code-for-comment-sourcing-and-transforming\">Final Code for Comment Sourcing and Transforming</h5>\n\n<p>The final code for the <code>gatsby-node.js</code> file of our comments plugin should look like this:</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">const axios = require(\"axios\");\n\nexports.sourceNodes = async (\n  { actions, createNodeId, createContentDigest },\n  pluginOptions\n) =&gt; {\n  const { createTypes } = actions;\n  const typeDefs = `\n    type CommentServer implements Node {\n      _id: String\n      author: String\n      string: String\n      website: String\n      content: String\n      slug: String\n      createdAt: Date\n      updatedAt: Date\n    }\n  `;\n  createTypes(typeDefs);\n\n  const { createNode } = actions;\n  const { limit, website } = pluginOptions;\n  const _limit = parseInt(limit || 10000); // FETCH ALL COMMENTS\n  const _website = website || \"\";\n\n  const result = await axios({\n    url: `https://Gatsbyjs-comment-server.herokuapp.com/comments?limit=${_limit}&website=${_website}`,\n  });\n\n  const comments = result.data;\n\n  function convertCommentToNode(comment, { createContentDigest, createNode }) {\n    const nodeContent = JSON.stringify(comment);\n\n    const nodeMeta = {\n      id: createNodeId(`comments-${comment._id}`),\n      parent: null,\n      children: [],\n      internal: {\n        type: `CommentServer`,\n        mediaType: `text/html`,\n        content: nodeContent,\n        contentDigest: createContentDigest(comment),\n      },\n    };\n\n    const node = Object.assign({}, comment, nodeMeta);\n    createNode(node);\n  }\n\n  for (let i = 0; i &lt; comments.data.length; i++) {\n    const comment = comments.data[i];\n    convertCommentToNode(comment, { createNode, createContentDigest });\n  }\n};\n\nexports.createResolvers = ({ createResolvers }) =&gt; {\n  const resolvers = {\n    MarkdownRemark: {\n      comments: {\n        type: [\"CommentServer\"],\n        resolve(source, args, context, info) {\n          return context.nodeModel.runQuery({\n            query: {\n              filter: {\n                website: { eq: source.fields.slug },\n              },\n            },\n            type: \"CommentServer\",\n            firstOnly: false,\n          });\n        },\n      },\n    },\n  };\n  createResolvers(resolvers);\n};</code></pre>\n</div>\n\n<h5 id=\"saving-comments-as-json-files\">Saving Comments as JSON Files</h5>\n\n<p>We need to save the comments for page slugs in their respective JSON files. This makes it possible to fetch the comments on demand over HTTP without having to use a GraphQL query.</p>\n\n<p>To do this, we will implement the <code>createPageStatefully</code> API in the<code>gatsby-node.js</code> API file of the plugin. We will use the <code>fs</code> module to check whether the path exists before creating a file in it. The code below shows how we can implement this:</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">import fs from \"fs\"\nimport {resolve: pathResolve} from \"path\"\nexports.createPagesStatefully = async ({ graphql }) =&gt; {\n  const comments = await graphql(\n    `\n      {\n        allCommentServer(limit: 1000) {\n          edges {\n            node {\n              name\n              slug\n              _id\n              createdAt\n              content\n            }\n          }\n        }\n      }\n    `\n  )\n\n  if (comments.errors) {\n    throw comments.errors\n  }\n\n  const markdownPosts = await graphql(\n    `\n      {\n        allMarkdownRemark(\n          sort: { fields: [frontmatter___date], order: DESC }\n          limit: 1000\n        ) {\n          edges {\n            node {\n              fields {\n                slug\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const posts = markdownPosts.data.allMarkdownRemark.edges\n  const _comments = comments.data.allCommentServer.edges\n\n  const commentsPublicPath = pathResolve(process.cwd(), \"public/comments\")\n\n  var exists = fs.existsSync(commentsPublicPath) //create destination directory if it doesn't exist\n\n  if (!exists) {\n    fs.mkdirSync(commentsPublicPath)\n  }\n\n  posts.forEach((post, index) =&gt; {\n    const path = post.node.fields.slug\n    const commentsForPost = _comments\n      .filter(comment =&gt; {\n        return comment.node.slug === path\n      })\n      .map(comment =&gt; comment.node)\n\n    const strippedPath = path\n      .split(\"/\")\n      .filter(s =&gt; s)\n      .join(\"/\")\n    const _commentPath = pathResolve(\n      process.cwd(),\n      \"public/comments\",\n      `${strippedPath}.json`\n    )\n    fs.writeFileSync(_commentPath, JSON.stringify(commentsForPost))\n  })\n}</code></pre>\n</div>\n\n<p>First, we require the <code>fs</code>, and <code>resolve</code> the function of the <code>path</code> module. We then use the GraphQL helper to pull the comments that we stored earlier, to avoid extra HTTP requests. We remove the Markdown files that we created using the GraphQL helper. And then we check whether the comment path is not missing from the public path, so that we can create it before proceeding.</p>\n\n<p>Finally, we loop through all of the nodes in the Markdown type. We pull out the comments for the current posts and store them in the <code>public/comments</code> directory, with the post’s slug as the name of the file.</p>\n\n<p>The <code>.gitignore</code> in the root in a Gatsby website excludes the public path from being committed. Saving files in this directory is safe.</p>\n\n<p>During each rebuild, Gatsby would call this API in our plugin to fetch the comments and save them locally in JSON files.</p>\n\n<h4 id=\"rendering-comments\">Rendering Comments</h4>\n\n<p>To render comments in the browser, we have to use the <code>gatsby-browser.js</code> API file.</p>\n\n<h5 id=\"define-the-root-container-for-html\">Define the Root Container for HTML</h5>\n\n<p>In order for the plugin to identify an insertion point in a page, we would have to set an HTML element as the container for rendering and listing the plugin&rsquo;s components. We can expect that every page that requires it should have an HTML element with an ID set to <code>commentContainer</code>.</p>\n\n<h5 id=\"implement-the-route-update-api-in-the-gatsby-browser-js-file\">Implement the Route Update API in the gatsby-browser.js File</h5>\n\n<p>The best time to do the file fetching and component insertion is when a page has just been visited. The <code>onRouteUpdate</code> API provides this functionality and passes the <code>apiHelpers</code> and <code>pluginOpions</code> as arguments to the callback function.</p>\n\n<pre><code class=\"language-javascript\">exports.onRouteUpdate = async (apiHelpers, pluginOptions) =&gt; {\n  const { location, prevLocation } = apiHelpers\n}</code></pre>\n\n<h5 id=\"create-helper-that-creates-html-elements\">Create Helper That Creates HTML Elements</h5>\n\n<p>To make our code cleaner, we have to define a function that can create an HTML element, set its <code>className</code>, and add content. At the top of the <code>gatsby-browser.js</code> file, we can add the code below:</p>\n\n<pre><code class=\"language-javascript\">// Creates element, set class. innerhtml then returns it.\n function createEl (name, className, html = null) {\n  const el = document.createElement(name)\n  el.className = className\n  el.innerHTML = html\n  return el\n}</code></pre>\n\n<h5 id=\"create-header-of-comments-section\">Create Header of Comments Section</h5>\n\n<p>At this point, we can add a header into the insertion point of comments components, in the <code>onRouteUpdate</code> browser API . First, we would ensure that the element exists in the page, then create an element using the <code>createEl</code> helper, and then append it to the insertion point.</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">// ...\n\nexports.onRouteUpdate = async ({ location, prevLocation }, pluginOptions) =&gt; {\n  const commentContainer = document.getElementById(\"commentContainer\")\n  if (commentContainer && location.path !== \"/\") {\n    const header = createEl(\"h2\")\n    header.innerHTML = \"Comments\"\n    commentContainer.appendChild(header)\n  }\n}</code></pre>\n</div>\n\n<h5 id=\"listing-comments\">Listing Comments</h5>\n\n<p>To list comments, we would append a <code>ul</code> element to the component insertion point. We will use the <code>createEl</code> helper to achieve this, and set its <code>className</code> to <code>comment-list</code>:</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">exports.onRouteUpdate = async ({ location, prevLocation }, pluginOptions) =&gt; {\n  const commentContainer = document.getElementById(\"commentContainer\")\n  if (commentContainer && location.path !== \"/\") {\n    const header = createEl(\"h2\")\n    header.innerHTML = \"Comments\"\n    commentContainer.appendChild(header)\n    const commentListUl = createEl(\"ul\")\n    commentListUl.className = \"comment-list\"\n    commentContainer.appendChild(commentListUl)\n}</code></pre>\n</div>\n\n<p>Next, we need to render the comments that we have saved in the public directory to a <code>ul</code> element, inside of <code>li</code> elements. For this, we define a helper that fetches the comments for a page using the path name.</p>\n\n<pre><code class=\"language-javascript\">// Other helpers\nconst getCommentsForPage = async slug =&gt; {\n  const path = slug\n    .split(\"/\")\n    .filter(s =&gt; s)\n    .join(\"/\")\n  const data = await fetch(`/comments/${path}.json`)\n  return data.json()\n}\n// ... implements routeupdate below</code></pre>\n\n<p>We have defined a helper, named <code>getCommentsForPage</code>, that accepts paths and uses <code>fetch</code> to load the comments from the <code>public/comments</code> directory, before parsing them to JSON and returning them back to the calling function.</p>\n\n<p>Now, in our <code>onRouteUpdate</code> callback, we will load the comments:</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">// ... helpers\nexports.onRouteUpdate = async ({ location, prevLocation }, pluginOptions) =&gt; {\n  const commentContainer = document.getElementById(\"commentContainer\")\n  if (commentContainer && location.path !== \"/\") {\n    //... inserts header\n    const commentListUl = createEl(\"ul\")\n    commentListUl.className = \"comment-list\"\n    commentContainer.appendChild(commentListUl)\n   const comments = await getCommentsForPage(location.pathname)\n}</code></pre>\n</div>\n\n<p>Next, let’s define a helper to create the list items:</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">// .... other helpers\n\nconst getCommentListItem = comment =&gt; {\n  const li = createEl(\"li\")\n  li.className = \"comment-list-item\"\n\n  const nameCont = createEl(\"div\")\n  const name = createEl(\"strong\", \"comment-author\", comment.name)\n  const date = createEl(\n    \"span\",\n    \"comment-date\",\n    new Date(comment.createdAt).toLocaleDateString()\n  )\n  // date.className=\"date\"\n  nameCont.append(name)\n  nameCont.append(date)\n\n  const commentCont = createEl(\"div\", \"comment-cont\", comment.content)\n\n  li.append(nameCont)\n  li.append(commentCont)\n  return li\n}\n\n// ... onRouteUpdateImplementation</code></pre>\n</div>\n\n<p>In the snippet above, we created an <code>li</code> element with a <code>className</code> of <code>comment-list-item</code>, and a <code>div</code> for the comment’s author and time. We then created another <code>div</code> for the comment’s text, with a <code>className</code> of <code>comment-cont</code>.</p>\n\n<p>To render the list items of comments, we iterate through the comments fetched using the <code>getComments</code> helper, and then call the <code>getCommentListItem</code> helper to create a list item. Finally, we append it to the <code>&lt;ul class=&quot;comment-list&quot;&gt;&lt;/ul&gt;</code> element:</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">// ... helpers\nexports.onRouteUpdate = async ({ location, prevLocation }, pluginOptions) =&gt; {\n  const commentContainer = document.getElementById(\"commentContainer\")\n  if (commentContainer && location.path !== \"/\") {\n    //... inserts header\n    const commentListUl = createEl(\"ul\")\n    commentListUl.className = \"comment-list\"\n    commentContainer.appendChild(commentListUl)\n   const comments = await getCommentsForPage(location.pathname)\n    if (comments && comments.length) {\n      comments.map(comment =&gt; {\n        const html = getCommentListItem(comment)\n        commentListUl.append(html)\n        return comment\n      })\n    }\n}</code></pre>\n</div>\n\n<div class=\"sponsors__lead-place\"></div>\n\n\n\n\n<h4 id=\"posting-a-comment\">Posting a Comment</h4>\n\n<h5 id=\"post-comment-form-helper\">Post Comment Form Helper</h5>\n\n<p>To enable users to post a comment, we have to make a <code>POST</code> request to the <code>/comments</code> endpoint of the API. We need a form in order to create this form. Let’s create a form helper that returns an HTML form element.</p>\n\n<pre><code class=\"language-javascript\">// ... other helpers\nconst createCommentForm = () =&gt; {\n  const form = createEl(\"form\")\n  form.className = \"comment-form\"\n  const nameInput = createEl(\"input\", \"name-input\", null)\n  nameInput.type = \"text\"\n  nameInput.placeholder = \"Your Name\"\n  form.appendChild(nameInput)\n  const commentInput = createEl(\"textarea\", \"comment-input\", null)\n  commentInput.placeholder = \"Comment\"\n  form.appendChild(commentInput)\n  const feedback = createEl(\"span\", \"feedback\")\n  form.appendChild(feedback)\n  const button = createEl(\"button\", \"comment-btn\", \"Submit\")\n  button.type = \"submit\"\n  form.appendChild(button)\n  return form\n}</code></pre>\n\n<p>The helper creates an input element with a <code>className</code> of <code>name-input</code>, a <code>textarea</code> with a <code>className</code> of <code>comment-input</code>, a <code>span</code> with a <code>className</code> of <code>feedback</code>, and a button with a <code>className</code> of <code>comment-btn</code>.</p>\n\n<h5 id=\"append-the-post-comment-form\">Append the Post Comment Form</h5>\n\n<p>We can now append the form into the insertion point, using the <code>createCommentForm</code> helper:</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">// ... helpers\nexports.onRouteUpdate = async ({ location, prevLocation }, pluginOptions) =&gt; {\n  const commentContainer = document.getElementById(\"commentContainer\")\n  if (commentContainer && location.path !== \"/\") {\n    // insert header\n    // insert comment list\n    commentContainer.appendChild(createCommentForm())\n  }\n}</code></pre>\n</div>\n\n<h4 id=\"post-comments-to-server\">Post Comments to Server</h4>\n\n<p>To post a comment to the server, we have to tell the user what is happening &mdash; for example, either that an input is required or that the API returned an error. The <code>&lt;span class=&quot;feedback&quot; /&gt;</code> element is meant for this. To make it easier to update this element, we create a helper that sets the element and inserts a new class based on the type of the feedback (whether error, info, or success).</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">// ... other helpers\n// Sets the class and text of the form feedback\nconst updateFeedback = (str = \"\", className) =&gt; {\n  const feedback = document.querySelector(\".feedback\")\n  feedback.className = `feedback ${className ? className : \"\"}`.trim()\n  feedback.innerHTML = str\n  return feedback\n}\n// onRouteUpdate callback</code></pre>\n</div>\n\n<p>We are using the <code>querySelector</code> API to get the element. Then we set the class by updating the <code>className</code> attribute of the element. Finally, we use <code>innerHTML</code> to update the contents of the element before returning it.</p>\n\n<h5 id=\"submitting-a-comment-with-the-comment-form\">Submitting a Comment With the Comment Form</h5>\n\n<p>We will listen to the <code>onSubmit</code> event of the comment form to determine when a user has decided to submit the form. We don’t want empty data to be submitted, so we would set a feedback message and disable the submit button until needed:</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">exports.onRouteUpdate = async ({ location, prevLocation }, pluginOptions) =&gt; {\n  // Appends header\n  // Appends comment list\n  // Appends comment form\n  document\n    .querySelector(\"body .comment-form\")\n    .addEventListener(\"submit\", async function (event) {\n      event.preventDefault()\n      updateFeedback()\n      const name = document.querySelector(\".name-input\").value\n      const comment = document.querySelector(\".comment-input\").value\n      if (!name) {\n        return updateFeedback(\"Name is required\")\n      }\n      if (!comment) {\n        return updateFeedback(\"Comment is required\")\n      }\n      updateFeedback(\"Saving comment\", \"info\")\n      const btn = document.querySelector(\".comment-btn\")\n      btn.disabled = true\n      const data = {\n        name,\n        content: comment,\n        slug: location.pathname,\n        website: pluginOptions.website,\n      }\n\n      fetch(\n        \"https://cors-anywhere.herokuapp.com/gatsbyjs-comment-server.herokuapp.com/comments\",\n        {\n          body: JSON.stringify(data),\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      ).then(async function (result) {\n        const json = await result.json()\n        btn.disabled = false\n\n        if (!result.ok) {\n          updateFeedback(json.error.msg, \"error\")\n        } else {\n          document.querySelector(\".name-input\").value = \"\"\n          document.querySelector(\".comment-input\").value = \"\"\n          updateFeedback(\"Comment has been saved!\", \"success\")\n        }\n      }).catch(async err =&gt; {\n        const errorText = await err.text()\n        updateFeedback(errorText, \"error\")\n      })\n    })\n}</code></pre>\n</div>\n\n<p>We use <code>document.querySelector</code> to get the form from the page, and we listen to its <code>submit</code> event. Then, we set the feedback to an empty string, from whatever it might have been before the user attempted to submit the form.</p>\n\n<p>We also check whether the name or comment field is empty, setting an error message accordingly.</p>\n\n<p>Next, we make a <code>POST</code> request to the comments server at the <code>/comments</code> endpoint, listening for the response. We use the feedback to tell the user whether there was an error when they created the comment, and we also use it to tell them whether the comment’s submission was successful.</p>\n\n<h5 id=\"adding-a-style-sheet\">Adding a Style Sheet</h5>\n\n<p>To add styles to the component, we have to create a new file, <code>style.css</code>, at the root of our plugin folder, with the following content:</p>\n\n<pre><code class=\"language-css\">#commentContainer {\n}\n\n.comment-form {\n  display: grid;\n}</code></pre>\n\n<p>At the top of <code>gatsby-browser.js</code>, import it like this:</p>\n\n<pre><code class=\"language-javascript\">import \"./style.css\"</code></pre>\n\n<p>This style rule will make the form’s components occupy 100% of the width of their container.</p>\n\n<p>Finally, all of the components for our comments plugin are complete. Time to install and test this fantastic plugin we have built.</p>\n\n<h3 id=\"test-the-plugin\">Test the Plugin</h3>\n\n<h4 id=\"create-a-gatsby-website\">Create a Gatsby Website</h4>\n\n<p>Run the following command from a directory one level above the plugin’s directory:</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-bash\">// PARENT\n// ├── PLUGIN\n// ├── Gatsby Website\n\ngatsby new private-blog https://github.com/gatsbyjs/gatsby-starter-blog</code></pre>\n</div>\n\n<h4 id=\"install-the-plugin-locally-and-add-options\">Install the Plugin Locally and Add Options</h4>\n\n<h5 id=\"link-with-npm\">Link With npm</h5>\n\n<p>Next, change to the blog directory, because we need to create a link for the new plugin:</p>\n\n<pre><code class=\"language-bash\">cd /path/to/blog\nnpm link ../path/to/plugin/folder</code></pre>\n\n<h5 id=\"add-to-gatsby-config-js\">Add to gatsby-config.js</h5>\n\n<p>In the <code>gatsby-config.js</code> file of the blog folder, we should add a new object that has a <code>resolve</code> key and that has <code>name-of-plugin-folder</code> as the value of the plugin’s installation. In this case, the name is <code>gatsby-comment-server-plugin</code>:</p>\n\n<pre><code class=\"language-javascript\">module.exports = {\n  // ...\n  plugins: [\n    // ...\n    \"gatsby-plugin-dom-injector\",\n    {\n      resolve: \"gatsby-comment-server-plugin\",\n      options: {website: \"https://url-of-website.com\"},\n    },\n  ],\n}</code></pre>\n\n<p>Notice that the plugin accepts a <code>website</code> option to distinguish the source of the comments when fetching and saving comments.</p>\n\n<h5 id=\"update-the-blog-post-component\">Update the blog-post Component</h5>\n\n<p>For the insertion point, we will add <code>&lt;section class=&quot;comments&quot; id=&quot;commentContainer&quot;&gt;</code> to the post template component at <code>src/templates/blog-post.js</code> of the blog project. This can be inserted at any suitable position; I have inserted mine after the last <code>hr</code> element and before the <code>footer</code>.</p>\n\n<h5 id=\"start-the-development-server\">Start the Development Server</h5>\n\n<p>Finally, we can start the development server with <code>gatsby develop</code>, which will make our website available locally at <code>http://localhost:8000</code>. Navigating to any post page, like <code>http://localhost:8000/new-beginnings</code>, will reveal the comment at the insertion point that we specified above.</p>\n\n<h5 id=\"create-a-comment\">Create a Comment</h5>\n\n<p>We can create a comment using the comment form, and it will provide helpful feedback as we interact with it.</p>\n\n<h5 id=\"list-comments\">List Comments</h5>\n\n<p>To list newly posted comments, we have to restart the server, because our content is static.</p>\n\n<h3 id=\"conclusion\">Conclusion</h3>\n\n<p>In this tutorial, we have introduced Gatsby plugins and demonstrated how to create one.</p>\n\n<p>Our plugin uses different APIs of Gatsby and its own API files to provide comments for our website, illustrating how we can use plugins to add significant functionality to a Gatsby website.</p>\n\n<p>Although we are pulling from a live server, the plugin is saving the comments in JSON files. We could make the plugin load comments on demand from the API server, but that would defeat the notion that our blog is a static website that does not require dynamic content.</p>\n\n<p>The plugin built in this post exists as an <a href=\"https://www.npmjs.com/package/gatsby-plugin-commentator\">npm module</a>, while the full code is <a href=\"https://github.com/limistah/gatsby-plugin-commentator\">on GitHub</a>.</p>\n\n<h4 id=\"references\">References:</h4>\n\n<ul>\n<li><a href=\"https://www.gatsbyjs.org/docs/\">Documentation</a>, Gatsby</li>\n<li><a href=\"https://github.com/limistah/gatsby-source-comment-server\">Gatsby Source Comment Server</a> (plugin source), GitHub</li>\n<li><a href=\"https://github.com/limistah/gatsby-plugin-commentator\">Gatsby Plugin Commentator</a> (repository), GitHub</li>\n</ul>\n\n<h4 id=\"resources\">Resources:</h4>\n\n<ul>\n<li><a href=\"https://github.com/limistah/sm-gatsby-private-blog-tutorial\">Gatsby’s blog starter</a>, GitHub<br />\nA private blog repository available for you to create a Gatsby website to consume the plugin.</li>\n<li><a href=\"https://private-blog.netlify.app/\">Gatsby Starter Blog</a>, Netlify<br />\nThe blog website for this tutorial, deployed on Netlify for testing.</li>\n</ul>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\">\n  <span>(yk)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        ",
      "content": "Gatsby is a React-based static-site generator that has overhauled how websites and blogs are created. It supports the use of plugins to create custom functionality that is not available in the standard installation.\nIn this post, I will introduce Gatsby plugins, discuss the types of Gatsby plugins that exist, differentiate between the forms of Gatsby plugins, and, finally, create a comment plugin that can be used on any Gatsby website, one of which we will install by the end of the tutorial.",
      "contentSnippet": "Gatsby is a React-based static-site generator that has overhauled how websites and blogs are created. It supports the use of plugins to create custom functionality that is not available in the standard installation.\nIn this post, I will introduce Gatsby plugins, discuss the types of Gatsby plugins that exist, differentiate between the forms of Gatsby plugins, and, finally, create a comment plugin that can be used on any Gatsby website, one of which we will install by the end of the tutorial.",
      "guid": "https://www.smashingmagazine.com/2020/07/understanding-plugin-development-gatsby/",
      "isoDate": "2020-07-06T14:30:00.000Z"
    },
    {
      "creator": "Dion Almaer",
      "title": "Make Your Sites Fast, Accessible And Secure With Help From Google",
      "link": "https://www.smashingmagazine.com/2020/07/web-dev-live-google-event-2020/",
      "pubDate": "Mon, 06 Jul 2020 14:00:00 +0000",
      "author": "Dion Almaer",
      "content:encoded": "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2020/07/web-dev-live-google-event-2020/\" />\n              <title>Make Your Sites Fast, Accessible And Secure With Help From Google</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>Make Your Sites Fast, Accessible And Secure With Help From Google</h1>\n                  \n                    \n                    <address>Dion Almaer</address>\n                  \n                  <time datetime=\"2020-07-06T14:00:00&#43;00:00\" class=\"op-published\">2020-07-06T14:00:00+00:00</time>\n                  <time datetime=\"2020-07-06T14:00:00&#43;00:00\" class=\"op-modified\">2020-07-10T03:35:48+00:00</time>\n                </header>\n                \n\n<p>Earlier this year, the Chrome team <a href=\"https://blog.chromium.org/2020/05/introducing-web-vitals-essential-metrics.html\">announced</a> the <a href=\"http://web.dev/vitals?utm_source=SmashingMag&amp;utm_medium=Fpost\">Web Vitals</a> initiative to provide unified guidance, metrics, and tools to help developers deliver great user experiences on the web. The Google Search team also <a href=\"https://webmasters.googleblog.com/2020/05/evaluating-page-experience.html\">recently announced</a> that they will be evaluating page experience as a ranking criteria, and will include <a href=\"https://web.dev/vitals/#core-web-vitals?utm_source=SmashingMag&amp;utm_medium=Fpost\">Core Web Vitals</a> metrics as its foundation.</p>\n\n<p>The three pillars of 2020 Core Web Vitals are loading, interactivity, and visual stability of page content, which are captured by the following metrics:</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e2f84021-bb49-441f-bfdf-4b72c01ce3ec/2-web-dev-live-google-event.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e2f84021-bb49-441f-bfdf-4b72c01ce3ec/2-web-dev-live-google-event.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e2f84021-bb49-441f-bfdf-4b72c01ce3ec/2-web-dev-live-google-event.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e2f84021-bb49-441f-bfdf-4b72c01ce3ec/2-web-dev-live-google-event.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e2f84021-bb49-441f-bfdf-4b72c01ce3ec/2-web-dev-live-google-event.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e2f84021-bb49-441f-bfdf-4b72c01ce3ec/2-web-dev-live-google-event.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e2f84021-bb49-441f-bfdf-4b72c01ce3ec/2-web-dev-live-google-event.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"An illustration of the three metrics explained: Largest Contentful Paint, First Input Delay and Cumulative Layout Shift\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      <a href='https://web.dev/vitals/#core-web-vitals?utm_source=SmashingMag&utm_medium=Fpost'>Core Web Vitals 2020</a> (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e2f84021-bb49-441f-bfdf-4b72c01ce3ec/2-web-dev-live-google-event.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<ul>\n<li><strong><a href=\"https://web.dev/lcp/?utm_source=SmashingMag&amp;utm_medium=Fpost\">Largest Contentful Paint</a></strong> measures perceived load speed and marks the point in the page load timeline when the page&rsquo;s main content has likely loaded.</li>\n<li><strong><a href=\"https://web.dev/fid/?utm_source=SmashingMag&amp;utm_medium=Fpost\">First Input Delay</a></strong> measures responsiveness and quantifies the experience users feel when trying to first interact with the page.</li>\n<li><strong><a href=\"https://web.dev/cls/?utm_source=SmashingMag&amp;utm_medium=Fpost\">Cumulative Layout Shift</a></strong> measures visual stability and quantifies the amount of unexpected movement of page content.</li>\n</ul>\n\n<p>At web.dev LIVE, we shared best practices on how to <a href=\"https://youtu.be/AQqFZ5t8uNc\">optimize for Core Web Vitals</a> and how to use <a href=\"https://youtu.be/OHb3xZIqUeU\">Chrome DevTools to explore your site or app’s vitals values</a>. We also shared plenty of other performance-related talks that you can find at <a href=\"http://web.dev/live?utm_source=SmashingMag&amp;utm_medium=Fpost\">web.dev/live</a> in the Day 1 schedule.</p>\n\n<h3 id=\"tooling-report\">tooling.report</h3>\n\n<p>The web is a complex platform and developing for it can be challenging at the best of times. Build tools aim to make a web developer’s life easier, but as a result build tools end up being quite complex themselves.</p>\n\n<p>To help web developers <em>and</em> tooling authors conquer the complexity of the web, we built <a href=\"http://tooling.report\">tooling.report</a>. It’s a website that helps you choose the right build tool for your next project, decide if migrating from one tool to another is worth it, or figure out how to incorporate best practices into your tooling configuration and codebase. We aim to explain the tradeoffs involved when choosing a build tool and document how to follow best practices with any given build tool.</p>\n\n<p>We designed a suite of tests for the report based on what we believe represents the best practices for web development. The tests allow us to determine which build tool allows you to follow what best practice and we worked with the build tool authors to make sure we used their tools correctly and represented them fairly.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fae26af4-a28a-4573-958c-d4a14463b60b/1-web-dev-live-google-event.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fae26af4-a28a-4573-958c-d4a14463b60b/1-web-dev-live-google-event.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fae26af4-a28a-4573-958c-d4a14463b60b/1-web-dev-live-google-event.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fae26af4-a28a-4573-958c-d4a14463b60b/1-web-dev-live-google-event.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fae26af4-a28a-4573-958c-d4a14463b60b/1-web-dev-live-google-event.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fae26af4-a28a-4573-958c-d4a14463b60b/1-web-dev-live-google-event.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fae26af4-a28a-4573-958c-d4a14463b60b/1-web-dev-live-google-event.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"An overview and comparison between the well-known build toolks webpack v4, Rollup v2, Parcel v2 and Browserify&#43;Gulp\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Comparison report of current set of libraries on <a href='http://tooling.report'>tooling.report</a> (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fae26af4-a28a-4573-958c-d4a14463b60b/1-web-dev-live-google-event.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>The initial release of tooling.report covers webpack v4, Rollup v2, and Parcel v2 as well as Browserify+Gulp, which we believe are the most popular build tools right now. We built tooling.report with the flexibility of adding more build tools and additional tests with help from the community.</p>\n\n<p>So if you think a best practice that should be tested or is missing, please <a href=\"https://github.com/GoogleChromeLabs/tooling.report/issues/new\">propose it in a GitHub issue</a> and if you’re up for writing adding a new tool we did not include in the initial set, we welcome you to <a href=\"https://github.com/GoogleChromeLabs/tooling.report/blob/dev/CONTRIBUTING.md\">contribute</a>!</p>\n\n<p>Meanwhile, you can read more about our <a href=\"http://web.dev/introducing-tooling-report?utm_source=SmashingMag&amp;utm_medium=Fpost\">approach towards building tooling.report</a> and watch our <a href=\"https://youtu.be/vsMJiNtQWvw\">session from web.dev LIVE</a> for more.</p>\n\n<h3 id=\"latest-in-chrome-devtools-and-lighthouse-6-0\">Latest In Chrome DevTools And Lighthouse 6.0</h3>\n\n<p>Most web developers spend a lot of time of their day in their developer tools so we want to ensure that our tools enable greater productivity, whether it’s for debugging or for auditing and fixing issues to improve user experience.</p>\n\n<h4 id=\"chrome-devtools-new-issues-tab-color-deficiency-emulator-and-web-vitals-support\">Chrome Devtools: New Issues Tab, Color Deficiency Emulator And Web Vitals support</h4>\n\n<p>One of the most powerful features of Chrome DevTools is its ability to spot issues on a webpage and bring them to the developer’s attention &mdash; this is most pertinent as we move into the next phase of a <a href=\"https://blog.chromium.org/2020/01/building-more-private-web-path-towards.html\">privacy-first web</a>. To reduce notification fatigue and clutter of the Console, we’ve launched the “<a href=\"https://developers.google.com/web/tools/chrome-devtools/issues\">Issues Tab</a>” that focuses on three types of critical issues to start with: <a href=\"https://web.dev/samesite-cookies-explained?utm_source=SmashingMag&amp;utm_medium=Fpost\">Cookie problems</a>, <a href=\"https://developers.google.com/web/fundamentals/security/prevent-mixed-content/what-is-mixed-content\">Mixed content</a> and <a href=\"https://web.dev/coop-coep/?utm_source=SmashingMag&amp;utm_medium=Fpost\">COEP issues</a>. Watch our session on <a href=\"https://youtu.be/1TbkSxQb4bI\">finding and fixing problems with the Issues Tab</a> for more.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dad8f02d-56fd-4943-8897-a14f16ec3686/4-web-dev-live-google-event.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dad8f02d-56fd-4943-8897-a14f16ec3686/4-web-dev-live-google-event.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dad8f02d-56fd-4943-8897-a14f16ec3686/4-web-dev-live-google-event.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dad8f02d-56fd-4943-8897-a14f16ec3686/4-web-dev-live-google-event.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dad8f02d-56fd-4943-8897-a14f16ec3686/4-web-dev-live-google-event.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dad8f02d-56fd-4943-8897-a14f16ec3686/4-web-dev-live-google-event.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dad8f02d-56fd-4943-8897-a14f16ec3686/4-web-dev-live-google-event.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"A screenshot of the Chrome DevTools timeline where developers can track and measure metrics, performance and more\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      New <a href='https://developers.google.com/web/tools/chrome-devtools/issues'>Issues Tab</a> in Chrome DevTools (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dad8f02d-56fd-4943-8897-a14f16ec3686/4-web-dev-live-google-event.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Moreover, with <a href=\"https://web.dev/vitals/#core-web-vitals?utm_source=SmashingMag&amp;utm_medium=Fpost\">Core Web Vitals</a> becoming one of the most critical sets of metrics that we believe every developer must track and measure, we want to ensure developers are able to easily track how they perform against these thresholds. So we’ve added the three metrics in the <a href=\"https://youtu.be/OHb3xZIqUeU\">Chrome DevTools timeline</a>.</p>\n\n<p>And finally, with an increasing number of developers focusing on accessibility, we also introduced a <a href=\"https://twitter.com/mathias/status/1237393102635012101?\">Color Vision Deficiency Emulator</a> that allows developers to simulate vision deficiencies, including blurred vision &amp; various other types of color blindness. We’re super excited to bring this feature to developers who’re looking to make their websites more color-blind friendly and you can see more about this and many other features in our session on <a href=\"https://youtu.be/6yrJZHqJe2k\">What’s the latest in DevTools</a>.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8945bcbb-c4b7-41d6-8e8e-827c3cf4fa65/5-web-dev-live-google-event.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8945bcbb-c4b7-41d6-8e8e-827c3cf4fa65/5-web-dev-live-google-event.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8945bcbb-c4b7-41d6-8e8e-827c3cf4fa65/5-web-dev-live-google-event.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8945bcbb-c4b7-41d6-8e8e-827c3cf4fa65/5-web-dev-live-google-event.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8945bcbb-c4b7-41d6-8e8e-827c3cf4fa65/5-web-dev-live-google-event.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8945bcbb-c4b7-41d6-8e8e-827c3cf4fa65/5-web-dev-live-google-event.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8945bcbb-c4b7-41d6-8e8e-827c3cf4fa65/5-web-dev-live-google-event.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"A screenshot from YouTube of a session featuring Jake Archibald and Surma\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      New <a href='https://twitter.com/mathias/status/1237393102635012101?'>Color Vision Deficiency Emulator</a> in Chrome DevTools (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8945bcbb-c4b7-41d6-8e8e-827c3cf4fa65/5-web-dev-live-google-event.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h4 id=\"lighthouse-6-0-new-metrics-core-web-vitals-lab-measurement-an-updated-performance-score-and-exciting-new-audits\">Lighthouse 6.0: New Metrics, Core Web Vitals Lab Measurement, An Updated Performance Score, And Exciting New Audits</h4>\n\n<p><a href=\"https://developers.google.com/web/tools/lighthouse\">Lighthouse</a> is an open-source automated tool that helps developers improve their site’s performance. In its latest version, we focused on providing insights based on metrics that give you a balanced view of your user experience quality against critical dimensions.</p>\n\n<p>To ensure consistency, we’ve added support for the Core Web Vitals &mdash; <a href=\"https://web.dev/lcp/?utm_source=SmashingMag&amp;utm_medium=Fpost\">LCP</a>, <a href=\"https://web.dev/tbt/?utm_source=SmashingMag&amp;utm_medium=Fpost\">TBT</a> (lab equivalent for <a href=\"https://web.dev/fid/?utm_source=SmashingMag&amp;utm_medium=Fpost\">FID</a> as Lighthouse is a lab tool) and <a href=\"https://web.dev/cls/?utm_source=SmashingMag&amp;utm_medium=Fpost\">CLS</a> &mdash; and removed three old ones: <a href=\"https://web.dev/first-meaningful-paint/?utm_source=SmashingMag&amp;utm_medium=Fpost\">First Meaningful Paint</a>, <a href=\"https://web.dev/first-cpu-idle/\">First CPU Idle</a>, and <a href=\"https://web.dev/lighthouse-max-potential-fid/?utm_source=SmashingMag&amp;utm_medium=Fpost\">Max Potential FID</a>. These removals are due to considerations like metric variability and newer metrics offering better reflections of the part of user experience that we&rsquo;re trying to measure. Additionally, we also made some <a href=\"https://web.dev/lighthouse-whats-new-6.0/#score?utm_source=SmashingMag&amp;utm_medium=Fpost\">adjustments</a> to the weights based on user feedback.</p>\n\n<p>We also added a super nifty <a href=\"https://googlechrome.github.io/lighthouse/scorecalc/\">scoring calculator</a> to help you explore your performance scoring, by providing a comparison between version v5 and v6 scores. When you run an audit with Lighthouse 6.0, the report comes with a link to the calculator with your results populated.</p>\n\n<p>And finally, we added a bunch of <a href=\"https://web.dev/lighthouse-whats-new-6.0/#new-audits?utm_source=SmashingMag&amp;utm_medium=Fpost\">useful new audits</a>, with a focus on JavaScript Analysis and accessibility.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/14255db6-d350-4c45-b5af-7a529d69bda4/3-web-dev-live-google-event.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/14255db6-d350-4c45-b5af-7a529d69bda4/3-web-dev-live-google-event.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/14255db6-d350-4c45-b5af-7a529d69bda4/3-web-dev-live-google-event.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/14255db6-d350-4c45-b5af-7a529d69bda4/3-web-dev-live-google-event.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/14255db6-d350-4c45-b5af-7a529d69bda4/3-web-dev-live-google-event.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/14255db6-d350-4c45-b5af-7a529d69bda4/3-web-dev-live-google-event.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/14255db6-d350-4c45-b5af-7a529d69bda4/3-web-dev-live-google-event.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      All <a href='https://web.dev/lighthouse-whats-new-6.0/#new-audits?utm_source=SmashingMag&utm_medium=Fpost'>new audits in Lighthouse 6.0</a> (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/14255db6-d350-4c45-b5af-7a529d69bda4/3-web-dev-live-google-event.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>There are many others that we spoke about at web.dev LIVE &mdash; watch the session on <a href=\"https://youtu.be/yDHfrhCGFQw\">What’s latest in speed tooling</a> and the <a href=\"https://youtu.be/ZO7XWLudGKI\">latest in Puppeteer</a>.</p>\n\n<p>During web.dev LIVE, we shared more new features and updates that have come to the web over the past few months. Watch all the <a href=\"http://web.dev/live?utm_source=SmashingMag&amp;utm_medium=Fpost\">sessions</a> to stay up to date and <a href=\"web.dev/newsletter?utm_source=SmashingMag&amp;utm_medium=Fpost\">subscribe</a> to the web.dev newsletter if you’d like more such content straight to your inbox.</p>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\">\n  <span>(ef, ra, il)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        ",
      "content": "Earlier this year, the Chrome team announced the Web Vitals initiative to provide unified guidance, metrics, and tools to help developers deliver great user experiences on the web. The Google Search team also recently announced that they will be evaluating page experience as a ranking criteria, and will include Core Web Vitals metrics as its foundation.\nThe three pillars of 2020 Core Web Vitals are loading, interactivity, and visual stability of page content, which are captured by the following metrics:",
      "contentSnippet": "Earlier this year, the Chrome team announced the Web Vitals initiative to provide unified guidance, metrics, and tools to help developers deliver great user experiences on the web. The Google Search team also recently announced that they will be evaluating page experience as a ranking criteria, and will include Core Web Vitals metrics as its foundation.\nThe three pillars of 2020 Core Web Vitals are loading, interactivity, and visual stability of page content, which are captured by the following metrics:",
      "guid": "https://www.smashingmagazine.com/2020/07/web-dev-live-google-event-2020/",
      "isoDate": "2020-07-06T14:00:00.000Z"
    },
    {
      "creator": "Chidi Orji",
      "title": "How To Test Your React Apps With The React Testing Library",
      "link": "https://www.smashingmagazine.com/2020/07/react-apps-testing-library/",
      "pubDate": "Fri, 03 Jul 2020 12:30:00 +0000",
      "author": "Chidi Orji",
      "content:encoded": "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2020/07/react-apps-testing-library/\" />\n              <title>How To Test Your React Apps With The React Testing Library</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>How To Test Your React Apps With The React Testing Library</h1>\n                  \n                    \n                    <address>Chidi Orji</address>\n                  \n                  <time datetime=\"2020-07-03T12:30:00&#43;00:00\" class=\"op-published\">2020-07-03T12:30:00+00:00</time>\n                  <time datetime=\"2020-07-03T12:30:00&#43;00:00\" class=\"op-modified\">2020-07-10T03:35:48+00:00</time>\n                </header>\n                \n\n<p>Today, we’ll briefly discuss why it’s important to write automated tests for any software project, and shed light on some of the common types of automated testing. We’ll build a to-do list app by following the Test-Driven Development (TDD) approach. I’ll show you how to write both unit and functional tests, and in the process, explain what code mocks are by mocking a few libraries. I’ll be using a combination of RTL and Jest &mdash; both of which come pre-installed in any new project created with Create-React-App (CRA).</p>\n\n<p>To follow along, you need to know how to set up and navigate a new React project and how to work with the yarn package manager (or npm). Familiarities with <a href=\"https://github.com/axios/axios\">Axios</a> and <a href=\"https://reacttraining.com/react-router/web\">React-Router</a> are also required.</p>\n\n<div class=\"c-felix-the-cat\">\n<h4>Best Practices With React</h4>\n<p>React is a fantastic JavaScript library for building rich user interfaces. It provides a great component abstraction for organizing your interfaces into well-functioning code, and there’s just about anything you can use it for. <a href=\"https://www.smashingmagazine.com/category/react\" class=\"btn btn--small btn--white btn--white--bordered\">Read more articles on React&nbsp;&rarr;</a></p>\n</div>\n\n\n  <div data-component=\"FeaturePanel\" data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container hidden\"></div>\n\n\n<h3 id=\"why-you-should-test-your-code\">Why You Should Test Your Code</h3>\n\n<p>Before shipping your software to end-users, you first have to confirm that it is working as expected. In other words, the app should satisfy its project specifications.</p>\n\n<p>Just as it is important to test our project as a whole before shipping it to end-users, it&rsquo;s also essential to keep testing our code during the lifetime of a project. This is necessary for a number of reasons. We may make updates to our application or refactor some parts of our code. A third-party library may undergo a breaking change. Even the browser that is running our web application may undergo breaking changes. In some cases, something stops working for no apparent reason &mdash; things could go wrong unexpectedly. Thus, it is necessary to test our code regularly for the lifetime of a project.</p>\n\n<p>Broadly speaking, there are manual and automated software tests. In a manual test, a real user performs some action on our application to verify that they work correctly. This kind of test is less reliable when repeated several times because it’s easy for the tester to miss some details between test runs.</p>\n\n<p>In an automated test, however, a test script is executed by a machine. With a test script, we can be sure that whatever details we set in the script will remain unchanged on every test run.</p>\n\n<p>This kind of test gives us the benefits of being predictable and fast, such that we can quickly find and fix bugs in our code.</p>\n\n<p>Having seen the necessity of testing our code, the next logical question is, what sort of automated tests should we write for our code? Let’s quickly go over a few of them.</p>\n\n<h3 id=\"types-of-automated-testing\">Types Of Automated Testing</h3>\n\n<p>There are many different types of automated software testing. Some of the most common ones are unit tests, integration tests, functional tests, end-to-end tests, acceptance tests, performance tests, and smoke tests.</p>\n\n<ol>\n<li><strong>Unit test</strong><br />\nIn this kind of test, the goal is to verify that each unit of our application, considered in isolation, is working correctly. An example would be testing that a particular function returns an expected value, give some known inputs. We’ll see several examples in this article.</li>\n<li><strong>Smoke test</strong><br />\nThis kind of test is done to check that the system is up and running. For example, in a React app, we could just render our main app component and call it a day. If it renders correctly we can be fairly certain that our app would render on the browser.</li>\n<li><strong>Integration test</strong><br />\nThis sort of test is carried out to verify that two or more modules can work well together. For example, you might run a test to verify that your server and database are actually communicating correctly.</li>\n<li><strong>Functional test</strong><br />\nA functional test exists to verify that the system meets its functional specification. We’ll see an example later.</li>\n<li><strong>End-to-end test</strong><br />\nThis kind of test involves testing the application the same way it would be used in the real world. You can use a tool like <a href=\"https://www.cypress.io\">cypress</a> for E2E tests.</li>\n<li><strong>Acceptance test</strong><br />\nThis is usually done by the business owner to verify that the system meets specifications.</li>\n<li><strong>Performance test</strong><br />\nThis sort of testing is carried out to see how the system performs under significant load. In frontend development, this is usually about how fast the app loads on the browser.</li>\n</ol>\n\n<p>There’s more <a href=\"https://www.softwaretestinghelp.com/types-of-software-testing/\">here</a> if you’re interested.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n\n\n\n<h3 id=\"why-use-react-testing-library\">Why Use React Testing Library?</h3>\n\n<p>When it comes to testing React applications, there are a few testing options available, of which the most common ones I know of are <a href=\"https://github.com/enzymejs/enzyme\">Enzyme</a> and <a href=\"https://testing-library.com/docs/react-testing-library/intro\">React Testing Library</a> (RTL).</p>\n\n<p>RTL is a subset of the <a href=\"https://testing-library.com/\">@testing-library</a> family of packages. Its philosophy is very simple. Your users don&rsquo;t care whether you use redux or context for state management. They care less about the simplicity of hooks nor the distinction between class and functional components. They just want your app to work in a certain way. It is, therefore, no surprise that the testing library’s primary <a href=\"https://testing-library.com/docs/guiding-principles\">guiding principle</a> is</p>\n\n<blockquote>“The more your tests resemble the way your software is used, the more confidence they can give you.”</blockquote>\n\n<p>So, whatever you do, have the end-user in mind and test your app just as they would use it.</p>\n\n<p>Choosing RTL gives you a number of advantages. First, it’s much easier to get started with it. Every new React project bootstrapped with CRA comes with RTL and <a href=\"https://jestjs.io/en\">Jest</a> configured. The React <a href=\"https://reactjs.org/docs/testing.html#tools\">docs</a> also recommend it as the testing library of choice. Lastly, the guiding principle makes a lot of sense &mdash; functionality over implementation details.</p>\n\n<p>With that out of the way, let’s get started with building a to-do list app, following the TDD approach.</p>\n\n<h3 id=\"project-setup\">Project Setup</h3>\n\n<p>Open a terminal and copy and run the below command.</p>\n\n<pre><code class=\"language-bash\"># start new react project and start the server\nnpx create-react-app start-rtl && cd start-rtl && yarn start</code></pre>\n\n<p>This should create a new React project and start the server on <a href=\"http://localhost:3000\">http://localhost:3000</a>. With the project running, open a separate terminal, run <code>yarn test</code> and then press <code>a</code>. This runs all tests in the project in <code>watch</code> mode. Running the test in watch mode means that the test will automatically re-run when it detects a change in either the test file or the file that is being tested. On the test terminal, you should see something like the picture below:</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5e9199eb-010d-41b6-86de-06b11a8d2570/01-initial-test-passing.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5e9199eb-010d-41b6-86de-06b11a8d2570/01-initial-test-passing.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5e9199eb-010d-41b6-86de-06b11a8d2570/01-initial-test-passing.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5e9199eb-010d-41b6-86de-06b11a8d2570/01-initial-test-passing.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5e9199eb-010d-41b6-86de-06b11a8d2570/01-initial-test-passing.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5e9199eb-010d-41b6-86de-06b11a8d2570/01-initial-test-passing.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5e9199eb-010d-41b6-86de-06b11a8d2570/01-initial-test-passing.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Initial test passing\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Initial test passing. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5e9199eb-010d-41b6-86de-06b11a8d2570/01-initial-test-passing.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>You should see a lot of greens, which indicates that the test we’re running passed in flying colors.</p>\n\n<p>As I mentioned earlier, CRA sets up RTL and Jest for every new React project. It also includes a sample test. This sample test is what we just executed.</p>\n\n<p>When you run the <code>yarn test</code> command, react-scripts calls upon Jest to execute the test. Jest is a JavaScript testing framework that’s used in running tests. You won’t find it listed in <code>package.json</code> but you can do a search inside <code>yarn.lock</code> to find it. You can also see it in <code>node_modules/</code>.</p>\n\n<p>Jest is incredible in the range of functionality that it provides. It provides tools for assertions, mocking, spying, etc. I strongly encourage you to take at least a quick tour of the documentation. There’s a lot to learn there that I cannot scratch in this short piece. We’ll be using Jest a lot in the coming sections.</p>\n\n<p>Open <code>package.json</code> let’s see what we have there. The section of interest is <code>dependencies</code>.</p>\n\n<pre><code class=\"language-javascript\">  \"dependencies\": {\n    \"@testing-library/jest-dom\": \"^4.2.4\",\n    \"@testing-library/react\": \"^9.3.2\",\n    \"@testing-library/user-event\": \"^7.1.2\",\n    ...\n  },</code></pre>     \n\n<p>We have the following packages installed specifically for testing purpose:</p>\n\n<ol>\n<li><a href=\"https://github.com/testing-library/jest-dom\">@testing-library/jest-dom</a>: provides custom DOM element matchers for Jest.</li>\n<li><a href=\"https://github.com/testing-library/react-testing-library\">@testing-library/react</a>: provides the APIs for testing React apps.</li>\n<li><a href=\"https://github.com/testing-library/user-event\">@testing-library/user-event</a>: provides advanced simulation of browser interactions.</li>\n</ol>\n\n<p>Open up <code>App.test.js</code> let’s take a look at its content.</p>\n\n<pre><code class=\"language-javascript\">import React from 'react';\nimport { render } from '@testing-library/react';\nimport App from './App';\n\ntest('renders learn react link', () => {\n  const { getByText } = render(<App />);\n  const linkElement = getByText(/learn react/i);\n  expect(linkElement).toBeInTheDocument();\n});</code></pre>\n\n<p>The <code>render</code> method of RTL renders the <code>&lt;App /&gt;</code> component and returns an object which is de-structured for the <code>getByText</code> query. This query finds elements in the DOM by their display text. Queries are the tools for finding elements in the DOM. The complete list of queries can be found <a href=\"https://testing-library.com/docs/dom-testing-library/api-queries\">here</a>. All of the queries from the testing library are exported by RTL, in addition to the render, cleanup, and act methods. You can read more about these in the <a href=\"https://testing-library.com/docs/react-testing-library/api\">API</a> section.</p>\n\n<p>The text is matched with the regular expression <code>/learn react/i</code>. The <code>i</code> flag makes the regular expression case-insensitive. We <code>expect</code> to find the text <code>Learn React</code> in the document.</p>\n\n<p>All of this mimics the behavior a user would experience in the browser when interacting with our app.</p>\n\n<p>Let’s start making the changes required by our app. Open <code>App.js</code> and replace the content with the below code.</p>\n\n<pre><code class=\"language-javascript\">import React from \"react\";\nimport \"./App.css\";\nfunction App() {\n  return (\n    &lt;div className=\"App\"&gt;\n      &lt;header className=\"App-header\"&gt;\n        &lt;h2&gt;Getting started with React testing library&lt;/h2&gt;\n      &lt;/header&gt;\n    &lt;/div&gt;\n  );\n}\nexport default App;</code></pre>\n    \n\n<p>If you still have the test running, you should see the test fail. Perhaps you can guess why that is the case, but we’ll return to it a bit later. Right now I want to refactor the test block.</p>\n\n<p>Replace the test block in <code>src/App.test.js</code> with the code below:</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\"># use describe, it pattern\ndescribe(\"&lt;App /&gt;\", () =&gt; {\n  it(\"Renders &lt;App /&gt; component correctly\", () =&gt; {\n    const { getByText } = render(&lt;App /&gt;);\n    expect(getByText(/Getting started with React testing library/i)).toBeInTheDocument();\n  });\n});</code></pre>\n</div>\n\n<p>This refactor makes no material difference to how our test will run. I prefer the <code>describe</code> and <code>it</code> pattern as it allows me structure my test file into logical blocks of related tests. The test should re-run and this time it will pass. In case you haven’t guessed it, the fix for the failing test was to replace the <code>learn react</code> text with <code>Getting started with React testing library</code>.</p>\n\n<p>In case you don’t have time to write your own styles you can just copy the one below into <code>App.css</code>.</p>\n\n<pre><code class=\"language-css\">.App {\n  min-height: 100vh;\n  text-align: center;\n}\n.App-header {\n  height: 10vh;\n  display: flex;\n  background-color: #282c34;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n}\n.App-body {\n  width: 60%;\n  margin: 20px auto;\n}\nul {\n  padding: 0;\n  display: flex;\n  list-style-type: decimal;\n  flex-direction: column;\n}\nli {\n  font-size: large;\n  text-align: left;\n  padding: 0.5rem 0;\n}\nli a {\n  text-transform: capitalize;\n  text-decoration: none;\n}\n.todo-title {\n  text-transform: capitalize;\n}\n.completed {\n  color: green;\n}\n.not-completed {\n  color: red;\n}</code></pre>\n\n<p>You should already see the page title move up after adding this CSS.</p>\n\n<p>I consider this a good point for me to commit my changes and push to Github. The corresponding branch is <a href=\"https://github.com/chidimo/Getting-started-with-react-testing-library/tree/01-setup\">01-setup</a>.</p>\n\n<p>Let’s continue with our project setup. We know we’re going to need some navigation in our app so we need React-Router. We’ll also be making API calls with Axios. Let’s install both.</p>\n\n<pre><code class=\"language-bash\"># install react-router-dom and axios\nyarn add react-router-dom axios</code></pre>\n\n<p>Most React apps you’ll build will have to maintain state. There’s a lot of libraries available for managing state. But for this tutorial, I’ll be using React’s context API and the <code>useContext</code> hook. So let’s set up our app’s context.</p>\n\n<p>Create a new file <code>src/AppContext.js</code> and enter the below content.</p>\n\n<pre><code class=\"language-javascript\">import React from \"react\";\nexport const AppContext = React.createContext({});\n\nexport const AppProvider = ({ children }) =&gt; {\n  const reducer = (state, action) =&gt; {\n    switch (action.type) {\n      case \"LOAD_TODOLIST\":\n        return { ...state, todoList: action.todoList };\n      case \"LOAD_SINGLE_TODO\":\n        return { ...state, activeToDoItem: action.todo };\n      default:\n        return state;\n    }\n  };\n  const [appData, appDispatch] = React.useReducer(reducer, {\n    todoList: [],\n    activeToDoItem: { id: 0 },\n  });\n  return (\n    &lt;AppContext.Provider value={{ appData, appDispatch }}&gt;\n      {children}\n    &lt;/AppContext.Provider&gt;\n  );\n};</code></pre>\n\n<p>Here we create a new context with <code>React.createContext({})</code>, for which the initial value is an empty object. We then define an <code>AppProvider</code> component that accepts <code>children</code> component. It then wraps those children in <code>AppContext.Provider</code>, thus making the <code>{ appData, appDispatch }</code> object available to all children anywhere in the render tree.</p>\n\n<p>Our <code>reducer</code> function defines two action types.</p>\n\n<ol>\n<li><code>LOAD_TODOLIST</code> which is used to update the <code>todoList</code> array.</li>\n<li><code>LOAD_SINGLE_TODO</code> which is used to update <code>activeToDoItem</code>.</li>\n</ol>\n\n<p><code>appData</code> and <code>appDispatch</code> are both returned from the <code>useReducer</code> hook. <code>appData</code> gives us access to the values in the state while <code>appDispatch</code> gives us a function which we can use to update the app’s state.</p>\n\n<p>Now open <code>index.js</code>, import the <code>AppProvider</code> component and wrap the <code>&lt;App /&gt;</code> component with <code>&lt;AppProvider /&gt;</code>. Your final code should look like what I have below.</p>\n\n<pre><code class=\"language-javascript\">import { AppProvider } from \"./AppContext\";\n\nReactDOM.render(\n  &lt;React.StrictMode&gt;\n    &lt;AppProvider&gt;\n      &lt;App /&gt;\n    &lt;/AppProvider&gt;\n  &lt;/React.StrictMode&gt;,\n  document.getElementById(\"root\")\n);</code></pre>\n\n<p>Wrapping <code>&lt;App /&gt;</code> inside <code>&lt;AppProvider /&gt;</code> makes <code>AppContext</code> available to every child component in our app.</p>\n\n<p>Remember that with RTL, the aim is to test our app the same way a real user would interact with it. This implies that we also want our tests to interact with our app state. For that reason, we also need to make our <code>&lt;AppProvider /&gt;</code> available to our components during tests. Let’s see how to make that happen.</p>\n\n<p>The render method provided by RTL is sufficient for simple components that don’t need to maintain state or use navigation. But most apps require at least one of both. For this reason, it provides a <code>wrapper</code> option. With this wrapper, we can wrap the UI rendered by the test renderer with any component we like, thus creating a <a href=\"https://testing-library.com/docs/react-testing-library/setup#custom-render\">custom render</a>. Let’s create one for our tests.</p>\n\n<p>Create a new file <code>src/custom-render.js</code> and paste the following code.</p>\n\n<pre><code class=\"language-javascript\">import React from \"react\";\nimport { render } from \"@testing-library/react\";\nimport { MemoryRouter } from \"react-router-dom\";\n\nimport { AppProvider } from \"./AppContext\";\n\nconst Wrapper = ({ children }) =&gt; {\n  return (\n    &lt;AppProvider&gt;\n      &lt;MemoryRouter&gt;{children}&lt;/MemoryRouter&gt;\n    &lt;/AppProvider&gt;\n  );\n};\n\nconst customRender = (ui, options) =&gt;\n  render(ui, { wrapper: Wrapper, ...options });\n\n// re-export everything\nexport * from \"@testing-library/react\";\n\n// override render method\nexport { customRender as render };</code></pre>\n\n<p>Here we define a <code>&lt;Wrapper /&gt;</code> component that accepts some children component. It then wraps those children inside <code>&lt;AppProvider /&gt;</code> and <code>&lt;MemoryRouter /&gt;</code>. <a href=\"https://reacttraining.com/react-router/web/api/MemoryRouter\">MemoryRouter</a> is</p>\n\n<blockquote>\n<p>A <a href=\"https://reacttraining.com/react-router/Router.md\"><code>&lt;Router&gt;</code></a> that keeps the history of your “URL” in memory (does not read or write to the address bar). Useful in tests and non-browser environments like <a href=\"https://facebook.github.io/react-native/\">React Native</a>.</p>\n</blockquote>\n\n<p>We then create our render function, providing it the Wrapper we just defined through its wrapper option. The effect of this is that any component we pass to the render function is rendered inside <code>&lt;Wrapper /&gt;</code>, thus having access to navigation and our app’s state.</p>\n\n<p>The next step is to export everything from <code>@testing-library/react</code>. Lastly, we export our custom render function as <code>render</code>, thus overriding the default render.</p>\n\n<p>Note that even if you were using Redux for state management the same pattern still applies.</p>\n\n<p>Let’s now make sure our new render function works. Import it into <code>src/App.test.js</code> and use it to render the <code>&lt;App /&gt;</code> component.</p>\n\n<p>Open <code>App.test.js</code> and replace the import line. This</p>\n\n<pre><code class=\"language-javascript\">import { render } from '@testing-library/react';</code></pre>\n\n<p>should become</p>\n\n<pre><code class=\"language-javascript\">import { render } from './custom-render';</code></pre>\n\n<p>Does the test still pass? Good job.</p>\n\n<p>There’s one small change I want to make before wrapping up this section. It gets tiring very quickly to have to write <code>const { getByText }</code> and other queries every time. So, I’m going to be using the <a href=\"https://testing-library.com/docs/dom-testing-library/api-queries#screen\"><code>screen</code></a> object from the DOM testing library henceforth.</p>\n\n<p>Import the screen object from our custom render file and replace the <code>describe</code> block with the code below.</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">import { render, screen } from \"./custom-render\";\n\ndescribe(\"&lt;App /&gt;\", () =&gt; {\n  it(\"Renders &lt;App /&gt; component correctly\", () =&gt; {\n    render(&lt;App /&gt;);\n    expect(\n      screen.getByText(/Getting started with React testing library/i)\n    ).toBeInTheDocument();\n  });\n});</code></pre>\n</div>\n\n<p>We’re now accessing the <code>getByText</code> query from the screen object. Does your test still pass? I’m sure it does. Let’s continue.</p>\n\n<p>If your tests don’t pass you may want to compare your code with mine. The corresponding branch at this point is <a href=\"https://github.com/chidimo/Getting-started-with-react-testing-library/tree/02-setup-store-and-render\">02-setup-store-and-render</a>.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n\n\n\n<h3 id=\"testing-and-building-the-to-do-list-index-page\">Testing And Building The To-Do List Index Page</h3>\n\n<p>In this section, we’ll pull to-do items from <a href=\"http://jsonplaceholder.typicode.com/\">http://jsonplaceholder.typicode.com/</a>. Our component specification is very simple. When a user visits our app homepage,</p>\n\n<ol>\n<li>show a loading indicator that says <code>Fetching todos</code> while waiting for the response from the API;</li>\n<li>display the title of 15 to-do items on the screen once the API call returns (the API call returns 200). Also, each item title should be a link that will lead to the to-do details page.</li>\n</ol>\n\n<p>Following a test-driven approach, we’ll write our test before implementing the component logic. Before doing that we’ll need to have the component in question. So go ahead and create a file <code>src/TodoList.js</code> and enter the following content:</p>\n\n<pre><code class=\"language-javascript\">import React from \"react\";\nimport \"./App.css\";\nexport const TodoList = () =&gt; {\n  return (\n    &lt;div&gt;\n    &lt;/div&gt;\n  );\n};</code></pre>\n\n<p>Since we know the component specification we can test it in isolation before incorporating it into our main app. I believe it’s up to the developer at this point to decide how they want to handle this. One reason you might want to test a component in isolation is so that you don’t accidentally break any existing test and then having to fight fires in two locations. With that out of the way let’s now write the test.</p>\n\n<p>Create a new file <code>src/TodoList.test.js</code> and enter the below code:</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">import React from \"react\";\nimport axios from \"axios\";\nimport { render, screen, waitForElementToBeRemoved } from \"./custom-render\";\nimport { TodoList } from \"./TodoList\";\nimport { todos } from \"./makeTodos\";\n\ndescribe(\"&lt;App /&gt;\", () =&gt; {\n  it(\"Renders &lt;TodoList /&gt; component\", async () =&gt; {\n    render(&lt;TodoList /&gt;);\n    await waitForElementToBeRemoved(() =&gt; screen.getByText(/Fetching todos/i));\n\n    expect(axios.get).toHaveBeenCalledTimes(1);\n    todos.slice(0, 15).forEach((td) =&gt; {\n      expect(screen.getByText(td.title)).toBeInTheDocument();\n    });\n  });\n});</code></pre>\n</div>\n\n<p>Inside our test block, we render the <code>&lt;TodoList /&gt;</code> component and use the <code>waitForElementToBeRemoved</code> function to wait for the <code>Fetching todos</code> text to disappear from the screen. Once this happens we know that our API call has returned. We also check that an Axios <code>get</code> call was fired once. Finally, we check that each to-do title is displayed on the screen. Note that the <code>it</code> block receives an <code>async</code> function. This is necessary for us to be able to use <code>await</code> inside the function.</p>\n\n<p>Each to-do item returned by the API has the following structure.</p>\n\n<pre><code class=\"language-css\">{\n  id: 0,\n  userId: 0,\n  title: 'Some title',\n  completed: true,\n}</code></pre>\n\n<p>We want to return an array of these when we</p>\n\n<pre><code class=\"language-javascript\">import { todos } from \"./makeTodos\"</code></pre>\n\n<p>The only condition is that each <code>id</code> should be unique.</p>\n\n<p>Create a new file <code>src/makeTodos.js</code> and enter the below content. This is the source of todos we’ll use in our tests.</p>\n\n<pre><code class=\"language-javascript\">const makeTodos = (n) =&gt; {\n  // returns n number of todo items\n  // default is 15\n  const num = n || 15;\n  const todos = [];\n  for (let i = 0; i &lt; num; i++) {\n    todos.push({\n      id: i,\n      userId: i,\n      title: `Todo item ${i}`,\n      completed: [true, false][Math.floor(Math.random() * 2)],\n    });\n  }\n  return todos;\n};\n\nexport const todos = makeTodos(200);</code></pre>\n\n<p>This function simply generates a list of <code>n</code> to-do items. The <code>completed</code> line is set by randomly choosing between <code>true</code> and <code>false</code>.</p>\n\n<p>Unit tests are supposed to be fast. They should run within a few seconds. Fail fast! This is one of the reasons why letting our tests make actual API calls is impractical. To avoid this we <strong>mock</strong> such unpredictable API calls. Mocking simply means replacing a function with a fake version, thus allowing us to customize the behavior. In our case, we want to mock the get method of Axios to return whatever we want it to. Jest already provides mocking functionality out of the box.</p>\n\n<p>Let’s now mock Axios so it returns this list of to-dos when we make the API call in our test. Create a file <code>src/__mocks__/axios.js</code> and enter the below content:</p>\n\n<pre><code class=\"language-javascript\">import { todos } from \"../makeTodos\";\n\nexport default {\n  get: jest.fn().mockImplementation((url) =&gt; {\n    switch (url) {\n      case \"https://jsonplaceholder.typicode.com/todos\":\n        return Promise.resolve({ data: todos });\n      default:\n        throw new Error(`UNMATCHED URL: ${url}`);\n    }\n  }),\n};</code></pre>\n\n<p>When the test starts, Jest automatically finds this <strong>mocks</strong> folder and instead of using the actual Axios from <code>node_modules/</code> in our tests, it uses this one. At this point, we’re only mocking the <code>get</code> method using Jest’s <a href=\"https://jestjs.io/docs/en/mock-function-api#mockfnmockimplementationfn\">mockImplementation</a> method. Similarly, we can mock other Axios methods like <code>post</code>, <code>patch</code>, <code>interceptors</code>, <code>defaults</code> etc. Right now they’re all undefined and any attempt to access, <code>axios.post</code> for example, would result in an error.</p>\n\n<p>Note that we can customize what to return based on the URL the Axios call receives. Also, Axios calls return a promise which resolves to the actual data we want, so we return a promise with the data we want.</p>\n\n<p>At this point, we have one passing test and one failing test. Let’s implement the component logic.</p>\n\n<p>Open <code>src/TodoList.js</code> let’s build out the implementation piece by piece. Start by replacing the code inside with this one below.</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">import React from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport { AppContext } from \"./AppContext\";\n\nexport const TodoList = () =&gt; {\n  const [loading, setLoading] = React.useState(true);\n  const { appData, appDispatch } = React.useContext(AppContext);\n\n  React.useEffect(() =&gt; {\n    axios.get(\"https://jsonplaceholder.typicode.com/todos\").then((resp) =&gt; {\n      const { data } = resp;\n      appDispatch({ type: \"LOAD_TODOLIST\", todoList: data });\n      setLoading(false);\n    });\n  }, [appDispatch, setLoading]);\n\n  return (\n    &lt;div&gt;\n      // next code block goes here\n    &lt;/div&gt;\n  );\n};</code></pre>\n</div>\n\n<p>We import <code>AppContext</code> and de-structure <code>appData</code> and <code>appDispatch</code> from the return value of <code>React.useContext</code>. We then make the API call inside a <code>useEffect</code> block. Once the API call returns, we set the to-do list in state by firing the <code>LOAD_TODOLIST</code> action. Finally, we set the loading state to false to reveal our to-dos.</p>\n\n<p>Now enter the final piece of code.</p>\n\n<pre><code class=\"language-javascript\">{loading ? (\n  &lt;p&gt;Fetching todos&lt;/p&gt;\n) : (\n  &lt;ul&gt;\n    {appData.todoList.slice(0, 15).map((item) =&gt; {\n      const { id, title } = item;\n      return (\n        &lt;li key={id}&gt;\n          &lt;Link to={`/item/${id}`} data-testid={id}&gt;\n            {title}\n          &lt;/Link&gt;\n        &lt;/li&gt;\n      );\n    })}\n  &lt;/ul&gt;\n)}\n</code></pre>\n\n<p>We slice <code>appData.todoList</code> to get the first 15 items. We then map over those and render each one in a <code>&lt;Link /&gt;</code> tag so we can click on it and see the details. Note the <code>data-testid</code> attribute on each Link. This should be a unique ID that will aid us in finding individual DOM elements. In a case where we have similar text on the screen, we should never have the same ID for any two elements. We’ll see how to use this a bit later.</p>\n\n<p>My tests now pass. Does yours pass? Great.</p>\n\n<p>Let’s now incorporate this component into our render tree. Open up <code>App.js</code> let’s do that.</p>\n\n<p>First things. Add some imports.</p>\n\n<pre><code class=\"language-javascript\">import { BrowserRouter, Route } from \"react-router-dom\";\nimport { TodoList } from \"./TodoList\";</code></pre>\n\n<p>We need <code>BrowserRouter</code> for navigation and <code>Route</code> for rendering each component in each navigation location.</p>\n\n<p>Now add the below code after the <code>&lt;header /&gt;</code> element.</p>\n\n<pre><code class=\"language-html\">&lt;div className=\"App-body\"&gt;\n  &lt;BrowserRouter&gt;\n    &lt;Route exact path=\"/\" component={TodoList} /&gt;\n  &lt;/BrowserRouter&gt;\n&lt;/div&gt;</code></pre>\n          \n\n<p>This is simply telling the browser to render the <code>&lt;TodoList /&gt;</code> component when we’re on the root location, <code>/</code>. Once this is done, our tests still pass but you should see some error messages on your console telling you about some <code>act</code> something. You should also see that the <code>&lt;TodoList /&gt;</code> component seems to be the culprit here.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1c59fe17-cd7a-4ac9-ba1f-c6487de7c1d3/02-act-warning.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1c59fe17-cd7a-4ac9-ba1f-c6487de7c1d3/02-act-warning.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1c59fe17-cd7a-4ac9-ba1f-c6487de7c1d3/02-act-warning.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1c59fe17-cd7a-4ac9-ba1f-c6487de7c1d3/02-act-warning.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1c59fe17-cd7a-4ac9-ba1f-c6487de7c1d3/02-act-warning.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1c59fe17-cd7a-4ac9-ba1f-c6487de7c1d3/02-act-warning.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1c59fe17-cd7a-4ac9-ba1f-c6487de7c1d3/02-act-warning.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Terminal showing act warnings\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Terminal showing act warnings. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1c59fe17-cd7a-4ac9-ba1f-c6487de7c1d3/02-act-warning.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Since we’re sure that our TodoList component by itself is okay, we have to look at the App component, inside of which is rendered the <code>&lt;TodoList /&gt;</code> component.</p>\n\n<p>This warning may seem complex at first but it is telling us that something is happening in our component that we’re not accounting for in our test. The fix is to wait for the loading indicator to be removed from the screen before we proceed.</p>\n\n<p>Open up <code>App.test.js</code> and update the code to look like so:</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">import React from \"react\";\nimport { render, screen, waitForElementToBeRemoved } from \"./custom-render\";\nimport App from \"./App\";\ndescribe(\"&lt;App /&gt;\", () =&gt; {\n  it(\"Renders &lt;App /&gt; component correctly\", async () =&gt; {\n    render(&lt;App /&gt;);\n    expect(\n      screen.getByText(/Getting started with React testing library/i)\n    ).toBeInTheDocument();\n    await waitForElementToBeRemoved(() =&gt; screen.getByText(/Fetching todos/i));\n  });\n});</code></pre>\n</div>\n\n<p>We’ve made two changes. First, we changed the function in the <code>it</code> block to an <code>async</code> function. This is a necessary step to allow us to use <code>await</code> in the function body. Secondly, we wait for the <code>Fetching todos</code> text to be removed from the screen. And voila!. The warning is gone. Phew! I strongly advise that you bookmark this <a href=\"https://kentcdodds.com/blog/fix-the-not-wrapped-in-act-warning\">post</a> by Kent Dodds for more on this <code>act</code> warning. You’re gonna need it.</p>\n\n<p>Now open the page in your browser and you should see the list of to-dos. You can click on an item if you like, but it won’t show you anything because our router doesn’t yet recognize that URL.</p>\n\n<p>For comparison, the branch of my repo at this point is <a href=\"https://github.com/chidimo/Getting-started-with-react-testing-library/tree/03-todolist\">03-todolist</a>.</p>\n\n<p>Let’s now add the to-do details page.</p>\n\n<h3 id=\"testing-and-building-the-single-to-do-page\">Testing And Building The Single To-Do Page</h3>\n\n<p>To display a single to-do item we’ll follow a similar approach. The component specification is simple. When a user navigates to a to-do page:</p>\n\n<ol>\n<li>display a loading indicator that says <code>Fetching todo item id</code> where id represents the to-do’s id, while the API call to <a href=\"https://jsonplaceholder.typicode.com/todos/item_id\">https://jsonplaceholder.typicode.com/todos/item_id</a> runs.</li>\n<li>When the API call returns, show the following information:\n\n<ul>\n<li><strong>Todo item title</strong></li>\n<li><strong>Added by: userId</strong></li>\n<li><strong>This item has been completed</strong> if the to-do has been completed or</li>\n<li><strong>This item is yet to be completed</strong> if the to-do has not been completed.</li>\n</ul></li>\n</ol>\n\n<p>Let’s start with the component. Create a file <code>src/TodoItem.js</code> and add the following content.</p>\n\n<pre><code class=\"language-javascript\">import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport \"./App.css\";\n\nexport const TodoItem = () =&gt; {\n  const { id } = useParams()\n  return (\n    &lt;div className=\"single-todo-item\"&gt;\n    &lt;/div&gt;\n  );\n};</code></pre>\n\n<p>The only thing new to us in this file is the <code>const { id } = useParams()</code> line. This is a hook from <code>react-router-dom</code> that lets us read URL parameters. This id is going to be used in fetching a to-do item from the API.</p>\n\n<p>This situation is a bit different because we’re going to be reading the id from the location URL. We know that when a user clicks a to-do link, the id will show up in the URL which we can then grab using the <code>useParams()</code> hook. But here we’re testing the component in isolation which means that there’s nothing to click, even if we wanted to. To get around this we’ll have to mock <code>react-router-dom</code>, but only some parts of it. Yes. It’s possible to mock only what we need to. Let’s see how it’s done.</p>\n\n<p>Create a new mock file <code>src/__mocks__ /react-router-dom.js</code>. Now paste in the following code:</p>\n\n<pre><code class=\"language-javascript\">module.exports = {\n  ...jest.requireActual(\"react-router-dom\"),\n  useParams: jest.fn(),\n};</code></pre>\n\n<p>By now you should have noticed that when mocking a module we have to use the exact module name as the mock file name.</p>\n\n<p>Here, we use the <code>module.exports</code> syntax because <code>react-router-dom</code> has mostly named exports. (I haven’t come across any default export since I’ve been working with it. If there are any, kindly share with me in the comments). This is unlike Axios where everything is bundled as methods in one default export.</p>\n\n<p>We first spread the actual <code>react-router-dom</code>, then replace the <code>useParams</code> hook with a Jest function. Since this function is a Jest function, we can modify it anytime we want. Keep in mind that we’re only mocking the part we need to because if we mock everything, we’ll lose the implementation of <code>MemoryHistory</code> which is used in our render function.</p>\n\n<p>Let’s start testing!</p>\n\n<p>Now create <code>src/TodoItem.test.js</code> and enter the below content:</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">import React from \"react\";\nimport axios from \"axios\";\nimport { render, screen, waitForElementToBeRemoved } from \"./custom-render\";\nimport { useParams, MemoryRouter } from \"react-router-dom\";\nimport { TodoItem } from \"./TodoItem\";\n\ndescribe(\"&lt;TodoItem /&gt;\", () =&gt; {\n  it(\"can tell mocked from unmocked functions\", () =&gt; {\n    expect(jest.isMockFunction(useParams)).toBe(true);\n    expect(jest.isMockFunction(MemoryRouter)).toBe(false);\n  });\n});</code></pre>\n</div>\n\n<p>Just like before, we have all our imports. The describe block then follows. Our first case is only there as a demonstration that we’re only mocking what we need to. Jest’s <a href=\"https://jestjs.io/docs/en/jest-object#jestismockfunctionfn\">isMockFunction</a> can tell whether a function is mocked or not. Both expectations pass, confirming the fact that we have a mock where we want it.</p>\n\n<p>Add the below test case for when a to-do item has been completed.</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">  it(\"Renders &lt;TodoItem /&gt; correctly for a completed item\", async () =&gt; {\n    useParams.mockReturnValue({ id: 1 });\n    render(&lt;TodoItem /&gt;);\n\n    await waitForElementToBeRemoved(() =&gt;\n      screen.getByText(/Fetching todo item 1/i)\n    );\n\n    expect(axios.get).toHaveBeenCalledTimes(1);\n    expect(screen.getByText(/todo item 1/)).toBeInTheDocument();\n    expect(screen.getByText(/Added by: 1/)).toBeInTheDocument();\n    expect(\n      screen.getByText(/This item has been completed/)\n    ).toBeInTheDocument();\n  });</code></pre>\n</div>\n\n<p>The very first thing we do is to mock the return value of <code>useParams</code>. We want it to return an object with an id property, having a value of 1. When this is parsed in the component, we end up with the following URL <a href=\"https://jsonplaceholder.typicode.com/todos/1\">https://jsonplaceholder.typicode.com/todos/1</a>. Keep in mind that we have to add a case for this URL in our Axios mock or it will throw an error. We will do that in just a moment.</p>\n\n<p>We now know for sure that calling <code>useParams()</code> will return the object <code>{ id: 1 }</code> which makes this test case predictable.</p>\n\n<p>As with previous tests, we wait for the loading indicator, <code>Fetching todo item 1</code> to be removed from the screen before making our expectations. We expect to see the to-do title, the id of the user who added it, and a message indicating the status.</p>\n\n<p>Open <code>src/__mocks__/axios.js</code> and add the following case to the <code>switch</code> block.</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">      case \"https://jsonplaceholder.typicode.com/todos/1\":\n        return Promise.resolve({\n          data: { id: 1, title: \"todo item 1\", userId: 1, completed: true },\n        });</code></pre>\n</div>\n\n<p>When this URL is matched, a promise with a completed to-do is returned. Of course, this test case fails since we’re yet to implement the component logic. Go ahead and add a test case for when the to-do item has not been completed.</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">  it(\"Renders &lt;TodoItem /&gt; correctly for an uncompleted item\", async () =&gt; {\n    useParams.mockReturnValue({ id: 2 });\n    render(&lt;TodoItem /&gt;);\n    await waitForElementToBeRemoved(() =&gt;\n      screen.getByText(/Fetching todo item 2/i)\n    );\n    expect(axios.get).toHaveBeenCalledTimes(2);\n    expect(screen.getByText(/todo item 2/)).toBeInTheDocument();\n    expect(screen.getByText(/Added by: 2/)).toBeInTheDocument();\n    expect(\n      screen.getByText(/This item is yet to be completed/)\n    ).toBeInTheDocument();\n  });</code></pre>\n</div>\n \n\n<p>This is the same as the previous case. The only difference is the ID of the to-do, the <code>userId</code>, and the completion status. When we enter the component, we’ll need to make an API call to the URL <a href=\"https://jsonplaceholder.typicode.com/todos/2\">https://jsonplaceholder.typicode.com/todos/2</a>. Go ahead and add a matching case statement to the switch block of our Axios mock.</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">case \"https://jsonplaceholder.typicode.com/todos/2\":\n  return Promise.resolve({\n    data: { id: 2, title: \"todo item 2\", userId: 2, completed: false },\n  });\n</code></pre>\n</div>\n        \n\n<p>When the URL is matched, a promise with an uncompleted to-do is returned.</p>\n\n<p>Both test cases are failing. Now let’s add the component implementation to make them pass.</p>\n\n<p>Open <code>src/TodoItem.js</code> and update the code to the following:</p>\n\n<pre><code class=\"language-javascript\">import React from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport \"./App.css\";\nimport { AppContext } from \"./AppContext\";\n\nexport const TodoItem = () =&gt; {\n  const { id } = useParams();\n  const [loading, setLoading] = React.useState(true);\n  const {\n    appData: { activeToDoItem },\n    appDispatch,\n  } = React.useContext(AppContext);\n\n  const { title, completed, userId } = activeToDoItem;\n  React.useEffect(() =&gt; {\n    axios\n      .get(`https://jsonplaceholder.typicode.com/todos/${id}`)\n      .then((resp) =&gt; {\n        const { data } = resp;\n        appDispatch({ type: \"LOAD_SINGLE_TODO\", todo: data });\n        setLoading(false);\n      });\n  }, [id, appDispatch]);\n  return (\n    &lt;div className=\"single-todo-item\"&gt;\n      // next code block goes here.\n    &lt;/div&gt;\n  );\n};\n</code></pre>\n\n<p>As with the <code>&lt;TodoList /&gt;</code> component, we import <code>AppContext</code>. We read <code>activeTodoItem</code> from it, then we read the to-do title, userId, and completion status. After that we make the API call inside a <code>useEffect</code> block. When the API call returns we set the to-do in state by firing the <code>LOAD_SINGLE_TODO</code> action. Finally, we set our loading state to false to reveal the to-do details.</p>\n\n<p>Let’s add the final piece of code inside the return div:</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">{loading ? (\n  &lt;p&gt;Fetching todo item {id}&lt;/p&gt;\n) : (\n  &lt;div&gt;\n    &lt;h2 className=\"todo-title\"&gt;{title}&lt;/h2&gt;\n    &lt;h4&gt;Added by: {userId}&lt;/h4&gt;\n    {completed ? (\n      &lt;p className=\"completed\"&gt;This item has been completed&lt;/p&gt;\n    ) : (\n      &lt;p className=\"not-completed\"&gt;This item is yet to be completed&lt;/p&gt;\n    )}\n  &lt;/div&gt;\n)}</code></pre>\n</div>\n\n<p>Once this is done all tests should now pass. Yay! We have another winner.</p>\n\n<p>Our component tests now pass. But we still haven’t added it to our main app. Let’s do that.</p>\n\n<p>Open <code>src/App.js</code> and add the import line:</p>\n\n<pre><code class=\"language-javascript\">import { TodoItem } from './TodoItem'</code></pre>\n\n<p>Add the TodoItem route above the TodoList route. Be sure to preserve the order shown below.</p>\n\n<pre><code class=\"language-javascript\"># preserve this order\n&lt;Route path=\"/item/:id\" component={TodoItem} /&gt;\n&lt;Route exact path=\"/\" component={TodoList} /&gt;</code></pre>\n\n<p>Open your project in your browser and click on a to-do. Does it take you to the to-do page? Of course, it does. Good job.</p>\n\n<p>In case you’re having any problem, you can check out my code at this point from the <a href=\"https://github.com/chidimo/Getting-started-with-react-testing-library/tree/04-test-todo\">04-test-todo</a> branch.</p>\n\n<p>Phew! This has been a marathon. But bear with me. There’s one last point I’d like us to touch. Let’s quickly have a test case for when a user visits our app, and then proceed to click on a to-do link. This is a functional test to mimic how our app should work. In practice, this is all the testing we need to be done for this app. It ticks every box in our app specification.</p>\n\n<p>Open <code>App.test.js</code> and add a new test case. The code is a bit long so we’ll add it in two steps.</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">import userEvent from \"@testing-library/user-event\";\nimport { todos } from \"./makeTodos\";\n\njest.mock(\"react-router-dom\", () =&gt; ({\n  ...jest.requireActual(\"react-router-dom\"),\n}));\n\ndescribe(\"&lt;App /&gt;\"\n  ...\n  // previous test case\n  ...\n\n  it(\"Renders todos, and I can click to view a todo item\", async () =&gt; {\n    render(&lt;App /&gt;);\n    await waitForElementToBeRemoved(() =&gt; screen.getByText(/Fetching todos/i));\n    todos.slice(0, 15).forEach((td) =&gt; {\n      expect(screen.getByText(td.title)).toBeInTheDocument();\n    });\n    // click on a todo item and test the result\n    const { id, title, completed, userId } = todos[0];\n    axios.get.mockImplementationOnce(() =&gt;\n      Promise.resolve({\n        data: { id, title, userId, completed },\n      })\n    );\n    userEvent.click(screen.getByTestId(String(id)));\n    await waitForElementToBeRemoved(() =&gt;\n      screen.getByText(`Fetching todo item ${String(id)}`)\n    );\n\n    // next code block goes here\n  });\n});</code></pre>\n</div>\n\n<p>We have two imports of which <a href=\"https://testing-library.com/docs/ecosystem-user-event#docsNav\">userEvent</a> is new. According to the docs,</p>\n\n<blockquote>“<a href=\"https://github.com/testing-library/user-event\"><code>user-event</code></a> is a companion library for the <code>React Testing Library</code> that provides a more advanced simulation of browser interactions than the built-in <code>fireEvent</code> method.”</blockquote>\n\n<p>Yes. There is a <code>fireEvent</code> method for simulating user events. But userEvent is what you want to be using henceforth.</p>\n\n<p>Before we start the testing process, we need to restore the original <code>useParams</code> hooks. This is necessary since we want to test actual behavior, so we should mock as little as possible. Jest provides us with <a href=\"https://jestjs.io/docs/en/jest-object#jestrequireactualmodulename\">requireActual</a> method which returns the original <code>react-router-dom</code> module.</p>\n\n<p>Note that we must do this before we enter the describe block, otherwise, Jest would ignore it. It states in the documentation that <code>requireActual</code>:</p>\n\n<blockquote>“...returns the actual module instead of a mock, bypassing all checks on whether the module should receive a mock implementation or not.”</blockquote>\n\n<p>Once this is done, Jest bypasses every other check and ignores the mocked version of the <code>react-router-dom</code>.</p>\n\n<p>As usual, we render the <code>&lt;App /&gt;</code> component and wait for the <code>Fetching todos</code> loading indicator to disappear from the screen. We then check for the presence of the first 15 to-do items on the page.</p>\n\n<p>Once we’re satisfied with that, we grab the first item in our to-do list. To prevent any chance of a URL collision with our global Axios mock, we override the global mock with Jest’s <a href=\"https://jestjs.io/docs/en/mock-function-api#mockfnmockimplementationoncefn\">mockImplementationOnce</a>. This mocked value is valid for one call to the Axios get method. We then grab a link by its <code>data-testid</code> attribute and fire a user click event on that link. Then we wait for the loading indicator for the single to-do page to disappear from the screen.</p>\n\n<p>Now finish the test by adding the below expectations in the position indicated.</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">expect(screen.getByText(title)).toBeInTheDocument();\nexpect(screen.getByText(`Added by: ${userId}`)).toBeInTheDocument();\nswitch (completed) {\n  case true:\n    expect(\n      screen.getByText(/This item has been completed/)\n    ).toBeInTheDocument();\n    break;\n  case false:\n    expect(\n      screen.getByText(/This item is yet to be completed/)\n    ).toBeInTheDocument();\n    break;\n  default:\n    throw new Error(\"No match\");\n    }\n  </code></pre>\n</div>\n\n<p>We expect to see the to-do title and the user who added it. Finally, since we can’t be sure about the to-do status, we create a switch block to handle both cases. If a match is not found we throw an error.</p>\n\n<p>You should have 6 passing tests and a functional app at this point. In case you’re having trouble, the corresponding branch in my repo is <a href=\"https://github.com/chidimo/Getting-started-with-react-testing-library/tree/05-test-user-action\">05-test-user-action</a>.</p>\n\n<h3 id=\"conclusion\">Conclusion</h3>\n\n<p>Phew! That was some marathon. If you made it to this point, congratulations. You now have almost all you need to write tests for your React apps. I strongly advise that you read CRA’s <a href=\"https://create-react-app.dev/docs/running-tests/\">testing docs</a> and RTL’s documentation. Overall both are relatively short and direct.</p>\n\n<p>I strongly encourage you to start writing tests for your React apps, no matter how small. Even if it’s just smoke tests to make sure your components render. You can incrementally add more test cases over time.</p>\n\n<h4 id=\"related-resources\">Related Resources</h4>\n\n<ul>\n<li>“<a href=\"https://reactjs.org/docs/testing.html\">Testing Overview</a>,” React official website</li>\n<li>“<a href=\"https://jestjs.io/docs/en/expect.html\"><code>Expect</code></a>,” Jest API Reference</li>\n<li>“<a href=\"https://testing-library.com/docs/react-testing-library/setup#custom-render\">Custom Render</a>,” React Testing Library</li>\n<li>“<a href=\"https://github.com/testing-library/jest-dom\"><code>jest-dom</code></a>,” Testing Library, GitHub</li>\n<li>“<a href=\"https://testing-library.com/docs/guiding-principles\">Guiding Principles</a>,” Getting Started, Testing Library</li>\n<li>“<a href=\"https://testing-library.com/docs/react-testing-library/intro\">React Testing Library</a>,” Testing Library</li>\n<li>“<a href=\"https://reactjs.org/docs/testing.html#tools\">Recommended Tools</a>,” Testing Overview, React official website</li>\n<li>“<a href=\"https://kentcdodds.com/blog/fix-the-not-wrapped-in-act-warning\">Fix the &ldquo;not wrapped in act(&hellip;)&rdquo; warning</a>,” Kent C. Dodds</li>\n<li>“<a href=\"https://reacttraining.com/react-router/web/api/MemoryRouter\"><code>&lt;MemoryRouter&gt;</code></a>,” React Training</li>\n<li>“<a href=\"https://testing-library.com/docs/dom-testing-library/api-queries#screen\"><code>screen</code></a>,” DOM Testing Library</li>\n<li>“<a href=\"https://testing-library.com/docs/ecosystem-user-event#docsNav\"><code>user-event</code></a>,” Ecosystem, Testing Library Docs</li>\n<li>“<a href=\"https://www.atlassian.com/continuous-delivery/software-testing/types-of-software-testing\">The Different Types Of Software Testing</a>,” Sten Pittet, Atlassian</li>\n</ul>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\">\n  <span>(ks, ra, yk, il)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        ",
      "content": "Today, we’ll briefly discuss why it’s important to write automated tests for any software project, and shed light on some of the common types of automated testing. We’ll build a to-do list app by following the Test-Driven Development (TDD) approach. I’ll show you how to write both unit and functional tests, and in the process, explain what code mocks are by mocking a few libraries. I’ll be using a combination of RTL and Jest &mdash; both of which come pre-installed in any new project created with Create-React-App (CRA).",
      "contentSnippet": "Today, we’ll briefly discuss why it’s important to write automated tests for any software project, and shed light on some of the common types of automated testing. We’ll build a to-do list app by following the Test-Driven Development (TDD) approach. I’ll show you how to write both unit and functional tests, and in the process, explain what code mocks are by mocking a few libraries. I’ll be using a combination of RTL and Jest &mdash; both of which come pre-installed in any new project created with Create-React-App (CRA).",
      "guid": "https://www.smashingmagazine.com/2020/07/react-apps-testing-library/",
      "isoDate": "2020-07-03T12:30:00.000Z"
    },
    {
      "creator": "Timi Omoyeni",
      "title": "Differences Between Static Generated Sites And Server-Side Rendered Apps",
      "link": "https://www.smashingmagazine.com/2020/07/differences-static-generated-sites-server-side-rendered-apps/",
      "pubDate": "Thu, 02 Jul 2020 12:00:00 +0000",
      "author": "Timi Omoyeni",
      "content:encoded": "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2020/07/differences-static-generated-sites-server-side-rendered-apps/\" />\n              <title>Differences Between Static Generated Sites And Server-Side Rendered Apps</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>Differences Between Static Generated Sites And Server-Side Rendered Apps</h1>\n                  \n                    \n                    <address>Timi Omoyeni</address>\n                  \n                  <time datetime=\"2020-07-02T12:00:00&#43;00:00\" class=\"op-published\">2020-07-02T12:00:00+00:00</time>\n                  <time datetime=\"2020-07-02T12:00:00&#43;00:00\" class=\"op-modified\">2020-07-10T03:35:48+00:00</time>\n                </header>\n                \n\n<p>JavaScript currently has three types of applications that you can build with: Single Page Applications (SPAs), pre-rendering/static generated sites and server-side rendered applications. SPAs come with many <a href=\"https://en.wikipedia.org/wiki/Single-page_application#Challenges_with_the_SPA_model\">challenges</a>, one of which is Search Engine Optimization (SEO). Possible solutions are to make use of <a href=\"#static-site-generator\">Static Site Generators</a> or <a href=\"#server-side-rendering\">Server-Side Rendering (SSR)</a>.</p>\n\n<p>In this article, I’m going to explain them alongside listing their pros and cons so you have a balanced view. We’re going to look at what static generated/pre-rendering is as well as frameworks such as <a href=\"https://www.gatsbyjs.org/\">Gatsby</a> and <a href=\"https://www.smashingmagazine.com/2019/08/vuepress-documentation/\">VuePress</a> that help in creating statically generated sites. We’re also going to look at what server-side rendered (SSR) applications are as well as frameworks like <a href=\"https://nextjs.org/\">Nextjs</a> and <a href=\"https://nuxtjs.org/\">Nuxtjs</a> that can help you create SSR applications. Finally, we’re going to cover the differences between these two methods and which of them you should use when building your next application.</p>\n\n<p><strong>Note</strong>: <em>You can find all the code snippets in this article on <a href=\"https://github.com/Timibadass/ssgVSssr\">GitHub</a>.</em></p>\n\n\n  <div data-component=\"FeaturePanel\" data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container hidden\"></div>\n\n\n<h3 id=\"static-site-generator\">What Is A Static Site Generator?</h3>\n\n<p>A Static Site Generator (SSG) is a software application that creates HTML pages from templates or components and a given content source. You give it some text files and content, and the generator will give you back a complete website, and this completed website is referred to as a static generated site. What this means is that your site pages are generated at build time and your site content does not change unless you add new contents or components and <em>“rebuild”</em>  or you have to rebuild your site if you want it to be updated with new content.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/da1ef4c9-9d18-49c4-9d01-2defed1af3df/ssg-ssr-01-ssg.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/da1ef4c9-9d18-49c4-9d01-2defed1af3df/ssg-ssr-01-ssg.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/da1ef4c9-9d18-49c4-9d01-2defed1af3df/ssg-ssr-01-ssg.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/da1ef4c9-9d18-49c4-9d01-2defed1af3df/ssg-ssr-01-ssg.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/da1ef4c9-9d18-49c4-9d01-2defed1af3df/ssg-ssr-01-ssg.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/da1ef4c9-9d18-49c4-9d01-2defed1af3df/ssg-ssr-01-ssg.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/da1ef4c9-9d18-49c4-9d01-2defed1af3df/ssg-ssr-01-ssg.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Diagram explaining how static site generation works\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      How static site generation works (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/da1ef4c9-9d18-49c4-9d01-2defed1af3df/ssg-ssr-01-ssg.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>This approach is good for building applications that the content does not change too often &mdash; sites that the content does not have to change depending on the user, and sites that do not have a lot of user-generated content. An example of such a site is a blog or a personal website. Let’s look at some advantages of using static generated sites.</p>\n\n<h4 id=\"pros\">PROS</h4>\n\n<ul>\n<li><strong>Fast website</strong>: Since all of your site’s pages and content have been generated at build time, you do not have to worry about API calls to the server for content and this makes your site very fast.</li>\n<li><strong>Easy to deploy</strong>: After your static site has been generated, you would be left with static files, and hence, it can be easily deployed to platforms like <a href=\"https://www.netlify.com/\">Netlify</a>.</li>\n<li><strong>Security:</strong> Static generated site are solely composed of static files, the risk of being vulnerable to cyber attacks is minimal. This is because static generated sites have no database, attackers cannot inject malicious code or exploit your database.</li>\n<li>You can use version control software (e.g git) to manage and track changes to your content. This can come in handy when you want to roll back changes you made to the content on your site.</li>\n</ul>\n\n<h4 id=\"cons\">CONS</h4>\n\n<ul>\n<li>Content can become stale if it changes too quickly.</li>\n<li>To update its content, you have to rebuild the site.</li>\n<li>Build time would increase depending on the size of the application.</li>\n</ul>\n\n<p>Examples of static site generators are <a href=\"https://www.gatsbyjs.org/\">GatsbyJS</a> and <a href=\"https://vuepress.vuejs.org/\">VuePress</a>. Let us take a look at how to create static sites using these two generators.</p>\n\n<h4 id=\"gatsby\">Gatsby</h4>\n\n<p>According to their <a href=\"https://www.gatsbyjs.org/\">official website</a>,</p>\n\n<blockquote>“Gatsby is a free and open-source framework based on React that helps developers build blazing-fast websites and apps.”</blockquote>\n\n<p>This means developers familiar with <a href=\"https://reactjs.org/\">React</a> would find it easy to get started with Gatsby.</p>\n\n<p>To use this generator, you first have to install it using NPM:</p>\n\n<pre><code class=\"language-bash\">npm install -g gatsby-cli\n</code></pre>\n\n<p>This will install Gatsby globally on your machine, you only have to run this command once on your machine. After this installation is complete, you can create your first static site generator using the following command.</p>\n\n<pre><code class=\"language-bash\">gatsby new demo-gatsby\n</code></pre>\n\n<p>This command will create a new Gatsby project that I have named <code>demo-gatsby</code>. When this is done, you can start up your app server by running the following command:</p>\n\n<pre><code class=\"language-bash\">cd demo-gatsby\ngatsby develop\n</code></pre>\n\n<p>Your Gatsby application should be running on <a href=\"http://localhost:8000/\">localhost:8000</a>.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8462acef-ad49-4ae0-869e-2cf9694080f5/ssg-ssr-02-gatsby-landing.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8462acef-ad49-4ae0-869e-2cf9694080f5/ssg-ssr-02-gatsby-landing.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8462acef-ad49-4ae0-869e-2cf9694080f5/ssg-ssr-02-gatsby-landing.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8462acef-ad49-4ae0-869e-2cf9694080f5/ssg-ssr-02-gatsby-landing.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8462acef-ad49-4ae0-869e-2cf9694080f5/ssg-ssr-02-gatsby-landing.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8462acef-ad49-4ae0-869e-2cf9694080f5/ssg-ssr-02-gatsby-landing.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8462acef-ad49-4ae0-869e-2cf9694080f5/ssg-ssr-02-gatsby-landing.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Gatsby default landing page\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Gatsby default starter page (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8462acef-ad49-4ae0-869e-2cf9694080f5/ssg-ssr-02-gatsby-landing.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>The folder structure for this app looks like this;</p>\n\n<pre><code class=\"language-bash\">--| gatsby-browser.js  \n--| LICENSE        \n--| README.md\n--| gatsby-config.js\n--| node_modules/  \n--| src/\n----| components\n----| pages\n----| images\n--| gatsby-node.js     \n--| package.json   \n--| yarn.lock\n--| gatsby-ssr.js      \n--| public/\n----| icons\n----| page-data\n----| static\n</code></pre>\n\n<p>For this tutorial, we’re only going to look at the <strong>src/pages</strong> folder. This folder contains files that would be generated into routes on your site.</p>\n\n<p>To test this, let us add a new file (<em>newPage.js</em>) to this folder:</p>\n\n<div class=\"break-out\">\n <pre><code class=\"language-javascript\">import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nconst NewPage = () =&gt; (\n  &lt;Layout&gt;\n    &lt;SEO title=\"My New Page\" /&gt;\n    &lt;h1&gt;Hello Gatsby&lt;/h1&gt;\n    &lt;p&gt;This is my first Gatsby Page&lt;/p&gt;\n    &lt;button&gt;\n      &lt;Link to='/'&gt;Home&lt;/Link&gt;\n    &lt;/button&gt;\n  &lt;/Layout&gt;\n)\nexport default NewPage\n</code></pre>\n</div>\n\n<p>Here, we import <code>React</code> from the <code>react</code> package so when your code is transpiled to pure JavaScript, references to <code>React</code> will appear there. We also import a <code>Link</code> component from <code>gatsby</code> and this is one of React’s route tag that is used in place of the native anchor tag ( <code>&lt;a href=</code><code>'</code><code>#</code><code>'</code><code>&gt;Link&lt;/a&gt;</code>). It accepts a <code>to</code> prop that takes a route as a value.</p>\n\n<p>We import a <code>Layout</code> component that was added to your app by default. This component handles the layout of pages nested inside it. We also import the <code>SEO</code> component into this new file. This component accepts a <code>title</code> prop and configures this value as part of your page’s metadata. Finally, we export the function <code>NewPage</code> that returns a <a href=\"https://reactjs.org/docs/introducing-jsx.html\">JSX</a> containing your new page’s content.</p>\n\n<p>And in your <code>index.js</code> file, add a link to this new page we just created:</p>\n\n<div class=\"break-out\">\n <pre><code class=\"language-javascript\">import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Image from \"../components/image\"\nimport SEO from \"../components/seo\"\nconst IndexPage = () =&gt; (\n  &lt;Layout&gt;\n    &lt;SEO title=\"Home\" /&gt;\n    &lt;h1&gt;Hi people&lt;/h1&gt;\n    &lt;p&gt;Welcome to your new Gatsby site.&lt;/p&gt;\n    &lt;p&gt;Now go build something great.&lt;/p&gt;\n    &lt;div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}&gt;\n      &lt;Image /&gt;\n    &lt;/div&gt;\n    &lt;Link to=\"/page-2/\"&gt;Go to page 2&lt;/Link&gt;\n    {/&#42; new link &#42;/}\n    &lt;button&gt;\n      &lt;Link to=\"/newPage/\"&gt;Go to New Page&lt;/Link&gt;\n    &lt;/button&gt;\n  &lt;/Layout&gt;\n)\nexport default IndexPage\n</code></pre>\n</div>\n\n<p>Here, we import the same components that were used in <code>newPage.js</code> file and they perform the same function in this file. We also import an <code>Image</code> component from our <strong>components</strong> folder. This component is added by default to your Gatsby application and it helps in lazy loading images and serving reduced file size. Finally, we export a function <code>IndexPage</code> that returns JSX containing our new link and some default content.</p>\n\n<p>Now, if we open our browser, we should see our new link at the bottom of the page.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e52d01b7-d8f2-4fb1-85d4-8ab717e7ecb6/ssg-ssr-03-gatsby-newlink.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e52d01b7-d8f2-4fb1-85d4-8ab717e7ecb6/ssg-ssr-03-gatsby-newlink.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e52d01b7-d8f2-4fb1-85d4-8ab717e7ecb6/ssg-ssr-03-gatsby-newlink.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e52d01b7-d8f2-4fb1-85d4-8ab717e7ecb6/ssg-ssr-03-gatsby-newlink.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e52d01b7-d8f2-4fb1-85d4-8ab717e7ecb6/ssg-ssr-03-gatsby-newlink.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e52d01b7-d8f2-4fb1-85d4-8ab717e7ecb6/ssg-ssr-03-gatsby-newlink.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e52d01b7-d8f2-4fb1-85d4-8ab717e7ecb6/ssg-ssr-03-gatsby-newlink.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Gatsby default landing page with link to a new page\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Gatsby landing page with new link (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e52d01b7-d8f2-4fb1-85d4-8ab717e7ecb6/ssg-ssr-03-gatsby-newlink.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>And if you click on <strong>Go To New Page</strong>, it should take you to your newly added page.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/070a4eb1-63e3-448e-8239-944d5aab0372/ssg-ssr-04-gatsby-hello.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/070a4eb1-63e3-448e-8239-944d5aab0372/ssg-ssr-04-gatsby-hello.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/070a4eb1-63e3-448e-8239-944d5aab0372/ssg-ssr-04-gatsby-hello.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/070a4eb1-63e3-448e-8239-944d5aab0372/ssg-ssr-04-gatsby-hello.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/070a4eb1-63e3-448e-8239-944d5aab0372/ssg-ssr-04-gatsby-hello.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/070a4eb1-63e3-448e-8239-944d5aab0372/ssg-ssr-04-gatsby-hello.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/070a4eb1-63e3-448e-8239-944d5aab0372/ssg-ssr-04-gatsby-hello.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"New page containing some texts\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      New gatsby page (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/070a4eb1-63e3-448e-8239-944d5aab0372/ssg-ssr-04-gatsby-hello.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h4 id=\"vuepress\">VuePress</h4>\n\n<p>VuePress is a static site generator that is powered by <a href=\"http://vuejs.org/\">Vue</a>, <a href=\"https://github.com/vuejs/vue-router\">Vue Router</a> and <a href=\"http://webpack.js.org/\">Webpack</a>. It requires little to no configuration for you to get started with it. While there are a number of tools that are static site generators, VuePress stands out from amongst the pack for a single reason: its primary directive is to make it easier for developers to create and maintain great documentation for their projects.</p>\n\n<p>To use VuePress, you first have to install it:</p>\n\n<pre><code class=\"language-bash\">//globally\nyarn global add vuepress # OR npm install -g vuepress\n\n//in an existing project\nyarn add -D vuepress # OR npm install -D vuepress\n</code></pre>\n\n<p>Once the installation process is done, you can run the following command in your terminal:</p>\n\n<pre><code class=\"language-bash\"># create the project folder\nmkdir demo-vuepress && cd demo-vuepress\n\n# create a markdown file\necho '# Hello VuePress' > README.md\n\n# start writing\nvuepress dev\n</code></pre>\n\n<p>Here, we create a folder for our VuePress application, add a <strong>README.md</strong> file with <code># Hello VuePress</code> as the only content inside this file, and finally, start up our server.</p>\n\n<p>When this is done, our application should be running on <a href=\"http://localhost:8080\">localhost:8080</a> and we should see this in our browser:</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ccbf38b9-0c3b-46d7-be8f-6d9882577be4/ssg-ssr-05-vuepress-landing.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ccbf38b9-0c3b-46d7-be8f-6d9882577be4/ssg-ssr-05-vuepress-landing.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ccbf38b9-0c3b-46d7-be8f-6d9882577be4/ssg-ssr-05-vuepress-landing.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ccbf38b9-0c3b-46d7-be8f-6d9882577be4/ssg-ssr-05-vuepress-landing.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ccbf38b9-0c3b-46d7-be8f-6d9882577be4/ssg-ssr-05-vuepress-landing.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ccbf38b9-0c3b-46d7-be8f-6d9882577be4/ssg-ssr-05-vuepress-landing.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ccbf38b9-0c3b-46d7-be8f-6d9882577be4/ssg-ssr-05-vuepress-landing.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"A VuePress webpage with a text saying ‘Hello VuePress’\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      VuePress landing page (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ccbf38b9-0c3b-46d7-be8f-6d9882577be4/ssg-ssr-05-vuepress-landing.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>VuePress supports VueJS syntax and markup inside this file. Update your <code>README.md</code> file with the following:</p>\n\n<div class=\"break-out\">\n <pre><code class=\"language-md\"># Hello VuePress\n&#95;VuePress Rocks&#95;\n&gt; &#42;&#42;Yes!&#42;&#42;\n&#95;It supports JavaScript interpolation code&#95;\n&gt; &#42;&#42;{{new Date()}}&#42;&#42;\n&lt;p v-for=\"i of ['v','u', 'e', 'p', 'r', 'e', 's', 's']\"&gt;{{i}}&lt;/p&gt;\n</code></pre>\n</div>\n\n<p>If you go back to your browser, your page should look like this:</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/34a69122-e4c2-4651-8ed7-c049842eb845/ssg-ssr-06-vuepress-updated.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/34a69122-e4c2-4651-8ed7-c049842eb845/ssg-ssr-06-vuepress-updated.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/34a69122-e4c2-4651-8ed7-c049842eb845/ssg-ssr-06-vuepress-updated.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/34a69122-e4c2-4651-8ed7-c049842eb845/ssg-ssr-06-vuepress-updated.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/34a69122-e4c2-4651-8ed7-c049842eb845/ssg-ssr-06-vuepress-updated.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/34a69122-e4c2-4651-8ed7-c049842eb845/ssg-ssr-06-vuepress-updated.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/34a69122-e4c2-4651-8ed7-c049842eb845/ssg-ssr-06-vuepress-updated.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Updated VuePress page\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Updated Vuepress page (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/34a69122-e4c2-4651-8ed7-c049842eb845/ssg-ssr-06-vuepress-updated.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>To add a new page to your VuePress site, you add a new markdown file to the root directory and name it whatever you want the route to be. In this case, I’ve gone ahead to name it <code>Page-2.md</code> and added the following to the file:</p>\n\n<div class=\"break-out\">\n <pre><code class=\"language-md\"># hello World\nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\ntempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\nquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\nconsequat.\n</code></pre>\n</div>\n\n<p>And now, if you navigate to <code>/page-2</code> in your browser, we should see this:</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5b4f2c07-742e-4092-88c9-b3d6f920c482/ssg-ssr-07-vuepress-hellopage.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5b4f2c07-742e-4092-88c9-b3d6f920c482/ssg-ssr-07-vuepress-hellopage.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5b4f2c07-742e-4092-88c9-b3d6f920c482/ssg-ssr-07-vuepress-hellopage.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5b4f2c07-742e-4092-88c9-b3d6f920c482/ssg-ssr-07-vuepress-hellopage.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5b4f2c07-742e-4092-88c9-b3d6f920c482/ssg-ssr-07-vuepress-hellopage.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5b4f2c07-742e-4092-88c9-b3d6f920c482/ssg-ssr-07-vuepress-hellopage.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5b4f2c07-742e-4092-88c9-b3d6f920c482/ssg-ssr-07-vuepress-hellopage.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"A VuePress webpage containing hello world\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      A “Hello World” page in VuePress (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5b4f2c07-742e-4092-88c9-b3d6f920c482/ssg-ssr-07-vuepress-hellopage.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<div class=\"sponsors__lead-place\"></div>\n\n\n\n\n<h3 id=\"server-side-rendering\">What Is Server-Side Rendering? (SSR)</h3>\n\n<p>Server-Side Rendering (SSR), is the process of displaying web-pages on the server and passing it to the browser/client-side instead of rendering it in the browser. Server-side sends a fully rendered page to the client; the client’s JavaScript bundle takes over and allows the SPA framework to operate.</p>\n\n<p>This means if you have an application that is server-side rendered, your content is fetched on the server side and passed to your browser to display to your user. With client-side rendering it is different, you would have to navigate to that page first before it fetches data from your server meaning your user would have to wait for some seconds before they’re served with the content on that page. Applications that have SSR enabled are called Server-side rendered applications.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/94ac796d-f3fd-4984-8d62-5e3ca2134f13/ssg-ssr-08-ssr.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/94ac796d-f3fd-4984-8d62-5e3ca2134f13/ssg-ssr-08-ssr.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/94ac796d-f3fd-4984-8d62-5e3ca2134f13/ssg-ssr-08-ssr.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/94ac796d-f3fd-4984-8d62-5e3ca2134f13/ssg-ssr-08-ssr.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/94ac796d-f3fd-4984-8d62-5e3ca2134f13/ssg-ssr-08-ssr.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/94ac796d-f3fd-4984-8d62-5e3ca2134f13/ssg-ssr-08-ssr.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/94ac796d-f3fd-4984-8d62-5e3ca2134f13/ssg-ssr-08-ssr.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"A diagram explaining how server-side rendering works\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      How SSR works (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/94ac796d-f3fd-4984-8d62-5e3ca2134f13/ssg-ssr-08-ssr.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>This approach is good for building complex applications that require user interaction, rely on a database, or where the content changes very often. This is because content on these sites changes very often and the users need to see the updated content as soon as they’re updated. It is also good for applications that have tailored content depending on who is viewing it and applications where you need to store user-specific data like email and user preference while also catering for SEO. An example of this is a large e-commerce platform or a social media site. Let us look at some of the advantages of server-side rendering your applications.</p>\n\n<h4 id=\"pros-1\">Pros</h4>\n\n<ul>\n<li>Content is up to date because it fetches content on the go;</li>\n<li>Your site loads fast because it fetches its content on the server-side before rendering it to the user;</li>\n<li>Since in SSR JavaScript is rendered server-side, your users’ devices have little relevance to the load time of your page and this leads to better performance.</li>\n</ul>\n\n<h4 id=\"cons-1\">CONS</h4>\n\n<ul>\n<li>More API calls to the server since they’re made per request;</li>\n<li>Cannot deploy to a static CDN.</li>\n</ul>\n\n<p>Further examples of frameworks that offer SSR are <a href=\"#nextjs\">Next.js</a> and <a href=\"nuxtjs\">Nuxt.js</a>.</p>\n\n<h4 id=\"#nextjs\">Next.js</h4>\n\n<p>Next.js is a React.js framework that helps in building static sites, server-side rendered applications, and so on. Since it was built on React, knowledge of React is required to use this framework.</p>\n\n<p>To create a Next.js app, you need to run the following:</p>\n\n<pre><code class=\"language-bash\">npm init next-app\n# or\nyarn create next-app\n</code></pre>\n\n<p>You would be prompted to choose a name your application, I have named my application <code>demo-next</code>. The next option would be to select a template and I’ve selected the <strong>Default starter app</strong> after which it begins to set up your app. When this is done, we can now start our application</p>\n\n<pre><code class=\"language-bash\">cd demo-next\nyarn dev \n# or npm run dev\n</code></pre>\n\n<p>Your application should be running on <a href=\"http://localhost:3000/\">localhost:3000</a> and you should see this in your browser;</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6105864e-abf6-4e9e-b815-7e112c0183db/ssg-ssr-09-nextjs-landing.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6105864e-abf6-4e9e-b815-7e112c0183db/ssg-ssr-09-nextjs-landing.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6105864e-abf6-4e9e-b815-7e112c0183db/ssg-ssr-09-nextjs-landing.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6105864e-abf6-4e9e-b815-7e112c0183db/ssg-ssr-09-nextjs-landing.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6105864e-abf6-4e9e-b815-7e112c0183db/ssg-ssr-09-nextjs-landing.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6105864e-abf6-4e9e-b815-7e112c0183db/ssg-ssr-09-nextjs-landing.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6105864e-abf6-4e9e-b815-7e112c0183db/ssg-ssr-09-nextjs-landing.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Default Nextjs landing page\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Next.js landing page (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6105864e-abf6-4e9e-b815-7e112c0183db/ssg-ssr-09-nextjs-landing.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>The page that is being rendered can be found in <code>pages/index.js</code> so if you open this file and modify the JSX inside the <code>Home</code> function, it would reflect in your browser. Replace the JSX with this:</p>\n\n<div class=\"break-out\">\n <pre><code class=\"language-javascript\">import Head from 'next/head'\nexport default function Home() {\n  return (\n    &lt;div className=\"container\"&gt;\n      &lt;Head&gt;\n        &lt;title&gt;Hello Next.js&lt;/title&gt;\n        &lt;link rel=\"icon\" href=\"/favicon.ico\" /&gt;\n      &lt;/Head&gt;\n      &lt;main&gt;\n        &lt;h1 className=\"title\"&gt;\n          Welcome to &lt;a href=\"https://nextjs.org\"&gt;Next.js!&lt;/a&gt;\n        &lt;/h1&gt;\n        &lt;p className='description'&gt;Nextjs Rocks!&lt;/p&gt;\n      &lt;/main&gt;\n      &lt;style jsx&gt;{`\n        main {\n          padding: 5rem 0;\n          flex: 1;\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n        }\n        .title a {\n          color: #0070f3;\n          text-decoration: none;\n        }\n        .title a:hover,\n        .title a:focus,\n        .title a:active {\n          text-decoration: underline;\n        }\n        .title {\n          margin: 0;\n          line-height: 1.15;\n          font-size: 4rem;\n        }\n        .title,\n        .description {\n          text-align: center;\n        }\n        .description {\n          line-height: 1.5;\n          font-size: 1.5rem;\n        }\n      `}&lt;/style&gt;\n      &lt;style jsx global&gt;{`\n        html,\n        body {\n          padding: 0;\n          margin: 0;\n          font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto,\n            Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue,\n            sans-serif;\n        }\n        * {\n          box-sizing: border-box;\n        }\n      `}&lt;/style&gt;\n    &lt;/div&gt;\n  )\n}\n</code></pre>\n</div>\n\n<p>In this file, we make use of Next.js <a href=\"https://nextjs.org/docs/api-reference/next/head\">Head component</a> to set our page’s metadata title and favicon for this page. We also export a <code>Home</code> function that returns a JSX containing our page’s content. This JSX contains our <code>Head</code> component together with our main page’s content. It also contains two style tags, one for styling this page and the other for the global styling of the app.</p>\n\n<p>Now, you should see that the content on your app has changed to this:</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2b6dea03-247f-4945-b0d1-3b21c6dcbafa/ssg-ssr-10-nextjs-updated.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2b6dea03-247f-4945-b0d1-3b21c6dcbafa/ssg-ssr-10-nextjs-updated.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2b6dea03-247f-4945-b0d1-3b21c6dcbafa/ssg-ssr-10-nextjs-updated.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2b6dea03-247f-4945-b0d1-3b21c6dcbafa/ssg-ssr-10-nextjs-updated.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2b6dea03-247f-4945-b0d1-3b21c6dcbafa/ssg-ssr-10-nextjs-updated.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2b6dea03-247f-4945-b0d1-3b21c6dcbafa/ssg-ssr-10-nextjs-updated.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2b6dea03-247f-4945-b0d1-3b21c6dcbafa/ssg-ssr-10-nextjs-updated.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Nextjs landing page containing ‘welcome to Nextjs’ text\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Updated landing page (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2b6dea03-247f-4945-b0d1-3b21c6dcbafa/ssg-ssr-10-nextjs-updated.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Now if we want to add a new page to our app, we have to add a new file inside the <strong>/pages</strong> folder. Routes are automatically created based on the <strong>/pages</strong> folder structure, this means that if you have a folder structure that looks like this:</p>\n\n<pre><code class=\"language-bash\">--| pages\n----| index.js ==> '/'\n----| about.js ==> '/about'\n----| projects\n------| next.js ==> '/projects/next'\n</code></pre>\n\n<p>So in your <strong>pages</strong> folder, add a new file and name it <code>hello.js</code> then add the following to it:</p>\n\n<div class=\"break-out\">\n <pre><code class=\"language-javascript\">import Head from 'next/head'\nexport default function Hello() {\n  return (\n    &lt;div&gt;\n       &lt;Head&gt;\n        &lt;title&gt;Hello World&lt;/title&gt;\n        &lt;link rel=\"icon\" href=\"/favicon.ico\" /&gt;\n      &lt;/Head&gt;\n      &lt;main className='container'&gt;\n        &lt;h1 className='title'&gt;\n         Hello &lt;a href=\"https://en.wikipedia.org/wiki/Hello_World_(film)\"&gt;World&lt;/a&gt;\n        &lt;/h1&gt;\n        &lt;p className='subtitle'&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Voluptatem provident soluta, sit explicabo impedit nobis accusantium? Nihil beatae, accusamus modi assumenda, optio omnis aliquid nobis magnam facilis ipsam eum saepe!&lt;/p&gt;\n      &lt;/main&gt;\n      &lt;style jsx&gt; {`\n      \n      .container {\n        margin: 0 auto;\n        min-height: 100vh;\n        max-width: 800px;\n        text-align: center;\n      }\n      .title {\n        font-family: \"Quicksand\", \"Source Sans Pro\", -apple-system, BlinkMacSystemFont,\n          \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif;\n        display: block;\n        font-weight: 300;\n        font-size: 100px;\n        color: #35495e;\n        letter-spacing: 1px;\n      }\n      .subtitle {\n        font-weight: 300;\n        font-size: 22px;\n        color: #526488;\n        word-spacing: 5px;\n        padding-bottom: 15px;\n      }\n      `} &lt;/style&gt;\n    &lt;/div&gt;\n  )\n}\n</code></pre>\n</div>\n\n<p>This page is identical to the landing page we already have, we only changed the content and added new styling to the JSX. Now if we visit <a href=\"http://localhost:3000/hello\">localhost:3000/hello</a>, we should see our new page:</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7422acd6-6b80-4f40-ad8d-f310671f14f4/ssg-ssr-11-nextjs-hellopage.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7422acd6-6b80-4f40-ad8d-f310671f14f4/ssg-ssr-11-nextjs-hellopage.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7422acd6-6b80-4f40-ad8d-f310671f14f4/ssg-ssr-11-nextjs-hellopage.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7422acd6-6b80-4f40-ad8d-f310671f14f4/ssg-ssr-11-nextjs-hellopage.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7422acd6-6b80-4f40-ad8d-f310671f14f4/ssg-ssr-11-nextjs-hellopage.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7422acd6-6b80-4f40-ad8d-f310671f14f4/ssg-ssr-11-nextjs-hellopage.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7422acd6-6b80-4f40-ad8d-f310671f14f4/ssg-ssr-11-nextjs-hellopage.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"A Nextjs webpage containing ‘Hello world’\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      A “Hello World ” page in Next.js (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7422acd6-6b80-4f40-ad8d-f310671f14f4/ssg-ssr-11-nextjs-hellopage.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Finally, we need to add a link to this new page on our <code>index.js</code> page, and to do this, we make use of <a href=\"https://nextjs.org/docs/api-reference/next/link\">Next’s Link</a> component. To do that, we have to import it first.</p>\n\n<pre><code class=\"language-javascript\"># index.js\nimport Link from 'next/link'\n\n#Add this to your JSX\n&lt;Link href='/hello'&gt;\n&lt;Link href='/hello'&gt;\n  &lt;a&gt;Next&lt;/a&gt;\n&lt;/Link&gt;\n</code></pre>\n\n<p>This link component is how we add links to pages created in Next in our application.</p>\n\n<p>Now if we go back to our homepage and click on this link, it would take us to our <code>/hello</code> page.</p>\n\n<h4 id=\"nuxtjs\">Nuxt.js</h4>\n\n<p>According to their <a href=\"https://nuxtjs.org/guide\">official documentation</a>:</p>\n\n<blockquote>“Nuxt is a progressive framework based on Vue.js to create modern web applications. It is based on Vue.js official libraries (vue, vue-router and vuex) and powerful development tools (webpack, Babel and PostCSS). Nuxt’s goal is to make web development powerful and performant with a great developer experience in mind.”</blockquote>\n\n<p>It is based on Vue.js so that means Vue.js developers would find it easy getting started with it and knowledge of Vue.js is required to use this framework.</p>\n\n<p>To create a Nuxt.js app, you need to run the following command in your terminal:</p>\n\n<pre><code class=\"language-bash\">yarn create nuxt-app &lt;project-name&gt;\n# or npx\nnpx create-nuxt-app &lt;project-name&gt;\n</code></pre>\n\n<p>This would prompt you to select a name along with some other options. I named mine <code>demo-nuxt</code> and selected default options for the other options. When this is done, you can open your app folder and open <strong>pages/index.vue.</strong> Every file in this folder file is turned into a route and so our landing page is controlled by <code>index.vue</code> file. So if you update it with the following:</p>\n\n<div class=\"break-out\">\n <pre><code class=\"language-javascript\">&lt;template&gt;\n  &lt;div class=\"container\"&gt;\n    &lt;div&gt;\n      &lt;logo /&gt;\n      &lt;h1 class=\"title\"&gt;\n        Hello Nuxt\n      &lt;/h1&gt;\n      &lt;h2 class=\"subtitle\"&gt;\n        Nuxt.js ROcks!\n      &lt;/h2&gt;\n      &lt;div class=\"links\"&gt;\n        &lt;a\n          href=\"https://nuxtjs.org/\"\n          target=\"&#95;blank\"\n          class=\"button--green\"\n        &gt;\n          Documentation\n        &lt;/a&gt;\n        &lt;a\n          href=\"https://github.com/nuxt/nuxt.js\"\n          target=\"&#95;blank\"\n          class=\"button--grey\"\n        &gt;\n          GitHub\n        &lt;/a&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Logo from '~/components/Logo.vue'\nexport default {\n  components: {\n    Logo\n  }\n}\n&lt;/script&gt;\n&lt;style&gt;\n.container {\n  margin: 0 auto;\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n}\n.title {\n  font-family: 'Quicksand', 'Source Sans Pro', -apple-system, BlinkMacSystemFont,\n    'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;\n  display: block;\n  font-weight: 300;\n  font-size: 100px;\n  color: #35495e;\n  letter-spacing: 1px;\n}\n.subtitle {\n  font-weight: 300;\n  font-size: 42px;\n  color: #526488;\n  word-spacing: 5px;\n  padding-bottom: 15px;\n}\n.links {\n  padding-top: 15px;\n}\n&lt;/style&gt;\n</code></pre>\n</div>\n\n<p>And run your application:</p>\n\n<pre><code class=\"language-bash\">cd demo-nuxt\n# start your applicatio\nyarn dev # or npm run dev\n</code></pre>\n\n<p>Your application should be running on <a href=\"http://localhost:3000/\">localhost:3000</a> and you should see this:</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8477dfb2-ea85-4fb6-a502-78e3a451f0a5/ssg-ssr-12-nuxt-landing.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8477dfb2-ea85-4fb6-a502-78e3a451f0a5/ssg-ssr-12-nuxt-landing.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8477dfb2-ea85-4fb6-a502-78e3a451f0a5/ssg-ssr-12-nuxt-landing.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8477dfb2-ea85-4fb6-a502-78e3a451f0a5/ssg-ssr-12-nuxt-landing.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8477dfb2-ea85-4fb6-a502-78e3a451f0a5/ssg-ssr-12-nuxt-landing.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8477dfb2-ea85-4fb6-a502-78e3a451f0a5/ssg-ssr-12-nuxt-landing.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8477dfb2-ea85-4fb6-a502-78e3a451f0a5/ssg-ssr-12-nuxt-landing.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Default Nuxtjs landing page\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Nuxt.js landing page (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8477dfb2-ea85-4fb6-a502-78e3a451f0a5/ssg-ssr-12-nuxt-landing.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>We can see that this page displays the content we added in to <code>index.vue</code>. The router structure works the same way Next.js router works; it renders every file inside <code>/pages</code> folder into a page. So let us add a new page (<em>hello.vue</em>) to our application.</p>\n\n<div class=\"break-out\">\n <pre><code class=\"language-javascript\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;Hello World!&lt;/h1&gt;\n    &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Id ipsa vitae tempora perferendis, voluptate a accusantium itaque vel ex, provident autem quod rem saepe ullam hic explicabo voluptas, libero distinctio?&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nexport default {};\n&lt;/script&gt;\n&lt;style&gt;\n&lt;/style&gt;\n</code></pre>\n</div>\n\n<p>So if you open <a href=\"http://localhost:3000/hello\">localhost:3000/hello</a>, you should see your new page in your browser.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/543da7f9-208d-4409-b4b0-15692a0849f9/ssg-ssr-13-nuxt-hellopage.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/543da7f9-208d-4409-b4b0-15692a0849f9/ssg-ssr-13-nuxt-hellopage.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/543da7f9-208d-4409-b4b0-15692a0849f9/ssg-ssr-13-nuxt-hellopage.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/543da7f9-208d-4409-b4b0-15692a0849f9/ssg-ssr-13-nuxt-hellopage.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/543da7f9-208d-4409-b4b0-15692a0849f9/ssg-ssr-13-nuxt-hellopage.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/543da7f9-208d-4409-b4b0-15692a0849f9/ssg-ssr-13-nuxt-hellopage.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/543da7f9-208d-4409-b4b0-15692a0849f9/ssg-ssr-13-nuxt-hellopage.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"A Nuxtjs webpage containing ‘Hello World’\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      “Hello World” page in Nuxtjs (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/543da7f9-208d-4409-b4b0-15692a0849f9/ssg-ssr-13-nuxt-hellopage.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h3 id=\"taking-a-closer-look-at-the-differences\">Taking A Closer Look At The Differences</h3>\n\n<p>Now that we have looked at both static-site generators and server-side rendering and how to get started with them by using some popular tools, let us look at the differences between them.</p>\n\n<table class=\"tablesaw\" data-tablesaw-mode=\"swipe\" data-tablesaw-minimap>\n  <thead>\n    <tr>\n      <th data-tablesaw-priority=\"persist\">Static Sites Generators</th>\n      <th>Server-Side Rendering</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Can easily be deployed to a static CDN</td>\n      <td>Cannot be deployed to a static CDN</td>\n    </tr>\n    <tr>\n      <td>Content and pages are generated at build time</td>\n      <td>Content and pages are generated per request</td>\n    </tr>\n    <tr>\n      <td>Content can become stale quickly</td>\n      <td>Content is always up to date</td>\n    </tr>\n    <tr>\n      <td>Fewer API calls since it only makes it at build time</td>\n      <td>Makes API calls each time a new page is visited</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"conclusion\">Conclusion</h3>\n\n<p>We can see why it is so easy to think both static generated sites and server-side rendered applications are the same. Now that we know the differences between them are, I would advise that we try to learn more on how to build both static generated sites and server-side rendered applications in order to fully understand the differences between them.</p>\n\n<h4 id=\"further-resources\">Further Resources</h4>\n\n<p>Here are some useful links that are bound to help you get started in no time:</p>\n\n<ul>\n<li>“<a href=\"https://www.gatsbyjs.org/\">Getting Started With Gatsby</a>,” Gatsby official website</li>\n<li>“<a href=\"https://vuepress.vuejs.org/\">Getting Started With VuePress</a>,” VuePress official website</li>\n<li>“<a href=\"https://www.smashingmagazine.com/2019/08/vuepress-documentation/\">VuePress: Documentation Made Easy</a>,” Ben Hong, Smashing Magazine</li>\n<li>“<a href=\"https://nextjs.org/\">Getting Started With Next.js</a>,” Next.js by Vercel official website</li>\n<li>“<a href=\"https://www.quora.com/Why-do-people-use-a-static-site-generator/answer/Meenu-Thariyan-1?ch=10&amp;share=7cee655d&amp;srid=XMrjg\">Why Do People Use A Static-Site Generator?</a>,” Quora</li>\n<li>“<a href=\"https://www.gatsbyjs.org/docs/glossary/static-site-generator/\">Static Site Generator</a>,” Gatsby official website</li>\n<li>“<a href=\"https://www.digitalocean.com/community/tutorials/vuejs-vuepress-introduction\">An Introduction To VuePress</a>,” Joshua Bemenderfer, DigitalOcean</li>\n<li>“<a href=\"https://www.educative.io/edpresso/what-is-server-side-rendering\">What Is Server-Side Rendering?</a>,” Edpresso, Educative.io</li>\n<li>“<a href=\"https://www.netlify.com/blog/2020/04/14/what-is-a-static-site-generator-and-3-ways-to-find-the-best-one/\">What Is A Static Site Generator? And 3 Ways To Find The Best One </a>,” Phil Hawksworth, The Netlify Blog</li>\n<li>“<a href=\"https://medium.com/walmartlabs/the-benefits-of-server-side-rendering-over-client-side-rendering-5d07ff2cefe8\">The Benefits Of Server Side Rendering Over Client Side Rendering</a>,” Alex Grigoryan, Medium</li>\n</ul>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\">\n  <span>(ks, ra, il)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        ",
      "content": "JavaScript currently has three types of applications that you can build with: Single Page Applications (SPAs), pre-rendering/static generated sites and server-side rendered applications. SPAs come with many challenges, one of which is Search Engine Optimization (SEO). Possible solutions are to make use of Static Site Generators or Server-Side Rendering (SSR).\nIn this article, I’m going to explain them alongside listing their pros and cons so you have a balanced view.",
      "contentSnippet": "JavaScript currently has three types of applications that you can build with: Single Page Applications (SPAs), pre-rendering/static generated sites and server-side rendered applications. SPAs come with many challenges, one of which is Search Engine Optimization (SEO). Possible solutions are to make use of Static Site Generators or Server-Side Rendering (SSR).\nIn this article, I’m going to explain them alongside listing their pros and cons so you have a balanced view.",
      "guid": "https://www.smashingmagazine.com/2020/07/differences-static-generated-sites-server-side-rendered-apps/",
      "isoDate": "2020-07-02T12:00:00.000Z"
    },
    {
      "creator": "Carrie Webster",
      "title": "Information And Information Architecture: The BIG Picture",
      "link": "https://www.smashingmagazine.com/2020/07/information-architecture-big-picture/",
      "pubDate": "Wed, 01 Jul 2020 12:30:00 +0000",
      "author": "Carrie Webster",
      "content:encoded": "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2020/07/information-architecture-big-picture/\" />\n              <title>Information And Information Architecture: The BIG Picture</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>Information And Information Architecture: The BIG Picture</h1>\n                  \n                    \n                    <address>Carrie Webster</address>\n                  \n                  <time datetime=\"2020-07-01T12:30:00&#43;00:00\" class=\"op-published\">2020-07-01T12:30:00+00:00</time>\n                  <time datetime=\"2020-07-01T12:30:00&#43;00:00\" class=\"op-modified\">2020-07-10T03:35:48+00:00</time>\n                </header>\n                \n\n<p>We are living in a world exploding with information, but how do we find what is relevant to us at the time that we need it? I believe that good information architecture is key to helping us navigate through the mountains of data and information we have created for ourselves. </p>\n\n<p>In this article, we will first describe what information architecture is, why it’s important, and approaches to effective implementation. Then we explore ideas around the broader view of the information age, how we use information, and how it impacts our world and our lives. These insights are designed to help you to understand the bigger picture, which enables us to grasp the value that good information architecture delivers to help our information-overloaded lives.</p>\n\n<h3 id=\"what-is-information-architecture-and-why-is-it-important\">What Is Information Architecture And Why Is It Important?</h3>\n\n<blockquote>“Information architecture is the practice of deciding how to arrange the parts of something to be understandable.”<br /><br />&mdash; <a href=\"https://www.iainstitute.org/\">The Information Architecture Institute</a></blockquote>\n\n<p>From a user experience perspective, this really means understanding how your users think, what problems they are trying to solve, and then presenting information in a logical way that makes sense from within this context. </p>\n\n<p>Whether it is a website, a software application or a smartphone app, it’s about first designing the structure of how your information is organized, and then translating this into a logical navigation hierarchy that makes sense to the users who will be accessing it. In this world where we can sometimes feel as though we are drowning in data, information architecture provides us with a logical way of organizing this data to make it easier to locate. </p>\n\n\n  <div data-component=\"FeaturePanel\" data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container hidden\"></div>\n\n\n<p>Here are some other reasons why good information architecture is important:</p>\n\n<h4 id=\"for-the-user\">For The User</h4>\n\n<ul>\n<li><strong>It reduces cognitive load.</strong><br />\nToo much information on a screen with no clear pathway can make it difficult for a user to focus. Too many options can lead to <a href=\"https://www.behavioraleconomics.com/resources/mini-encyclopedia-of-be/choice-overload/\">choice deferral</a> where a user chooses not to make a decision at all.</li>\n<li><strong>It speeds up the process of finding the right information.</strong><br />\nThis is the opposite of choice deferral, where the user is able to easily locate what they are looking for with clear navigation choices.</li>\n<li><strong>It can keep the user focussed on the task they are trying to achieve.</strong><br />\nIf the task a user is engaging in is easy to follow without additional non-contextual navigation elements, it’s less likely they will be distracted.</li>\n<li><strong>It makes it easier to analyze and understand information by the addition of context.</strong><br />\nProviding a visual navigation path of exactly where the user is within a website can provide more context for the content they are viewing. For example, during an online bank account application, displaying the total number of steps in the process and visually indicating exactly which step you are at, and what the next steps may involve gives context to the flow.<br /></li>\n<li><strong>Reduces frustration and contacting support.</strong><br />\nIf it is clear to the user where they can find what they need, there is no need to request help. For example, if a customer has received a purchased item that is faulty, without obvious instruction on how to rectify the situation, they may call the customer support center. </li>\n</ul>\n\n<p>Below are a couple of examples helping to illustrate the points about the user.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7a1609e3-c268-4729-8776-9e610964707f/ia-big-picture-wizard-style.jpg\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7a1609e3-c268-4729-8776-9e610964707f/ia-big-picture-wizard-style.jpg 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7a1609e3-c268-4729-8776-9e610964707f/ia-big-picture-wizard-style.jpg 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7a1609e3-c268-4729-8776-9e610964707f/ia-big-picture-wizard-style.jpg 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7a1609e3-c268-4729-8776-9e610964707f/ia-big-picture-wizard-style.jpg 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7a1609e3-c268-4729-8776-9e610964707f/ia-big-picture-wizard-style.jpg 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7a1609e3-c268-4729-8776-9e610964707f/ia-big-picture-wizard-style.jpg\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Wizard example\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (Image source: <a href='http://www.shaunutter.com/'>Shaun Utter</a>) (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7a1609e3-c268-4729-8776-9e610964707f/ia-big-picture-wizard-style.jpg'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>The example above demonstrates:</p>\n\n<ul>\n<li>The use of a “wizard” style application form and illustrates many of the points above. </li>\n<li>Clear navigation steps across the top of the page providing context as to where the user is in the process.</li>\n<li>Simple choices to guide the user. </li>\n<li>Contextual information links in the form of FAQs relating to the step the user is at. </li>\n<li>Navigation button at the bottom of the page giving specific instructions for the next step.</li>\n</ul>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6705e8fc-d9a7-492d-8b77-f303c6639975/ia-big-picture-punkd-website.jpg\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6705e8fc-d9a7-492d-8b77-f303c6639975/ia-big-picture-punkd-website.jpg 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6705e8fc-d9a7-492d-8b77-f303c6639975/ia-big-picture-punkd-website.jpg 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6705e8fc-d9a7-492d-8b77-f303c6639975/ia-big-picture-punkd-website.jpg 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6705e8fc-d9a7-492d-8b77-f303c6639975/ia-big-picture-punkd-website.jpg 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6705e8fc-d9a7-492d-8b77-f303c6639975/ia-big-picture-punkd-website.jpg 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6705e8fc-d9a7-492d-8b77-f303c6639975/ia-big-picture-punkd-website.jpg\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6705e8fc-d9a7-492d-8b77-f303c6639975/ia-big-picture-punkd-website.jpg'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>The website example above, <a href=\"https://punkave.com/work\">Punk Avenue</a> shows another example of clear main navigation, with a brief summary of what you will find on each page. Below that is a series of tabs that keep you on the same page and visually indicate what information you are viewing. </p>\n\n<h4 id=\"for-a-business\">For A Business</h4>\n\n<ul>\n<li><p><strong>Keeps customers on their website for longer.</strong><br />\nResearch shows that visitors to a website will often <a href=\"https://www.nngroup.com/articles/how-long-do-users-stay-on-web-pages/\">leave within 10-20 seconds</a>, but with a clear purpose, you can engage your visitors for a longer period. Although good design and messaging help to present the site’s value proposition, a well-designed navigation display can also contribute to demonstrate what kind of information supports this value proposition.</p></li>\n\n<li><p><strong>Increases the chance of customer conversion.</strong><br />\nIf your site visitor can find what they want via the navigation, and there are simple and minimal steps provided on how to acquire it, the chances of conversion are far higher than a site design that is unable to direct the user to the right information.</p></li>\n\n<li><p><strong>Reduces risk of customers going to a competitor.</strong><br />\nIf a visitor to your site can easily find what they are looking for through effective navigation and good design, chances are they’ll stay there rather than move onto the next Google search result.</p></li>\n\n<li><p><strong>Reduces duplication of information (by design).</strong><br />\nGood information architecture can ensure that the same or similar content is not replicated. Understanding and documenting the content structure, particularly on information-heavy sites, can prevent these potential issues.</p></li>\n\n<li><p><strong>Better ROI through efficient use of the platform.</strong><br />\nThe investment spent on ensuring that the information architecture on your site is effective and makes sense to your users is a compelling way to increase your customer conversions and the income derived from those sales.</p></li>\n\n<li><p><strong>Reduces cost of support when a user can’t find something.</strong><br />\nAs described earlier, creating an unnecessary load on the customer support team is an additional cost that can be avoided by a site that functions well and provides assistance for customers when they need it. </p></li>\n</ul>\n\n<p>The example below helps to illustrate some of the points above about business.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cc91c7ae-43fe-4e14-a7c9-7e41c387cf03/ia-big-picture-ecommerce-ab-test-fsa-store.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cc91c7ae-43fe-4e14-a7c9-7e41c387cf03/ia-big-picture-ecommerce-ab-test-fsa-store.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cc91c7ae-43fe-4e14-a7c9-7e41c387cf03/ia-big-picture-ecommerce-ab-test-fsa-store.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cc91c7ae-43fe-4e14-a7c9-7e41c387cf03/ia-big-picture-ecommerce-ab-test-fsa-store.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cc91c7ae-43fe-4e14-a7c9-7e41c387cf03/ia-big-picture-ecommerce-ab-test-fsa-store.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cc91c7ae-43fe-4e14-a7c9-7e41c387cf03/ia-big-picture-ecommerce-ab-test-fsa-store.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cc91c7ae-43fe-4e14-a7c9-7e41c387cf03/ia-big-picture-ecommerce-ab-test-fsa-store.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (Image source: <a href='https://blog.optimizely.com/2015/06/04/ecommerce-conversion-optimization-case-studies/'>Optimizely Blog</a>) (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cc91c7ae-43fe-4e14-a7c9-7e41c387cf03/ia-big-picture-ecommerce-ab-test-fsa-store.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>The example above demonstrates how poor navigation displays can impact customer conversion. This case study shows an increase in customer revenue by 53.8%. The additional information in-between the search bar and the products was removed which also served to move the product display closer to the top of the page. The vertical information that was removed created the effect of what may have been perceived as a superfluous navigation bar, or maybe just information that was not considered relevant for a user in their product search. </p>\n\n<p>When thinking about designing the information architecture for your website or app, efficient site navigation is crucial.</p>\n\n<blockquote class=\"pull-quote\">\n  <p>\n    <a class=\"pull-quote__link\" aria-label=\"Share on Twitter\" href=\"http://twitter.com/share?text=As%20a%20designer,%20ask%20yourself%20%e2%80%9cDoes%20the%20language%20resonate%20with%20the%20user,%20does%20the%20hierarchy%20make%20sense%20to%20the%20user%20flow,%20can%20they%20easily%20find%20their%20way%20back%20to%20where%20they%20were?%e2%80%9d%0a&url=https://smashingmagazine.com%2f2020%2f07%2finformation-architecture-big-picture%2f\">\n      As a designer, ask yourself “Does the language resonate with the user, does the hierarchy make sense to the user flow, can they easily find their way back to where they were?”\n\n    </a>\n  </p>\n  <div class=\"pull-quote__quotation\">\n    <div class=\"pull-quote__bg\">\n      <span class=\"pull-quote__symbol\">“</span></div>\n  </div>\n</blockquote>\n\n<p>If your website is content-heavy, you may also consider the use of site search. Let’s explore some research around site search vs navigation.</p>\n\n<h3 id=\"search-vs-navigation\">Search vs Navigation</h3>\n\n<p>In 1997, Jakob Neilson conducted a <a href=\"https://blog.optimalworkshop.com/search-versus-navigation-whats-more-important-in-2020/\">study</a> that showed over 50% of website users would use the search function over site navigation. In 2012, <a href=\"https://econsultancy.com/\">econsultancy.com</a> reported that 30% of website visitors to e-commerce sites will <a href=\"https://econsultancy.com/site-search-for-e-commerce-13-best-practice-tips/#i.e6bb0iahterern\">use the site search</a>, while a Kiss metrics study found that 40% of users <a href=\"https://gerrymcgovern.com/navigation-is-more-important-than-search/\">preferred using search</a>. In 2010, Gerry Mcgovern’s study demonstrated 30% of users preferring search.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/41de5f93-0db9-4896-a1c7-97c7eab0d5b6/ia-big-picture-kiss-searchsurvey.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/41de5f93-0db9-4896-a1c7-97c7eab0d5b6/ia-big-picture-kiss-searchsurvey.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/41de5f93-0db9-4896-a1c7-97c7eab0d5b6/ia-big-picture-kiss-searchsurvey.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/41de5f93-0db9-4896-a1c7-97c7eab0d5b6/ia-big-picture-kiss-searchsurvey.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/41de5f93-0db9-4896-a1c7-97c7eab0d5b6/ia-big-picture-kiss-searchsurvey.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/41de5f93-0db9-4896-a1c7-97c7eab0d5b6/ia-big-picture-kiss-searchsurvey.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/41de5f93-0db9-4896-a1c7-97c7eab0d5b6/ia-big-picture-kiss-searchsurvey.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (Image source: <a href='https://neilpatel.com/blog/ecommerce-website-search/'>Neil Patel</a>) (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/41de5f93-0db9-4896-a1c7-97c7eab0d5b6/ia-big-picture-kiss-searchsurvey.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Although the relationship between these findings may seem elusive, one thing is clear; and that is that users will use both site search and site navigation to find information, in varying proportions.</p>\n\n<p>In order to provide the best user experience for your customers, you may need to consider integrating a site search, in conjunction with an effective and well-designed site navigation if your website has a complex structure and large amounts of information.</p>\n\n<p>Here is a practical example of where a site search would be useful for site visitors. Let’s say you visit a website that sells cleaning and health products, and you were looking to buy some <strong>antibacterial hand wash.</strong> There are two categories you can see, “<strong>Body Washing Products</strong>” and “<strong>Skin Cleansers</strong>”. Which one do you choose? </p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f84ec1a3-da0e-46ae-b368-4d2c7a9567c4/ia-big-picture-best-body-wash.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f84ec1a3-da0e-46ae-b368-4d2c7a9567c4/ia-big-picture-best-body-wash.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f84ec1a3-da0e-46ae-b368-4d2c7a9567c4/ia-big-picture-best-body-wash.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f84ec1a3-da0e-46ae-b368-4d2c7a9567c4/ia-big-picture-best-body-wash.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f84ec1a3-da0e-46ae-b368-4d2c7a9567c4/ia-big-picture-best-body-wash.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f84ec1a3-da0e-46ae-b368-4d2c7a9567c4/ia-big-picture-best-body-wash.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f84ec1a3-da0e-46ae-b368-4d2c7a9567c4/ia-big-picture-best-body-wash.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Body washing products\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Body washing products (Image source: <a href='https://www.goodhousekeeping.com/beauty/anti-aging/g29075650/best-body-wash/'>Good Housekeeping</a>) (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f84ec1a3-da0e-46ae-b368-4d2c7a9567c4/ia-big-picture-best-body-wash.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3f9c0497-7524-4a5f-8f0e-cdd024dc0ffc/ia-big-picture-best-cleansers.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3f9c0497-7524-4a5f-8f0e-cdd024dc0ffc/ia-big-picture-best-cleansers.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3f9c0497-7524-4a5f-8f0e-cdd024dc0ffc/ia-big-picture-best-cleansers.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3f9c0497-7524-4a5f-8f0e-cdd024dc0ffc/ia-big-picture-best-cleansers.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3f9c0497-7524-4a5f-8f0e-cdd024dc0ffc/ia-big-picture-best-cleansers.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3f9c0497-7524-4a5f-8f0e-cdd024dc0ffc/ia-big-picture-best-cleansers.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3f9c0497-7524-4a5f-8f0e-cdd024dc0ffc/ia-big-picture-best-cleansers.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Skin cleansers\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Skin cleansers (Image source: <a href='https://skincarehero.com/best-facial-cleansers-for-african-american-skin/'>Skincare Hero</a>) (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3f9c0497-7524-4a5f-8f0e-cdd024dc0ffc/ia-big-picture-best-cleansers.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>And if you were to browse these categories that may have products listed alphabetically, there may be a large list to scan through. Below are some similar phrases that could be used, depending on what any individual’s idea of antibacterial hand wash could also be called:</p>\n\n<ul>\n<li>hand sanitizer</li>\n<li>sanitizing soap</li>\n<li>hand disinfectant</li>\n<li>disinfectant hand wash</li>\n<li>hand sterilizer</li>\n<li>hygienic soap</li>\n<li>antiseptic handwash</li>\n</ul>\n\n<p>If you are looking for “<strong>hygienic soap”</strong>, it may take you a while to scan the list to find the “<strong>antibacterial hand wash</strong>”. As it is difficult to cater to all possible synonym variations in the navigation structure of a site, a well-designed site search can allow users to search for these variations, by adding what we call <strong>metatags</strong> to each piece of content. For example, the “<strong>antibacterial hand wash</strong>” product could have additional hidden information or tags that include all the terms listed above, allowing users to search for any of these and return search results that match.</p>\n\n<p><a href=\"https://www.politico.com/\">The Politico website</a> below uses both navigation and a search function. It demonstrates an example of a content-heavy site that groups the information into categories making it easier to find topics. The site utilizes a “megamenu” which is accessed from the top left corner of the page. This is a common way to provide a menu of options with categories and subcategories that can be used for those visitors that want to browse content, and the search function can be used to locate a specific piece of information.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/125c4562-5bc9-463f-8c35-bf214c932200/ia-big-picture-politico.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/125c4562-5bc9-463f-8c35-bf214c932200/ia-big-picture-politico.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/125c4562-5bc9-463f-8c35-bf214c932200/ia-big-picture-politico.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/125c4562-5bc9-463f-8c35-bf214c932200/ia-big-picture-politico.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/125c4562-5bc9-463f-8c35-bf214c932200/ia-big-picture-politico.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/125c4562-5bc9-463f-8c35-bf214c932200/ia-big-picture-politico.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/125c4562-5bc9-463f-8c35-bf214c932200/ia-big-picture-politico.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/125c4562-5bc9-463f-8c35-bf214c932200/ia-big-picture-politico.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>According to research from <a href=\"https://measuringu.com/search-browse/\">measuringu.com</a>, about 14% of users will start with a search and the rest will start by browsing through the navigation options.</p>\n\n<h3 id=\"good-and-bad-information-architecture-examples\">Good And Bad Information Architecture Examples</h3>\n\n<p>Let’s review some website examples demonstrating good and bad uses of information architecture. Great navigation is a reflection of well-designed information architecture that considers the target audience&rsquo;s needs.</p>\n\n<h4 id=\"useful-navigation\">Useful Navigation</h4>\n\n<p>This <a href=\"https://www.sears.com/\">Sears website</a> makes good use of mega drop-down menus. These help to provide navigation options to sub-categories that are clearly grouped. It also uses images to provide much faster cognition for the user.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/086cd720-dc21-49d2-8afe-313e0ad6db4a/ia-big-picture-sears.jpg\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/086cd720-dc21-49d2-8afe-313e0ad6db4a/ia-big-picture-sears.jpg 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/086cd720-dc21-49d2-8afe-313e0ad6db4a/ia-big-picture-sears.jpg 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/086cd720-dc21-49d2-8afe-313e0ad6db4a/ia-big-picture-sears.jpg 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/086cd720-dc21-49d2-8afe-313e0ad6db4a/ia-big-picture-sears.jpg 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/086cd720-dc21-49d2-8afe-313e0ad6db4a/ia-big-picture-sears.jpg 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/086cd720-dc21-49d2-8afe-313e0ad6db4a/ia-big-picture-sears.jpg\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/086cd720-dc21-49d2-8afe-313e0ad6db4a/ia-big-picture-sears.jpg'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h4 id=\"visual-navigation-driven-by-search\">Visual Navigation Driven By Search</h4>\n\n<p><a href=\"https://www.pinterest.com\">Pinterest</a> demonstrates a useful way to present visual user-generated content based on search terms. The search is the navigation. This works well based on the sheer amount of content available on the site, which would make it difficult to provide a simple navigation system based on categories.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5f5618ce-db65-4a54-b34a-337fb90a2a55/ia-big-picture-pinterest.jpg\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5f5618ce-db65-4a54-b34a-337fb90a2a55/ia-big-picture-pinterest.jpg 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5f5618ce-db65-4a54-b34a-337fb90a2a55/ia-big-picture-pinterest.jpg 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5f5618ce-db65-4a54-b34a-337fb90a2a55/ia-big-picture-pinterest.jpg 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5f5618ce-db65-4a54-b34a-337fb90a2a55/ia-big-picture-pinterest.jpg 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5f5618ce-db65-4a54-b34a-337fb90a2a55/ia-big-picture-pinterest.jpg 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5f5618ce-db65-4a54-b34a-337fb90a2a55/ia-big-picture-pinterest.jpg\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Pinterest website\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Pinterest (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5f5618ce-db65-4a54-b34a-337fb90a2a55/ia-big-picture-pinterest.jpg'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h4 id=\"overwhelming-navigation\">Overwhelming Navigation</h4>\n\n<p>This website example is complete information overload with bad use of white space and way too many choices. It doesn’t help that the design of the website is cramped making it hard to identify all the options available.  </p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/365e49fd-26ca-49de-bb6e-4b34188f0701/ia-big-picture-frys.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/365e49fd-26ca-49de-bb6e-4b34188f0701/ia-big-picture-frys.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/365e49fd-26ca-49de-bb6e-4b34188f0701/ia-big-picture-frys.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/365e49fd-26ca-49de-bb6e-4b34188f0701/ia-big-picture-frys.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/365e49fd-26ca-49de-bb6e-4b34188f0701/ia-big-picture-frys.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/365e49fd-26ca-49de-bb6e-4b34188f0701/ia-big-picture-frys.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/365e49fd-26ca-49de-bb6e-4b34188f0701/ia-big-picture-frys.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Frys.com\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/365e49fd-26ca-49de-bb6e-4b34188f0701/ia-big-picture-frys.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h4 id=\"how-do-you-get-it-right\">How Do You Get It Right?</h4>\n\n<p>Here is a brief list of considerations and processes to use when you are designing the information architecture for a product or service.</p>\n\n<ul>\n<li><strong>First understand your user’s needs and what tasks they are trying to achieve.</strong><br />\nYou can conduct user interviews to really understand what problems your product or service is solving. From here, think about how they might interact with your website and what pathways they could take to achieve their objectives.</li>\n<li><strong>Try to create a hierarchy with minimal sub-levels.</strong><br />\nIf you can achieve this, then the user can access any information on your site with a maximum of two clicks.</li>\n</ul>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f1bf345c-c79c-45e8-9d46-416d1e5ff0cb/ia-big-picture-sitemap.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f1bf345c-c79c-45e8-9d46-416d1e5ff0cb/ia-big-picture-sitemap.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f1bf345c-c79c-45e8-9d46-416d1e5ff0cb/ia-big-picture-sitemap.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f1bf345c-c79c-45e8-9d46-416d1e5ff0cb/ia-big-picture-sitemap.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f1bf345c-c79c-45e8-9d46-416d1e5ff0cb/ia-big-picture-sitemap.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f1bf345c-c79c-45e8-9d46-416d1e5ff0cb/ia-big-picture-sitemap.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f1bf345c-c79c-45e8-9d46-416d1e5ff0cb/ia-big-picture-sitemap.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Sitemap example\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Map out your site navigation to see if you can organise into a minimal number of sub-levels or categories. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f1bf345c-c79c-45e8-9d46-416d1e5ff0cb/ia-big-picture-sitemap.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<ul>\n<li><strong>Don’t use jargon in the navigation language.</strong><br />\nUnderstand the language of your audience. Test with your users to ensure they understand the correct meaning of the language used.</li>\n<li><strong>Don’t rely on images or icons alone as a navigation tool.</strong><br />\nThere are very few universally understood icons, such as <strong>Help</strong>, <strong>Error</strong>, and <strong>Print</strong>, and these may differ culturally. </li>\n</ul>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/392368af-b3a8-49d2-90b6-8750ef3ebabe/ia-big-picture-icons.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/392368af-b3a8-49d2-90b6-8750ef3ebabe/ia-big-picture-icons.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/392368af-b3a8-49d2-90b6-8750ef3ebabe/ia-big-picture-icons.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/392368af-b3a8-49d2-90b6-8750ef3ebabe/ia-big-picture-icons.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/392368af-b3a8-49d2-90b6-8750ef3ebabe/ia-big-picture-icons.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/392368af-b3a8-49d2-90b6-8750ef3ebabe/ia-big-picture-icons.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/392368af-b3a8-49d2-90b6-8750ef3ebabe/ia-big-picture-icons.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/392368af-b3a8-49d2-90b6-8750ef3ebabe/ia-big-picture-icons.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ae1775fb-c6e1-4aec-b72b-510796cc9149/ia-big-picture-iphone.jpg\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ae1775fb-c6e1-4aec-b72b-510796cc9149/ia-big-picture-iphone.jpg 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ae1775fb-c6e1-4aec-b72b-510796cc9149/ia-big-picture-iphone.jpg 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ae1775fb-c6e1-4aec-b72b-510796cc9149/ia-big-picture-iphone.jpg 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ae1775fb-c6e1-4aec-b72b-510796cc9149/ia-big-picture-iphone.jpg 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ae1775fb-c6e1-4aec-b72b-510796cc9149/ia-big-picture-iphone.jpg 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ae1775fb-c6e1-4aec-b72b-510796cc9149/ia-big-picture-iphone.jpg\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"iphone icons with labels\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Note that on smartphones, icons are always accompanied by a text label to help you navigate. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ae1775fb-c6e1-4aec-b72b-510796cc9149/ia-big-picture-iphone.jpg'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<ul>\n<li><strong>Always indicate to the user exactly where they are within the site</strong> so they can easily navigate back to a previous page. Breadcrumb navigation is one example of how to do this effectively as shown in the <a href=\"https://www.westpac.com.au/personal-banking/online-banking/making-the-most/make-a-donation/\">example below</a>. It can sit below the main navigation showing you each page you have clicked on with the current location displaying as the last on the right.</li>\n</ul>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5a709dbb-e7ae-4daa-9c83-a31900de5208/ia-big-picture-westpac.jpg\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5a709dbb-e7ae-4daa-9c83-a31900de5208/ia-big-picture-westpac.jpg 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5a709dbb-e7ae-4daa-9c83-a31900de5208/ia-big-picture-westpac.jpg 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5a709dbb-e7ae-4daa-9c83-a31900de5208/ia-big-picture-westpac.jpg 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5a709dbb-e7ae-4daa-9c83-a31900de5208/ia-big-picture-westpac.jpg 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5a709dbb-e7ae-4daa-9c83-a31900de5208/ia-big-picture-westpac.jpg 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5a709dbb-e7ae-4daa-9c83-a31900de5208/ia-big-picture-westpac.jpg\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Breadcrumb examples\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Breadcrumb navigation example (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5a709dbb-e7ae-4daa-9c83-a31900de5208/ia-big-picture-westpac.jpg'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<ul>\n<li><strong>Use design to create distinct visual differences between the hierarchy levels.</strong><br />\nFor example, a top-level hierarchy heading may be displayed with a larger font size. These visual differences can guide the user’s eye to more important information first. It can also be the job of the visual designer to help differentiate these areas.</li>\n</ul>\n\n<div class=\"sponsors__lead-place\"></div>\n\n\n\n\n<h3 id=\"methods-to-test-your-navigation\">Methods To Test Your Navigation</h3>\n\n<h4 id=\"card-sorting\">Card Sorting</h4>\n\n<p>Write out the name of each information section on paper, and have participants sort cards containing all your navigation sections into groups that make sense to them. Try doing this same sort with at least five participants so you can start to identify patterns and preferences for the categories and subcategories that are created. This is called an <strong>open card sort</strong>. A <strong>closed card sort</strong> can be used if you decide to have predetermined top-level categories that the participants place the cards under based on what makes sense to them.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/763e752b-a078-4fdb-b28d-a2dd649bbf06/ia-big-picture-card-sort.jpg\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/763e752b-a078-4fdb-b28d-a2dd649bbf06/ia-big-picture-card-sort.jpg 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/763e752b-a078-4fdb-b28d-a2dd649bbf06/ia-big-picture-card-sort.jpg 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/763e752b-a078-4fdb-b28d-a2dd649bbf06/ia-big-picture-card-sort.jpg 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/763e752b-a078-4fdb-b28d-a2dd649bbf06/ia-big-picture-card-sort.jpg 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/763e752b-a078-4fdb-b28d-a2dd649bbf06/ia-big-picture-card-sort.jpg 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/763e752b-a078-4fdb-b28d-a2dd649bbf06/ia-big-picture-card-sort.jpg\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Card sorting\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Card sorting (Image source: <a href='https://unsplash.com/@uxindo'>UX Indonesia</a> on <a href='https://unsplash.com/'>Unsplash</a>) (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/763e752b-a078-4fdb-b28d-a2dd649bbf06/ia-big-picture-card-sort.jpg'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p><strong>Recommended reading</strong>: <em><a href=\"https://www.smashingmagazine.com/2014/10/improving-information-architecture-card-sorting-beginners-guide/\">Card Sorting Beginner’s Guide: Improving Your Information Architecture</a></em></p>\n\n<h4 id=\"scenario-testing\">Scenario Testing</h4>\n\n<p>By using a wireframe or prototype, ask participants to complete a specific task by navigating through the site. You can use a clickable wireframe to test this by observing how clear it is for a user to carry out the activity. An example task (refer to the wireframe below) might be to register on the website and then make a booking for a single event and publish it.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5e71df95-4983-46f3-85de-40a37945e209/ia-big-picture-wireframe.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5e71df95-4983-46f3-85de-40a37945e209/ia-big-picture-wireframe.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5e71df95-4983-46f3-85de-40a37945e209/ia-big-picture-wireframe.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5e71df95-4983-46f3-85de-40a37945e209/ia-big-picture-wireframe.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5e71df95-4983-46f3-85de-40a37945e209/ia-big-picture-wireframe.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5e71df95-4983-46f3-85de-40a37945e209/ia-big-picture-wireframe.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5e71df95-4983-46f3-85de-40a37945e209/ia-big-picture-wireframe.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Wireframe example\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Scenario testing (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5e71df95-4983-46f3-85de-40a37945e209/ia-big-picture-wireframe.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h4 id=\"tools\">Tools</h4>\n\n<p><a href=\"https://www.optimalworkshop.com/\">Treejack</a> is a tool that allows you to validate your navigation structure. It asks the participants to indicate where they would look to find specific information and provides you with insightful actions.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8139be92-ef97-4d3f-b81d-d62730a728a0/ia-big-picture-treejack.jpg\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8139be92-ef97-4d3f-b81d-d62730a728a0/ia-big-picture-treejack.jpg 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8139be92-ef97-4d3f-b81d-d62730a728a0/ia-big-picture-treejack.jpg 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8139be92-ef97-4d3f-b81d-d62730a728a0/ia-big-picture-treejack.jpg 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8139be92-ef97-4d3f-b81d-d62730a728a0/ia-big-picture-treejack.jpg 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8139be92-ef97-4d3f-b81d-d62730a728a0/ia-big-picture-treejack.jpg 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8139be92-ef97-4d3f-b81d-d62730a728a0/ia-big-picture-treejack.jpg\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Treejack tool\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Navigation testing tool (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8139be92-ef97-4d3f-b81d-d62730a728a0/ia-big-picture-treejack.jpg'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h4 id=\"free-keyword-tools\">Free Keyword Tools</h4>\n\n<p>You can use free tools to help to identify commonly used search terms that can help with language choice in your navigation. For example, <a href=\"http://answerthepublic.com\">answerthepublic.com</a> is a free site that allows you to enter a search term to see what other related search terms are being used.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0e0e3846-76fb-47ea-9583-c7bc66dce015/ia-big-picture-answer-the-public.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0e0e3846-76fb-47ea-9583-c7bc66dce015/ia-big-picture-answer-the-public.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0e0e3846-76fb-47ea-9583-c7bc66dce015/ia-big-picture-answer-the-public.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0e0e3846-76fb-47ea-9583-c7bc66dce015/ia-big-picture-answer-the-public.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0e0e3846-76fb-47ea-9583-c7bc66dce015/ia-big-picture-answer-the-public.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0e0e3846-76fb-47ea-9583-c7bc66dce015/ia-big-picture-answer-the-public.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0e0e3846-76fb-47ea-9583-c7bc66dce015/ia-big-picture-answer-the-public.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Answer the public keyword search tool\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Keyword search tool (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0e0e3846-76fb-47ea-9583-c7bc66dce015/ia-big-picture-answer-the-public.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>We’ve covered the basics of information architecture, and now it’s time to move onto the bigger picture, the Information Age. Understanding context around the massive amounts of data and information we are surrounded by can help to shape your outlook as a UX designer, as it has helped inform the direction and approach to my own design practice.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n\n\n\n<h3 id=\"the-information-age\">The Information Age</h3>\n\n<p>We live in a time where our access to information is unprecedented. It is instantaneous, it is global, it is everywhere, it is the Internet. News stories are broadcast as they unfold, communication with friends and family in other parts of the world has never been easier, and Google has become our personal library of virtually limitless topics. Information is king <em>and</em> queen. </p>\n\n<h3 id=\"key-facts-about-information\">Key Facts About Information</h3>\n\n<ul>\n<li><a href=\"https://www.sciencedaily.com/releases/2013/05/130522085217.htm\">90% of the world’s data</a> has been created in the past 2 years.</li>\n<li>The amount of data in the world doubles every two years.</li>\n<li>If all the data in our world was stored on 128G iPad tablets, they would create a stack going from the Earth to the Moon <a href=\"https://www.emc.com/leadership/digital-universe/2014iview/executive-summary.htm\">6.6 times</a>! </li>\n<li><a href=\"https://www.emc.com/leadership/digital-universe/2014iview/executive-summary.htm\">Only 37% of all data</a> is considered “useful”. And of that 37%, a much smaller percentage is actually analyzed.</li>\n<li>33 percent of managers feel that information overload was impacting their health.</li>\n<li><a href=\"https://www.workzone.com/blog/information-overload/\">66 percent of managers</a> reported increased conflict with teammates as well as reduced job satisfaction.</li>\n</ul>\n\n<p>And finally, let’s examine how information can be used and abused in this age of information.</p>\n\n<blockquote class=\"pull-quote\">\n  <p>\n    <a class=\"pull-quote__link\" aria-label=\"Share on Twitter\" href=\"http://twitter.com/share?text=%e2%80%9cWe%20live%20in%20a%20time%20where%20our%20access%20to%20information%20is%20unprecedented.%20It%20is%20instantaneous,%20it%20is%20global,%20it%20is%20everywhere,%20it%20is%20the%20Internet.%e2%80%9d%0a&url=https://smashingmagazine.com%2f2020%2f07%2finformation-architecture-big-picture%2f\">\n      “We live in a time where our access to information is unprecedented. It is instantaneous, it is global, it is everywhere, it is the Internet.”\n\n    </a>\n  </p>\n  <div class=\"pull-quote__quotation\">\n    <div class=\"pull-quote__bg\">\n      <span class=\"pull-quote__symbol\">“</span></div>\n  </div>\n</blockquote>\n\n<h3 id=\"the-power-of-information\">The Power Of Information</h3>\n\n<blockquote>“With power comes great responsibility.”</blockquote>\n\n<p>This famous quote is often attributed to Uncle Ben from Spiderman. We can think of this in reference to how powerful information can be, but when in the wrong hands, there is an opportunity to abuse this power. Below is my perspective on how the power of information can manifest in our world, and why it is both a precious and dangerous commodity. </p>\n\n<h4 id=\"information-is-power\">“Information Is Power”</h4>\n\n<p>Internet activist, <a href=\"https://time.com/2934186/aaron-swartz-documentary/\">Aaron Swartz</a>, took his life in 2013 at the age of 26. Aaron was the original creator of Reddit, and among many achievements, his untimely death occurred when he was fighting felony charges for illegally accessing and downloading academic information. <a href=\"https://www.theguardian.com/technology/2013/jun/02/aaron-swartz-hacker-genius-martyr-girlfriend-interview\">He wrote a manifesto</a> that called for activists to &ldquo;liberate&rdquo; information secured by corporations, and campaigned against Internet censorship. </p>\n\n<p>We recognize that information alone is useless if no one can find it. And then once it is made available, it needs to be acted upon. On a large scale, information can be shared to protect public health and safety, to help governments to create better policies and to empower individuals to live better lives. It can also be used for propaganda purposes for political gain, to create fear for the purpose of control, and to instill beliefs for the sole purpose of financial profit. </p>\n\n<h4 id=\"information-can-change-world-events-in-an-instant\">Information Can Change World Events In An Instant</h4>\n\n<p>How quickly have governments pivoted and changed their approach to the COVID-19 pandemic based on new information? Not to mention the release of conflicting information from alternate sources that has also created <a href=\"https://www.smh.com.au/politics/federal/disgraceful-private-hospitals-win-elective-surgery-reprieve-20200326-p54e78.html\">mass confusion</a>.</p>\n\n<p>An example of this pivot was seen in Australia, when our Prime Minister announced non-elective surgery would be suspended from March 26, but just hours later, it was moved to April 1st after the health minister met with the private hospital sector that afternoon. This was due to the updated information received that would see the stand-down of medical staff, even as hospitals prepared for a surge in COVID-19 cases. </p>\n\n<h4 id=\"dangers-of-misinformation\">Dangers Of Misinformation</h4>\n\n<p>In current times, examples: “Fake news” claims, presidential tweets, and allegations of misinformation coming from China around the COVID19 pandemic. Donald Trump who is attributed with the reference to “Fake News”, now more generally attributes incorrect news reporting to journalists and media outlets such as CNN.</p>\n\n<p><a href=\"https://www.youtube.com/watch?v=6_zgDNQFIMc\">Unfounded “conspiracy theories”</a> are another example of ways to link seemingly related information points that have no solid relationship evidence. For example:</p>\n\n<ul>\n<li>Allegations that the <a href=\"https://theconversation.com/au/topics/fake-news-33438\">Coronavirus was created in a lab in Wuhan</a>, China, currently has no evidence to support it.</li>\n<li>There are also stories circulating that <a href=\"https://www.abc.net.au/news/science/2020-04-15/coronavirus-5g-vitamin-c-anti-vaccine-conspiracy-theories-spread/12145096\">5G is somehow connected to Coronavirus</a>.</li>\n<li><a href=\"https://www.businessinsider.com.au/coronavirus-conspiracy-bill-gates-infowars-2020-4?r=US&amp;IR=T\">Bill Gates is responsible</a> for the pandemic.</li>\n<li>US Army Reservist <a href=\"https://www.dailymail.co.uk/news/article-8261173/US-Army-reservist-center-Chinese-conspiracy-theories-claiming-brought-virus-Wuhan.html\">Maatje Benassi has been accused</a> of being patient zero in the COVID-19 pandemic by bringing the virus to Wuhan in 2019 in collusion with the US Government.</li>\n</ul>\n\n<h4 id=\"information-security\">Information Security</h4>\n\n<p>In 2018, it was revealed Facebook was exposed to a <a href=\"https://www.theguardian.com/technology/2018/sep/28/facebook-50-million-user-accounts-security-berach\">massive security breach</a> after hackers exploited a vulnerability to access user’s personal data. The impact of the access to this kind of personal information could have ramifications for those individuals impacted for years to come.</p>\n\n<p>In July 2017, shortly after I left employment at Equifax (no connection whatsoever!), a data breach impacting over 147 million people occurred in the US. The data exposed included Social Security numbers, birth dates, and some credit card details. After spending $1.4 billion on security upgrades, it is <a href=\"https://www.csoonline.com/article/3444488/equifax-data-breach-faq-what-happened-who-was-affected-what-was-the-impact.html\">still resolving ongoing class actions</a> from consumers that were impacted.</p>\n\n<p>The importance of protecting privacy and personal data has become increasingly important throughout the world. <a href=\"https://unctad.org/en/Pages/DTL/STI_and_ICTs/ICT4D-Legislation/eCom-Data-Protection-Laws.aspx\">132 of 194 countries currently have legislation</a> in place to protect the sharing of personal information without consent, and the data and privacy of individuals. In 2017-18 there was a 10% rise in the number of <a href=\"[https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3381593\">countries enacting data privacy laws</a>.</p>\n\n<p>Based on the examples above, it is clear that information in itself doesn’t discriminate for good or for evil. That’s why it is so important to validate data sources and analyze information before taking it on board.</p>\n\n<h3 id=\"conclusion\">Conclusion</h3>\n\n<p>We have reviewed how we use information, the power it yields, the sheer volume of data we have created, the impacts of information overload, and how information architecture can be used to organize and structure this information for those seeking it. There is no denying that in this age of Information why it is so important to focus on information architecture as a solid foundation for delivering the right information to your customers to make their lives easier.</p>\n\n<h4><span class=\"rh\">Further Reading</span> on SmashingMag:</h4>\n\n<ul>\n    <li><a title=\"Read 'Is Your Website Stressing Out Visitors?'\" href=\"https://www.smashingmagazine.com/2020/06/website-stressing-out-visitors/\" rel=\"bookmark\">Is Your Website Stressing Out Visitors?</a></li>\n    <li><a title=\"Read 'What Vitruvius Can Teach Us About Web Design'\" href=\"https://www.smashingmagazine.com/2020/06/vitruvius-web-design/\" rel=\"bookmark\">What Vitruvius Can Teach Us About Web Design</a></li>\n    <li><a title=\"Read 'Readability Algorithms Should Be Tools, Not Targets'\" href=\"https://www.smashingmagazine.com/2020/05/readability-algorithms-tools-targets/\" rel=\"bookmark\">Readability Algorithms Should Be Tools, Not Targets</a></li>\n    <li><a title=\"Read 'Designing The Words: Why Copy Is A Design Issue'\" href=\"https://www.smashingmagazine.com/2013/09/why-copy-is-a-design-issue/\" rel=\"bookmark\">Designing The Words: Why Copy Is A Design Issue</a></li>\n</ul>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\">\n  <span>(ah, ra, il)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        ",
      "content": "We are living in a world exploding with information, but how do we find what is relevant to us at the time that we need it? I believe that good information architecture is key to helping us navigate through the mountains of data and information we have created for ourselves. In this article, we will first describe what information architecture is, why it’s important, and approaches to effective implementation. Then we explore ideas around the broader view of the information age, how we use information, and how it impacts our world and our lives.",
      "contentSnippet": "We are living in a world exploding with information, but how do we find what is relevant to us at the time that we need it? I believe that good information architecture is key to helping us navigate through the mountains of data and information we have created for ourselves. In this article, we will first describe what information architecture is, why it’s important, and approaches to effective implementation. Then we explore ideas around the broader view of the information age, how we use information, and how it impacts our world and our lives.",
      "guid": "https://www.smashingmagazine.com/2020/07/information-architecture-big-picture/",
      "isoDate": "2020-07-01T12:30:00.000Z"
    },
    {
      "creator": "Cosima Mielke",
      "title": "Finding Inspiration In The Simple Things (July 2020 Wallpapers Edition)",
      "link": "https://www.smashingmagazine.com/2020/06/desktop-wallpaper-calendars-july-2020/",
      "pubDate": "Tue, 30 Jun 2020 09:00:00 +0000",
      "author": "Cosima Mielke",
      "content:encoded": "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2020/06/desktop-wallpaper-calendars-july-2020/\" />\n              <title>Finding Inspiration In The Simple Things (July 2020 Wallpapers Edition)</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>Finding Inspiration In The Simple Things (July 2020 Wallpapers Edition)</h1>\n                  \n                    \n                    <address>Cosima Mielke</address>\n                  \n                  <time datetime=\"2020-06-30T09:00:00&#43;00:00\" class=\"op-published\">2020-06-30T09:00:00+00:00</time>\n                  <time datetime=\"2020-06-30T09:00:00&#43;00:00\" class=\"op-modified\">2020-07-10T03:35:48+00:00</time>\n                </header>\n                <p>The smell of rain after a hot day, watching the moon rise on a summer night’s sky, going for a swim — often it’s the simple experiences that inspire us and that we treasure most. No matter what July will have in store for you this year, our new batch of wallpapers is bound to cater for some colorful inspiration along the way.</p>\n\n<p>More than nine years ago, we started out on this <a href=\"https://www.smashingmagazine.com/category/wallpapers\">wallpapers adventure</a> to bring you beautiful and inspiring wallpapers every month. It’s a community effort, made possible by artists and designers from all across the globe who challenge their creative skills and contribute their artworks to it. Just like this month.</p>\n\n<p>In this post you’ll find their <strong>wallpapers for July 2020</strong>. All of them come in versions with and without a calendar and can be downloaded for free. As a little bonus goodie, we also compiled some favorites from past July editions at the end of this post. Maybe you’ll discover one of <em>your</em> almost-forgotten favorites in there, too? A huge thank-you to everyone who shared their artworks with us this month — we sincerely appreciate it! Happy July!</p>\n\n<ul>\n<li>All <strong>images can be clicked on</strong> and lead to the preview of the wallpaper,</li>\n<li>We respect and carefully consider the ideas and motivation behind each and every artist’s work. This is why we give all artists the <strong>full freedom to explore their creativity</strong> and express emotions and experience through their works. This is also why the themes of the wallpapers weren’t anyhow influenced by us but rather designed from scratch by the artists themselves.</li>\n</ul>\n\n<div class=\"c-felix-the-cat\">\n<h4>Submit your wallpaper</h4>\n<p>Did you know that <em>you</em> could get featured in one of our upcoming wallpapers posts, too? We are always <strong>looking for creative talent</strong>, so if you have an idea for a wallpaper for August, please don’t hesitate to submit it. We’d love to see what you’ll come up with. <a href=\"https://www.smashingmagazine.com/desktop-wallpaper-calendars-join-in/\" class=\"btn btn--small btn--white btn--white--bordered\">Join in! →</a></p>\n</div>\n\n\n  <div data-component=\"FeaturePanel\" data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container hidden\"></div>\n\n\n<h3 id=\"birdie-july-07-2020\">Birdie July</h3>\n<p>Designed by <a href=\"https://pathlove.com/\">Lívi Lénárt</a> from Hungary.</p>\n<figure class=\"break-out\"><a href=\"http://files.smashingmagazine.com/wallpapers/july-20/birdie-july/july-20-birdie-july-full.png\" title=\"Birdie July\"><img alt=\"Birdie July\" src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c745b68c-65fd-49f4-90e9-e26bdca3c736/july-20-birdie-july-preview-opt.png\" /></a></figure>\n<ul>\n<li><a href=\"http://files.smashingmagazine.com/wallpapers/july-20/birdie-july/july-20-birdie-july-preview.png\" title=\"Birdie July - Preview\">preview</a></li>\n<li>with calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/birdie-july/cal/july-20-birdie-july-cal-800x600.png\" title=\"Birdie July - 800x600\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/birdie-july/cal/july-20-birdie-july-cal-1024x1024.png\" title=\"Birdie July - 1024x1024\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/birdie-july/cal/july-20-birdie-july-cal-1152x864.png\" title=\"Birdie July - 1152x864\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/birdie-july/cal/july-20-birdie-july-cal-1280x960.png\" title=\"Birdie July - 1280x960\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/birdie-july/cal/july-20-birdie-july-cal-1280x1024.png\" title=\"Birdie July - 1280x1024\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/birdie-july/cal/july-20-birdie-july-cal-1600x1200.png\" title=\"Birdie July - 1600x1200\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/birdie-july/cal/july-20-birdie-july-cal-1920x1080.png\" title=\"Birdie July - 1920x1080\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/birdie-july/cal/july-20-birdie-july-cal-2560x1440.png\" title=\"Birdie July - 2560x1440\">2560x1440</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/birdie-july/nocal/july-20-birdie-july-nocal-800x600.png\" title=\"Birdie July - 800x600\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/birdie-july/nocal/july-20-birdie-july-nocal-1024x1024.png\" title=\"Birdie July - 1024x1024\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/birdie-july/nocal/july-20-birdie-july-nocal-1152x864.png\" title=\"Birdie July - 1152x864\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/birdie-july/nocal/july-20-birdie-july-nocal-1280x960.png\" title=\"Birdie July - 1280x960\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/birdie-july/nocal/july-20-birdie-july-nocal-1280x1024.png\" title=\"Birdie July - 1280x1024\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/birdie-july/nocal/july-20-birdie-july-nocal-1600x1200.png\" title=\"Birdie July - 1600x1200\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/birdie-july/nocal/july-20-birdie-july-nocal-1920x1080.png\" title=\"Birdie July - 1920x1080\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/birdie-july/nocal/july-20-birdie-july-nocal-2560x1440.png\" title=\"Birdie July - 2560x1440\">2560x1440</a></li>\n</ul>\n\n<h3 id=\"strive-for-progress,-not-perfection-07-2020\">Strive For Progress, Not Perfection</h3>\n<p>&#147;I created this wallpaper as a daily reminder that it’s better to take one small step towards my goal every day than to do nothing at all out of fear that it won’t be perfect. I hope you enjoy it and it helps you keep motivated every day!&#148; &mdash; Designed by <a href=\"https://purehappylife.com/\">Andrew</a> from the United States.</p>\n<figure class=\"break-out\"><a href=\"http://files.smashingmagazine.com/wallpapers/july-20/strive-for-progress-not-perfection/july-20-strive-for-progress-not-perfection-full.png\" title=\"Strive For Progress, Not Perfection\"><img alt=\"Strive For Progress, Not Perfection\" src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/40767ed0-988e-43f8-b476-c37fe90f0fd6/july-20-strive-for-progress-not-perfection-preview-opt.png\" /></a></figure>\n<ul>\n<li><a href=\"http://files.smashingmagazine.com/wallpapers/july-20/strive-for-progress-not-perfection/july-20-strive-for-progress-not-perfection-preview.png\" title=\"Strive For Progress, Not Perfection - Preview\">preview</a></li>\n<li>with calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/strive-for-progress-not-perfection/cal/july-20-strive-for-progress-not-perfection-cal-320x480.png\" title=\"Strive For Progress, Not Perfection - 320x480\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/strive-for-progress-not-perfection/cal/july-20-strive-for-progress-not-perfection-cal-1024x1024.png\" title=\"Strive For Progress, Not Perfection - 1024x1024\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/strive-for-progress-not-perfection/cal/july-20-strive-for-progress-not-perfection-cal-1280x720.png\" title=\"Strive For Progress, Not Perfection - 1280x720\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/strive-for-progress-not-perfection/cal/july-20-strive-for-progress-not-perfection-cal-1680x1200.png\" title=\"Strive For Progress, Not Perfection - 1680x1200\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/strive-for-progress-not-perfection/cal/july-20-strive-for-progress-not-perfection-cal-1920x1080.png\" title=\"Strive For Progress, Not Perfection - 1920x1080\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/strive-for-progress-not-perfection/cal/july-20-strive-for-progress-not-perfection-cal-2560x1440.png\" title=\"Strive For Progress, Not Perfection - 2560x1440\">2560x1440</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/strive-for-progress-not-perfection/nocal/july-20-strive-for-progress-not-perfection-nocal-320x480.png\" title=\"Strive For Progress, Not Perfection - 320x480\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/strive-for-progress-not-perfection/nocal/july-20-strive-for-progress-not-perfection-nocal-1024x1024.png\" title=\"Strive For Progress, Not Perfection - 1024x1024\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/strive-for-progress-not-perfection/nocal/july-20-strive-for-progress-not-perfection-nocal-1280x720.png\" title=\"Strive For Progress, Not Perfection - 1280x720\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/strive-for-progress-not-perfection/nocal/july-20-strive-for-progress-not-perfection-nocal-1680x1200.png\" title=\"Strive For Progress, Not Perfection - 1680x1200\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/strive-for-progress-not-perfection/nocal/july-20-strive-for-progress-not-perfection-nocal-1920x1080.png\" title=\"Strive For Progress, Not Perfection - 1920x1080\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/strive-for-progress-not-perfection/nocal/july-20-strive-for-progress-not-perfection-nocal-2560x1440.png\" title=\"Strive For Progress, Not Perfection - 2560x1440\">2560x1440</a></li>\n</ul>\n\n<h3 id=\"plastic-whale-07-2020\">Plastic Whale</h3>\n<p>&#147;The growing amount of plastic pollution in our rivers, seas, and oceans can have a devastating effect on marine wildlife both large and small. Plastic bags are known to stay in the oceans for about 450 years before beginning to degrade. I was inspired by illustrator Kerby Rosanes’ ‘geometric beasts’ series and created my own version to convey this message.&#148; &mdash; Designed by <a href=\"https://ayshasamrin.com/\">Aysha Samrin</a> from Vancouver.</p>\n<figure class=\"break-out\"><a href=\"http://files.smashingmagazine.com/wallpapers/july-20/plastic-whale/july-20-plastic-whale-full.jpg\" title=\"Plastic Whale\"><img alt=\"Plastic Whale\" src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ad1befdc-0fdd-43e1-a994-f1a25fdb109c/july-20-plastic-whale-preview-opt.png\" /></a></figure>\n<ul>\n<li><a href=\"http://files.smashingmagazine.com/wallpapers/july-20/plastic-whale/july-20-plastic-whale-preview.jpg\" title=\"Plastic Whale - Preview\">preview</a></li>\n<li>with calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/plastic-whale/cal/july-20-plastic-whale-cal-1440x900.jpg\" title=\"Plastic Whale - 1440x900\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/plastic-whale/cal/july-20-plastic-whale-cal-1920x1080.jpg\" title=\"Plastic Whale - 1920x1080\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/plastic-whale/cal/july-20-plastic-whale-cal-1920x1200.jpg\" title=\"Plastic Whale - 1920x1200\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/plastic-whale/cal/july-20-plastic-whale-cal-1920x1440.jpg\" title=\"Plastic Whale - 1920x1440\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/plastic-whale/cal/july-20-plastic-whale-cal-2560x1440.jpg\" title=\"Plastic Whale - 2560x1440\">2560x1440</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/plastic-whale/nocal/july-20-plastic-whale-nocal-1440x900.jpg\" title=\"Plastic Whale - 1440x900\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/plastic-whale/nocal/july-20-plastic-whale-nocal-1920x1080.jpg\" title=\"Plastic Whale - 1920x1080\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/plastic-whale/nocal/july-20-plastic-whale-nocal-1920x1200.jpg\" title=\"Plastic Whale - 1920x1200\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/plastic-whale/nocal/july-20-plastic-whale-nocal-1920x1440.jpg\" title=\"Plastic Whale - 1920x1440\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/plastic-whale/nocal/july-20-plastic-whale-nocal-2560x1440.jpg\" title=\"Plastic Whale - 2560x1440\">2560x1440</a></li>\n</ul>\n\n<h3 id=\"its-getting-hot-07-2020\">It’s Getting Hot</h3>\n<p>Designed by <a href=\"https://www.ricardogimenes.com/\">Ricardo Gimenes</a> from Sweden.</p>\n<figure class=\"break-out\"><a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/july-20-its-getting-hot-full.png\" title=\"It’s Getting Hot\"><img alt=\"It’s Getting Hot\" src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f17eee41-972d-4105-bc5c-a02d8d1fb8c0/july-20-its-getting-hot-preview-opt.png\" /></a></figure>\n<ul>\n<li><a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/july-20-its-getting-hot-preview.png\" title=\"It’s Getting Hot - Preview\">preview</a></li>\n<li>with calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/cal/july-20-its-getting-hot-cal-320x480.png\" title=\"It’s Getting Hot - 320x480\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/cal/july-20-its-getting-hot-cal-640x480.png\" title=\"It’s Getting Hot - 640x480\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/cal/july-20-its-getting-hot-cal-800x480.png\" title=\"It’s Getting Hot - 800x480\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/cal/july-20-its-getting-hot-cal-800x600.png\" title=\"It’s Getting Hot - 800x600\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/cal/july-20-its-getting-hot-cal-1024x768.png\" title=\"It’s Getting Hot - 1024x768\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/cal/july-20-its-getting-hot-cal-1024x1024.png\" title=\"It’s Getting Hot - 1024x1024\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/cal/july-20-its-getting-hot-cal-1152x864.png\" title=\"It’s Getting Hot - 1152x864\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/cal/july-20-its-getting-hot-cal-1280x720.png\" title=\"It’s Getting Hot - 1280x720\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/cal/july-20-its-getting-hot-cal-1280x800.png\" title=\"It’s Getting Hot - 1280x800\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/cal/july-20-its-getting-hot-cal-1280x960.png\" title=\"It’s Getting Hot - 1280x960\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/cal/july-20-its-getting-hot-cal-1280x1024.png\" title=\"It’s Getting Hot - 1280x1024\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/cal/july-20-its-getting-hot-cal-1366x768.png\" title=\"It’s Getting Hot - 1366x768\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/cal/july-20-its-getting-hot-cal-1400x1050.png\" title=\"It’s Getting Hot - 1400x1050\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/cal/july-20-its-getting-hot-cal-1440x900.png\" title=\"It’s Getting Hot - 1440x900\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/cal/july-20-its-getting-hot-cal-1600x1200.png\" title=\"It’s Getting Hot - 1600x1200\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/cal/july-20-its-getting-hot-cal-1680x1050.png\" title=\"It’s Getting Hot - 1680x1050\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/cal/july-20-its-getting-hot-cal-1680x1200.png\" title=\"It’s Getting Hot - 1680x1200\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/cal/july-20-its-getting-hot-cal-1920x1080.png\" title=\"It’s Getting Hot - 1920x1080\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/cal/july-20-its-getting-hot-cal-1920x1200.png\" title=\"It’s Getting Hot - 1920x1200\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/cal/july-20-its-getting-hot-cal-1920x1440.png\" title=\"It’s Getting Hot - 1920x1440\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/cal/july-20-its-getting-hot-cal-2560x1440.png\" title=\"It’s Getting Hot - 2560x1440\">2560x1440</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/nocal/july-20-its-getting-hot-nocal-320x480.png\" title=\"It’s Getting Hot - 320x480\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/nocal/july-20-its-getting-hot-nocal-640x480.png\" title=\"It’s Getting Hot - 640x480\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/nocal/july-20-its-getting-hot-nocal-800x480.png\" title=\"It’s Getting Hot - 800x480\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/nocal/july-20-its-getting-hot-nocal-800x600.png\" title=\"It’s Getting Hot - 800x600\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/nocal/july-20-its-getting-hot-nocal-1024x768.png\" title=\"It’s Getting Hot - 1024x768\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/nocal/july-20-its-getting-hot-nocal-1024x1024.png\" title=\"It’s Getting Hot - 1024x1024\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/nocal/july-20-its-getting-hot-nocal-1152x864.png\" title=\"It’s Getting Hot - 1152x864\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/nocal/july-20-its-getting-hot-nocal-1280x720.png\" title=\"It’s Getting Hot - 1280x720\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/nocal/july-20-its-getting-hot-nocal-1280x800.png\" title=\"It’s Getting Hot - 1280x800\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/nocal/july-20-its-getting-hot-nocal-1280x960.png\" title=\"It’s Getting Hot - 1280x960\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/nocal/july-20-its-getting-hot-nocal-1280x1024.png\" title=\"It’s Getting Hot - 1280x1024\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/nocal/july-20-its-getting-hot-nocal-1366x768.png\" title=\"It’s Getting Hot - 1366x768\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/nocal/july-20-its-getting-hot-nocal-1400x1050.png\" title=\"It’s Getting Hot - 1400x1050\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/nocal/july-20-its-getting-hot-nocal-1440x900.png\" title=\"It’s Getting Hot - 1440x900\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/nocal/july-20-its-getting-hot-nocal-1600x1200.png\" title=\"It’s Getting Hot - 1600x1200\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/nocal/july-20-its-getting-hot-nocal-1680x1050.png\" title=\"It’s Getting Hot - 1680x1050\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/nocal/july-20-its-getting-hot-nocal-1680x1200.png\" title=\"It’s Getting Hot - 1680x1200\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/nocal/july-20-its-getting-hot-nocal-1920x1080.png\" title=\"It’s Getting Hot - 1920x1080\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/nocal/july-20-its-getting-hot-nocal-1920x1200.png\" title=\"It’s Getting Hot - 1920x1200\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/nocal/july-20-its-getting-hot-nocal-1920x1440.png\" title=\"It’s Getting Hot - 1920x1440\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/its-getting-hot/nocal/july-20-its-getting-hot-nocal-2560x1440.png\" title=\"It’s Getting Hot - 2560x1440\">2560x1440</a></li>\n</ul>\n\n<h3 id=\"happy-birthday,-harrison-ford!-07-2020\">Happy Birthday, Harrison Ford!</h3>\n<p>&#147;This month, we’re paying tribute to the legendary actor Harrison Ford, who turns 78 on July 13th! A woodworker and an aspiring actor, during the 70s Ford did carpentry works in the homes of some of the leading film directors and producers, thus crossing paths with Star Wars director George Lucas. It proved to be a defining moment that would shape not only Ford’s life but cinematography in general. Ford portrayed Han Solo in several of the franchise’s installments, leaving an indelible mark through his friendship with Chewbacca and love with princess Leia. After more than five decades of a successful and immaculate career, award-winning and acclaimed roles, and a life away from the public eye, Harrison Ford remains one of the best, most versatile, and prolific actors of our era, relishing his two favorite hobbies - flying and carpentry - as well as impressing us with each new movie to come.&#148; &mdash; Designed by <a href=\"https://www.popwebdesign.net/index_eng.html\">PopArt Studio </a> from Serbia.</p>\n<figure class=\"break-out\"><a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/july-20-happy-birthday-harrison-ford-full.jpg\" title=\"Happy Birthday, Harrison Ford!\"><img alt=\"Happy Birthday, Harrison Ford!\" src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e65b3dc8-bbb2-4fc5-9088-f7ddffccfb8e/july-20-happy-birthday-harrison-ford-preview-opt.png\" /></a></figure>\n<ul>\n<li><a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/july-20-happy-birthday-harrison-ford-preview.jpg\" title=\"Happy Birthday, Harrison Ford! - Preview\">preview</a></li>\n<li>with calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/cal/july-20-happy-birthday-harrison-ford-cal-320x480.jpg\" title=\"Happy Birthday, Harrison Ford! - 320x480\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/cal/july-20-happy-birthday-harrison-ford-cal-640x480.jpg\" title=\"Happy Birthday, Harrison Ford! - 640x480\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/cal/july-20-happy-birthday-harrison-ford-cal-800x480.jpg\" title=\"Happy Birthday, Harrison Ford! - 800x480\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/cal/july-20-happy-birthday-harrison-ford-cal-800x600.jpg\" title=\"Happy Birthday, Harrison Ford! - 800x600\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/cal/july-20-happy-birthday-harrison-ford-cal-1024x768.jpg\" title=\"Happy Birthday, Harrison Ford! - 1024x768\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/cal/july-20-happy-birthday-harrison-ford-cal-1024x1024.jpg\" title=\"Happy Birthday, Harrison Ford! - 1024x1024\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/cal/july-20-happy-birthday-harrison-ford-cal-1152x864.jpg\" title=\"Happy Birthday, Harrison Ford! - 1152x864\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/cal/july-20-happy-birthday-harrison-ford-cal-1280x720.jpg\" title=\"Happy Birthday, Harrison Ford! - 1280x720\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/cal/july-20-happy-birthday-harrison-ford-cal-1280x800.jpg\" title=\"Happy Birthday, Harrison Ford! - 1280x800\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/cal/july-20-happy-birthday-harrison-ford-cal-1280x960.jpg\" title=\"Happy Birthday, Harrison Ford! - 1280x960\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/cal/july-20-happy-birthday-harrison-ford-cal-1280x1024.jpg\" title=\"Happy Birthday, Harrison Ford! - 1280x1024\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/cal/july-20-happy-birthday-harrison-ford-cal-1366x768.jpg\" title=\"Happy Birthday, Harrison Ford! - 1366x768\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/cal/july-20-happy-birthday-harrison-ford-cal-1400x1050.jpg\" title=\"Happy Birthday, Harrison Ford! - 1400x1050\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/cal/july-20-happy-birthday-harrison-ford-cal-1440x900.jpg\" title=\"Happy Birthday, Harrison Ford! - 1440x900\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/cal/july-20-happy-birthday-harrison-ford-cal-1600x1200.jpg\" title=\"Happy Birthday, Harrison Ford! - 1600x1200\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/cal/july-20-happy-birthday-harrison-ford-cal-1680x1050.jpg\" title=\"Happy Birthday, Harrison Ford! - 1680x1050\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/cal/july-20-happy-birthday-harrison-ford-cal-1680x1200.jpg\" title=\"Happy Birthday, Harrison Ford! - 1680x1200\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/cal/july-20-happy-birthday-harrison-ford-cal-1920x1080.jpg\" title=\"Happy Birthday, Harrison Ford! - 1920x1080\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/cal/july-20-happy-birthday-harrison-ford-cal-1920x1200.jpg\" title=\"Happy Birthday, Harrison Ford! - 1920x1200\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/cal/july-20-happy-birthday-harrison-ford-cal-1920x1440.jpg\" title=\"Happy Birthday, Harrison Ford! - 1920x1440\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/cal/july-20-happy-birthday-harrison-ford-cal-2560x1440.jpg\" title=\"Happy Birthday, Harrison Ford! - 2560x1440\">2560x1440</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/nocal/july-20-happy-birthday-harrison-ford-nocal-320x480.jpg\" title=\"Happy Birthday, Harrison Ford! - 320x480\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/nocal/july-20-happy-birthday-harrison-ford-nocal-640x480.jpg\" title=\"Happy Birthday, Harrison Ford! - 640x480\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/nocal/july-20-happy-birthday-harrison-ford-nocal-800x480.jpg\" title=\"Happy Birthday, Harrison Ford! - 800x480\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/nocal/july-20-happy-birthday-harrison-ford-nocal-800x600.jpg\" title=\"Happy Birthday, Harrison Ford! - 800x600\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/nocal/july-20-happy-birthday-harrison-ford-nocal-1024x768.jpg\" title=\"Happy Birthday, Harrison Ford! - 1024x768\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/nocal/july-20-happy-birthday-harrison-ford-nocal-1024x1024.jpg\" title=\"Happy Birthday, Harrison Ford! - 1024x1024\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/nocal/july-20-happy-birthday-harrison-ford-nocal-1152x864.jpg\" title=\"Happy Birthday, Harrison Ford! - 1152x864\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/nocal/july-20-happy-birthday-harrison-ford-nocal-1280x720.jpg\" title=\"Happy Birthday, Harrison Ford! - 1280x720\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/nocal/july-20-happy-birthday-harrison-ford-nocal-1280x800.jpg\" title=\"Happy Birthday, Harrison Ford! - 1280x800\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/nocal/july-20-happy-birthday-harrison-ford-nocal-1280x960.jpg\" title=\"Happy Birthday, Harrison Ford! - 1280x960\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/nocal/july-20-happy-birthday-harrison-ford-nocal-1280x1024.jpg\" title=\"Happy Birthday, Harrison Ford! - 1280x1024\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/nocal/july-20-happy-birthday-harrison-ford-nocal-1366x768.jpg\" title=\"Happy Birthday, Harrison Ford! - 1366x768\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/nocal/july-20-happy-birthday-harrison-ford-nocal-1400x1050.jpg\" title=\"Happy Birthday, Harrison Ford! - 1400x1050\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/nocal/july-20-happy-birthday-harrison-ford-nocal-1440x900.jpg\" title=\"Happy Birthday, Harrison Ford! - 1440x900\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/nocal/july-20-happy-birthday-harrison-ford-nocal-1600x1200.jpg\" title=\"Happy Birthday, Harrison Ford! - 1600x1200\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/nocal/july-20-happy-birthday-harrison-ford-nocal-1680x1050.jpg\" title=\"Happy Birthday, Harrison Ford! - 1680x1050\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/nocal/july-20-happy-birthday-harrison-ford-nocal-1680x1200.jpg\" title=\"Happy Birthday, Harrison Ford! - 1680x1200\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/nocal/july-20-happy-birthday-harrison-ford-nocal-1920x1080.jpg\" title=\"Happy Birthday, Harrison Ford! - 1920x1080\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/nocal/july-20-happy-birthday-harrison-ford-nocal-1920x1200.jpg\" title=\"Happy Birthday, Harrison Ford! - 1920x1200\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/nocal/july-20-happy-birthday-harrison-ford-nocal-1920x1440.jpg\" title=\"Happy Birthday, Harrison Ford! - 1920x1440\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-birthday-harrison-ford/nocal/july-20-happy-birthday-harrison-ford-nocal-2560x1440.jpg\" title=\"Happy Birthday, Harrison Ford! - 2560x1440\">2560x1440</a></li>\n</ul>\n\n<h3 id=\"majestic-moon-07-2020\">Majestic Moon</h3>\n<p>&#147;A few weeks ago, I drove the street at night and saw the moon just dipping the horizon. It appeared to be bigger than usual and it was so majestic. It was a really amazing moment that inspired me to create this wallpaper. Keep your mind and eyes open. Enjoy nature whenever you can!&#148; &mdash; Designed by <a href=\"https://www.behance.net/kaibker\">Kai Böker</a> from Germany.</p>\n<figure class=\"break-out\"><a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/july-20-majestic-moon-full.png\" title=\"Majestic Moon\"><img alt=\"Majestic Moon\" src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/719a26c8-5f7d-4f31-a5ea-aed6f390059d/july-20-majestic-moon-preview-opt.png\" /></a></figure>\n<ul>\n<li><a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/july-20-majestic-moon-preview.png\" title=\"Majestic Moon - Preview\">preview</a></li>\n<li>with calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/cal/july-20-majestic-moon-cal-640x480.png\" title=\"Majestic Moon - 640x480\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/cal/july-20-majestic-moon-cal-800x480.png\" title=\"Majestic Moon - 800x480\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/cal/july-20-majestic-moon-cal-800x600.png\" title=\"Majestic Moon - 800x600\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/cal/july-20-majestic-moon-cal-1024x768.png\" title=\"Majestic Moon - 1024x768\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/cal/july-20-majestic-moon-cal-1024x1024.png\" title=\"Majestic Moon - 1024x1024\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/cal/july-20-majestic-moon-cal-1152x864.png\" title=\"Majestic Moon - 1152x864\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/cal/july-20-majestic-moon-cal-1280x720.png\" title=\"Majestic Moon - 1280x720\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/cal/july-20-majestic-moon-cal-1280x800.png\" title=\"Majestic Moon - 1280x800\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/cal/july-20-majestic-moon-cal-1280x960.png\" title=\"Majestic Moon - 1280x960\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/cal/july-20-majestic-moon-cal-1280x1024.png\" title=\"Majestic Moon - 1280x1024\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/cal/july-20-majestic-moon-cal-1366x768.png\" title=\"Majestic Moon - 1366x768\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/cal/july-20-majestic-moon-cal-1400x1050.png\" title=\"Majestic Moon - 1400x1050\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/cal/july-20-majestic-moon-cal-1440x900.png\" title=\"Majestic Moon - 1440x900\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/cal/july-20-majestic-moon-cal-1600x1200.png\" title=\"Majestic Moon - 1600x1200\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/cal/july-20-majestic-moon-cal-1680x1050.png\" title=\"Majestic Moon - 1680x1050\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/cal/july-20-majestic-moon-cal-1680x1200.png\" title=\"Majestic Moon - 1680x1200\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/cal/july-20-majestic-moon-cal-1920x1080.png\" title=\"Majestic Moon - 1920x1080\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/cal/july-20-majestic-moon-cal-1920x1200.png\" title=\"Majestic Moon - 1920x1200\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/cal/july-20-majestic-moon-cal-1920x1440.png\" title=\"Majestic Moon - 1920x1440\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/cal/july-20-majestic-moon-cal-2560x1440.png\" title=\"Majestic Moon - 2560x1440\">2560x1440</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/nocal/july-20-majestic-moon-nocal-640x480.png\" title=\"Majestic Moon - 640x480\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/nocal/july-20-majestic-moon-nocal-800x480.png\" title=\"Majestic Moon - 800x480\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/nocal/july-20-majestic-moon-nocal-800x600.png\" title=\"Majestic Moon - 800x600\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/nocal/july-20-majestic-moon-nocal-1024x768.png\" title=\"Majestic Moon - 1024x768\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/nocal/july-20-majestic-moon-nocal-1024x1024.png\" title=\"Majestic Moon - 1024x1024\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/nocal/july-20-majestic-moon-nocal-1152x864.png\" title=\"Majestic Moon - 1152x864\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/nocal/july-20-majestic-moon-nocal-1280x720.png\" title=\"Majestic Moon - 1280x720\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/nocal/july-20-majestic-moon-nocal-1280x800.png\" title=\"Majestic Moon - 1280x800\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/nocal/july-20-majestic-moon-nocal-1280x960.png\" title=\"Majestic Moon - 1280x960\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/nocal/july-20-majestic-moon-nocal-1280x1024.png\" title=\"Majestic Moon - 1280x1024\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/nocal/july-20-majestic-moon-nocal-1366x768.png\" title=\"Majestic Moon - 1366x768\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/nocal/july-20-majestic-moon-nocal-1400x1050.png\" title=\"Majestic Moon - 1400x1050\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/nocal/july-20-majestic-moon-nocal-1440x900.png\" title=\"Majestic Moon - 1440x900\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/nocal/july-20-majestic-moon-nocal-1600x1200.png\" title=\"Majestic Moon - 1600x1200\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/nocal/july-20-majestic-moon-nocal-1680x1050.png\" title=\"Majestic Moon - 1680x1050\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/nocal/july-20-majestic-moon-nocal-1680x1200.png\" title=\"Majestic Moon - 1680x1200\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/nocal/july-20-majestic-moon-nocal-1920x1080.png\" title=\"Majestic Moon - 1920x1080\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/nocal/july-20-majestic-moon-nocal-1920x1200.png\" title=\"Majestic Moon - 1920x1200\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/nocal/july-20-majestic-moon-nocal-1920x1440.png\" title=\"Majestic Moon - 1920x1440\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/majestic-moon/nocal/july-20-majestic-moon-nocal-2560x1440.png\" title=\"Majestic Moon - 2560x1440\">2560x1440</a></li>\n</ul>\n\n<h3 id=\"happy-international-kissing-day-07-2020\">Happy International Kissing Day</h3>\n<p>&#147;Celebrating kissing day in a Corona period requires attention. #staysafe&#148; &mdash; Designed by <a href=\"http://www.nlvormgeving.nl\">Nathalie Lansbergen</a> from the Netherlands.</p>\n<figure class=\"break-out\"><a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/july-20-happy-international-kissing-day-full.png\" title=\"Happy International Kissing Day\"><img alt=\"Happy International Kissing Day\" src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3f8b8963-7e35-4f92-95cd-2644d7ebb97f/july-20-happy-international-kissing-day-preview-opt.png\" /></a></figure>\n<ul>\n<li><a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/july-20-happy-international-kissing-day-preview.png\" title=\"Happy International Kissing Day - Preview\">preview</a></li>\n<li>with calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/cal/july-20-happy-international-kissing-day-cal-800x480.png\" title=\"Happy International Kissing Day - 800x480\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/cal/july-20-happy-international-kissing-day-cal-800x600.png\" title=\"Happy International Kissing Day - 800x600\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/cal/july-20-happy-international-kissing-day-cal-1024x768.png\" title=\"Happy International Kissing Day - 1024x768\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/cal/july-20-happy-international-kissing-day-cal-1024x1024.png\" title=\"Happy International Kissing Day - 1024x1024\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/cal/july-20-happy-international-kissing-day-cal-1280x800.png\" title=\"Happy International Kissing Day - 1280x800\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/cal/july-20-happy-international-kissing-day-cal-1280x960.png\" title=\"Happy International Kissing Day - 1280x960\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/cal/july-20-happy-international-kissing-day-cal-1280x1024.png\" title=\"Happy International Kissing Day - 1280x1024\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/cal/july-20-happy-international-kissing-day-cal-1366x768.png\" title=\"Happy International Kissing Day - 1366x768\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/cal/july-20-happy-international-kissing-day-cal-1400x1050.png\" title=\"Happy International Kissing Day - 1400x1050\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/cal/july-20-happy-international-kissing-day-cal-1440x900.png\" title=\"Happy International Kissing Day - 1440x900\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/cal/july-20-happy-international-kissing-day-cal-1600x1200.png\" title=\"Happy International Kissing Day - 1600x1200\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/cal/july-20-happy-international-kissing-day-cal-1680x1050.png\" title=\"Happy International Kissing Day - 1680x1050\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/cal/july-20-happy-international-kissing-day-cal-1680x1200.png\" title=\"Happy International Kissing Day - 1680x1200\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/cal/july-20-happy-international-kissing-day-cal-1920x1080.png\" title=\"Happy International Kissing Day - 1920x1080\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/cal/july-20-happy-international-kissing-day-cal-1920x1200.png\" title=\"Happy International Kissing Day - 1920x1200\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/cal/july-20-happy-international-kissing-day-cal-1920x1440.png\" title=\"Happy International Kissing Day - 1920x1440\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/cal/july-20-happy-international-kissing-day-cal-2560x1440.png\" title=\"Happy International Kissing Day - 2560x1440\">2560x1440</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/nocal/july-20-happy-international-kissing-day-nocal-800x480.png\" title=\"Happy International Kissing Day - 800x480\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/nocal/july-20-happy-international-kissing-day-nocal-800x600.png\" title=\"Happy International Kissing Day - 800x600\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/nocal/july-20-happy-international-kissing-day-nocal-1024x768.png\" title=\"Happy International Kissing Day - 1024x768\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/nocal/july-20-happy-international-kissing-day-nocal-1024x1024.png\" title=\"Happy International Kissing Day - 1024x1024\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/nocal/july-20-happy-international-kissing-day-nocal-1280x800.png\" title=\"Happy International Kissing Day - 1280x800\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/nocal/july-20-happy-international-kissing-day-nocal-1280x960.png\" title=\"Happy International Kissing Day - 1280x960\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/nocal/july-20-happy-international-kissing-day-nocal-1280x1024.png\" title=\"Happy International Kissing Day - 1280x1024\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/nocal/july-20-happy-international-kissing-day-nocal-1366x768.png\" title=\"Happy International Kissing Day - 1366x768\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/nocal/july-20-happy-international-kissing-day-nocal-1400x1050.png\" title=\"Happy International Kissing Day - 1400x1050\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/nocal/july-20-happy-international-kissing-day-nocal-1440x900.png\" title=\"Happy International Kissing Day - 1440x900\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/nocal/july-20-happy-international-kissing-day-nocal-1600x1200.png\" title=\"Happy International Kissing Day - 1600x1200\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/nocal/july-20-happy-international-kissing-day-nocal-1680x1050.png\" title=\"Happy International Kissing Day - 1680x1050\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/nocal/july-20-happy-international-kissing-day-nocal-1680x1200.png\" title=\"Happy International Kissing Day - 1680x1200\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/nocal/july-20-happy-international-kissing-day-nocal-1920x1080.png\" title=\"Happy International Kissing Day - 1920x1080\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/nocal/july-20-happy-international-kissing-day-nocal-1920x1200.png\" title=\"Happy International Kissing Day - 1920x1200\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/nocal/july-20-happy-international-kissing-day-nocal-1920x1440.png\" title=\"Happy International Kissing Day - 1920x1440\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/happy-international-kissing-day/nocal/july-20-happy-international-kissing-day-nocal-2560x1440.png\" title=\"Happy International Kissing Day - 2560x1440\">2560x1440</a></li>\n</ul>\n\n<h3 id=\"bloom-where-you-are-planted-07-2020\">Bloom Where You Are Planted</h3>\n<p>&#147;I was thrilled to catch this perfect moment of my blooming sunflower.&#148; &mdash; Designed by <a href=\"https://www.behance.net/monicabarron\">Monica Barron</a> from New Jersey.</p>\n<figure class=\"break-out\"><a href=\"http://files.smashingmagazine.com/wallpapers/july-20/bloom-where-you-are-planted/july-20-bloom-where-you-are-planted-full.jpg\" title=\"Bloom Where You Are Planted\"><img alt=\"Bloom Where You Are Planted\" src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/12c0f6c8-4305-414e-a79d-1e6ed3a7f9f1/july-20-bloom-where-you-are-planted-preview-opt.png\" /></a></figure>\n<ul>\n<li><a href=\"http://files.smashingmagazine.com/wallpapers/july-20/bloom-where-you-are-planted/july-20-bloom-where-you-are-planted-preview.jpg\" title=\"Bloom Where You Are Planted - Preview\">preview</a></li>\n<li>with calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/bloom-where-you-are-planted/cal/july-20-bloom-where-you-are-planted-cal-1080x1920.jpg\" title=\"Bloom Where You Are Planted - 1080x1920\">1080x1920</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/bloom-where-you-are-planted/cal/july-20-bloom-where-you-are-planted-cal-1280x1024.jpg\" title=\"Bloom Where You Are Planted - 1280x1024\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/bloom-where-you-are-planted/cal/july-20-bloom-where-you-are-planted-cal-1400x1050.jpg\" title=\"Bloom Where You Are Planted - 1400x1050\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/bloom-where-you-are-planted/cal/july-20-bloom-where-you-are-planted-cal-1536x2048.jpg\" title=\"Bloom Where You Are Planted - 1536x2048\">1536x2048</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/bloom-where-you-are-planted/cal/july-20-bloom-where-you-are-planted-cal-1600x1200.jpg\" title=\"Bloom Where You Are Planted - 1600x1200\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/bloom-where-you-are-planted/cal/july-20-bloom-where-you-are-planted-cal-1680x1200.jpg\" title=\"Bloom Where You Are Planted - 1680x1200\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/bloom-where-you-are-planted/cal/july-20-bloom-where-you-are-planted-cal-1920x1080.jpg\" title=\"Bloom Where You Are Planted - 1920x1080\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/bloom-where-you-are-planted/cal/july-20-bloom-where-you-are-planted-cal-1920x1200.jpg\" title=\"Bloom Where You Are Planted - 1920x1200\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/bloom-where-you-are-planted/cal/july-20-bloom-where-you-are-planted-cal-2560x1440.jpg\" title=\"Bloom Where You Are Planted - 2560x1440\">2560x1440</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/bloom-where-you-are-planted/nocal/july-20-bloom-where-you-are-planted-nocal-1080x1920.jpg\" title=\"Bloom Where You Are Planted - 1080x1920\">1080x1920</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/bloom-where-you-are-planted/nocal/july-20-bloom-where-you-are-planted-nocal-1280x1024.jpg\" title=\"Bloom Where You Are Planted - 1280x1024\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/bloom-where-you-are-planted/nocal/july-20-bloom-where-you-are-planted-nocal-1400x1050.jpg\" title=\"Bloom Where You Are Planted - 1400x1050\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/bloom-where-you-are-planted/nocal/july-20-bloom-where-you-are-planted-nocal-1536x2048.jpg\" title=\"Bloom Where You Are Planted - 1536x2048\">1536x2048</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/bloom-where-you-are-planted/nocal/july-20-bloom-where-you-are-planted-nocal-1600x1200.jpg\" title=\"Bloom Where You Are Planted - 1600x1200\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/bloom-where-you-are-planted/nocal/july-20-bloom-where-you-are-planted-nocal-1680x1200.jpg\" title=\"Bloom Where You Are Planted - 1680x1200\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/bloom-where-you-are-planted/nocal/july-20-bloom-where-you-are-planted-nocal-1920x1080.jpg\" title=\"Bloom Where You Are Planted - 1920x1080\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/bloom-where-you-are-planted/nocal/july-20-bloom-where-you-are-planted-nocal-1920x1200.jpg\" title=\"Bloom Where You Are Planted - 1920x1200\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/bloom-where-you-are-planted/nocal/july-20-bloom-where-you-are-planted-nocal-2560x1440.jpg\" title=\"Bloom Where You Are Planted - 2560x1440\">2560x1440</a></li>\n</ul>\n\n<h3 id=\"global-day-of-parents-07-2020\">Global Day Of Parents</h3>\n<p>&#147;This is the day in which people all over the world get the chance to say thank you to their parents (and parental figures) for the often thankless tasks they undertake for their kids. It’s a day to say ‘Thank you, I know I put you through a lot but I do appreciate it!’.&#148; &mdash; Designed by <a href=\"https://www.everincreasingcircles.com/content-marketing-agency-london/\">Ever Increasing Circles</a> from the United Kingdom.</p>\n<figure class=\"break-out\"><a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/july-20-global-day-of-parents-full.jpg\" title=\"Global Day Of Parents\"><img alt=\"Global Day Of Parents\" src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0a213a21-41a4-4d28-90f9-a04dbaab44f1/july-20-global-day-of-parents-preview-opt.png\" /></a></figure>\n<ul>\n<li><a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/july-20-global-day-of-parents-preview.jpg\" title=\"Global Day Of Parents - Preview\">preview</a></li>\n<li>with calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/cal/july-20-global-day-of-parents-cal-320x480.jpg\" title=\"Global Day Of Parents - 320x480\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/cal/july-20-global-day-of-parents-cal-640x480.jpg\" title=\"Global Day Of Parents - 640x480\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/cal/july-20-global-day-of-parents-cal-800x480.jpg\" title=\"Global Day Of Parents - 800x480\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/cal/july-20-global-day-of-parents-cal-800x600.jpg\" title=\"Global Day Of Parents - 800x600\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/cal/july-20-global-day-of-parents-cal-1024x768.jpg\" title=\"Global Day Of Parents - 1024x768\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/cal/july-20-global-day-of-parents-cal-1024x1024.jpg\" title=\"Global Day Of Parents - 1024x1024\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/cal/july-20-global-day-of-parents-cal-1152x864.jpg\" title=\"Global Day Of Parents - 1152x864\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/cal/july-20-global-day-of-parents-cal-1280x720.jpg\" title=\"Global Day Of Parents - 1280x720\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/cal/july-20-global-day-of-parents-cal-1280x800.jpg\" title=\"Global Day Of Parents - 1280x800\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/cal/july-20-global-day-of-parents-cal-1280x960.jpg\" title=\"Global Day Of Parents - 1280x960\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/cal/july-20-global-day-of-parents-cal-1280x1024.jpg\" title=\"Global Day Of Parents - 1280x1024\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/cal/july-20-global-day-of-parents-cal-1366x768.jpg\" title=\"Global Day Of Parents - 1366x768\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/cal/july-20-global-day-of-parents-cal-1400x1050.jpg\" title=\"Global Day Of Parents - 1400x1050\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/cal/july-20-global-day-of-parents-cal-1440x900.jpg\" title=\"Global Day Of Parents - 1440x900\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/cal/july-20-global-day-of-parents-cal-1600x1200.jpg\" title=\"Global Day Of Parents - 1600x1200\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/cal/july-20-global-day-of-parents-cal-1680x1050.jpg\" title=\"Global Day Of Parents - 1680x1050\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/cal/july-20-global-day-of-parents-cal-1680x1200.jpg\" title=\"Global Day Of Parents - 1680x1200\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/cal/july-20-global-day-of-parents-cal-1920x1080.jpg\" title=\"Global Day Of Parents - 1920x1080\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/cal/july-20-global-day-of-parents-cal-1920x1200.jpg\" title=\"Global Day Of Parents - 1920x1200\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/cal/july-20-global-day-of-parents-cal-1920x1440.jpg\" title=\"Global Day Of Parents - 1920x1440\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/cal/july-20-global-day-of-parents-cal-2560x1440.jpg\" title=\"Global Day Of Parents - 2560x1440\">2560x1440</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/nocal/july-20-global-day-of-parents-nocal-320x480.jpg\" title=\"Global Day Of Parents - 320x480\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/nocal/july-20-global-day-of-parents-nocal-640x480.jpg\" title=\"Global Day Of Parents - 640x480\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/nocal/july-20-global-day-of-parents-nocal-800x480.jpg\" title=\"Global Day Of Parents - 800x480\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/nocal/july-20-global-day-of-parents-nocal-800x600.jpg\" title=\"Global Day Of Parents - 800x600\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/nocal/july-20-global-day-of-parents-nocal-1024x768.jpg\" title=\"Global Day Of Parents - 1024x768\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/nocal/july-20-global-day-of-parents-nocal-1024x1024.jpg\" title=\"Global Day Of Parents - 1024x1024\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/nocal/july-20-global-day-of-parents-nocal-1152x864.jpg\" title=\"Global Day Of Parents - 1152x864\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/nocal/july-20-global-day-of-parents-nocal-1280x720.jpg\" title=\"Global Day Of Parents - 1280x720\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/nocal/july-20-global-day-of-parents-nocal-1280x800.jpg\" title=\"Global Day Of Parents - 1280x800\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/nocal/july-20-global-day-of-parents-nocal-1280x960.jpg\" title=\"Global Day Of Parents - 1280x960\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/nocal/july-20-global-day-of-parents-nocal-1280x1024.jpg\" title=\"Global Day Of Parents - 1280x1024\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/nocal/july-20-global-day-of-parents-nocal-1366x768.jpg\" title=\"Global Day Of Parents - 1366x768\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/nocal/july-20-global-day-of-parents-nocal-1400x1050.jpg\" title=\"Global Day Of Parents - 1400x1050\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/nocal/july-20-global-day-of-parents-nocal-1440x900.jpg\" title=\"Global Day Of Parents - 1440x900\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/nocal/july-20-global-day-of-parents-nocal-1600x1200.jpg\" title=\"Global Day Of Parents - 1600x1200\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/nocal/july-20-global-day-of-parents-nocal-1680x1050.jpg\" title=\"Global Day Of Parents - 1680x1050\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/nocal/july-20-global-day-of-parents-nocal-1680x1200.jpg\" title=\"Global Day Of Parents - 1680x1200\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/nocal/july-20-global-day-of-parents-nocal-1920x1080.jpg\" title=\"Global Day Of Parents - 1920x1080\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/nocal/july-20-global-day-of-parents-nocal-1920x1200.jpg\" title=\"Global Day Of Parents - 1920x1200\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/nocal/july-20-global-day-of-parents-nocal-1920x1440.jpg\" title=\"Global Day Of Parents - 1920x1440\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-20/global-day-of-parents/nocal/july-20-global-day-of-parents-nocal-2560x1440.jpg\" title=\"Global Day Of Parents - 2560x1440\">2560x1440</a></li>\n</ul>\n\n<div class=\"sponsors__lead-place\"></div>\n\n\n\n\n<h3>Oldies But Goodies</h3>\n\n<p>Our wallpapers archives are full of timeless treasures that are just too good to be forgotten. So here’s a small selection of <strong>favorites from past July editions</strong>. Enjoy! (Please note that these designs don’t come with a calendar.)</p>\n\n<p><h4 id=\"hello,-strawberry-sundae!-07-2019\">Hello, Strawberry Sundae!</h4>\n<p>&#147;Is there anything more refreshing (and more delicious!) than a strawberry sundae on a hot summer day? Well, we don’t think so. And did you know that strawberry celebration is on its way in the U.S. Oh, yes! July 7th is the National Strawberry Sundae Day, and we predict that it’s going to be sweet and yummy. So, make your favorite dessert and start preparing yourself for the festive July days.&#148; &mdash; Designed by <a href=\"https://www.popwebdesign.net/index_eng.html\">PopArt Studio</a> from Serbia.</p>\n<figure class=\"break-out\"><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0fbcaa18-d11e-4ada-9453-47c233f7cf61/july-19-hello-strawberry-sundae-full-opt.png\" title=\"Hello, Strawberry Sundae!\"><img alt=\"Hello, Strawberry Sundae!\" src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/73ecba31-313f-4be8-962b-e2c6eb6837f7/july-19-hello-strawberry-sundae-preview-opt.png\"></a></figure>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/73ecba31-313f-4be8-962b-e2c6eb6837f7/july-19-hello-strawberry-sundae-preview-opt.png\" title=\"Hello, Strawberry Sundae! - Preview\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/hello-strawberry-sundae/nocal/july-19-hello-strawberry-sundae-nocal-320x480.jpg\" title=\"Hello, Strawberry Sundae! - 320x480\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/hello-strawberry-sundae/nocal/july-19-hello-strawberry-sundae-nocal-640x480.jpg\" title=\"Hello, Strawberry Sundae! - 640x480\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/hello-strawberry-sundae/nocal/july-19-hello-strawberry-sundae-nocal-800x480.jpg\" title=\"Hello, Strawberry Sundae! - 800x480\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/hello-strawberry-sundae/nocal/july-19-hello-strawberry-sundae-nocal-800x600.jpg\" title=\"Hello, Strawberry Sundae! - 800x600\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/hello-strawberry-sundae/nocal/july-19-hello-strawberry-sundae-nocal-1024x768.jpg\" title=\"Hello, Strawberry Sundae! - 1024x768\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/hello-strawberry-sundae/nocal/july-19-hello-strawberry-sundae-nocal-1152x864.jpg\" title=\"Hello, Strawberry Sundae! - 1152x864\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/hello-strawberry-sundae/nocal/july-19-hello-strawberry-sundae-nocal-1280x720.jpg\" title=\"Hello, Strawberry Sundae! - 1280x720\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/hello-strawberry-sundae/nocal/july-19-hello-strawberry-sundae-nocal-1280x800.jpg\" title=\"Hello, Strawberry Sundae! - 1280x800\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/hello-strawberry-sundae/nocal/july-19-hello-strawberry-sundae-nocal-1280x960.jpg\" title=\"Hello, Strawberry Sundae! - 1280x960\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/hello-strawberry-sundae/nocal/july-19-hello-strawberry-sundae-nocal-1280x1024.jpg\" title=\"Hello, Strawberry Sundae! - 1280x1024\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/hello-strawberry-sundae/nocal/july-19-hello-strawberry-sundae-nocal-1366x768.jpg\" title=\"Hello, Strawberry Sundae! - 1366x768\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/hello-strawberry-sundae/nocal/july-19-hello-strawberry-sundae-nocal-1400x1050.jpg\" title=\"Hello, Strawberry Sundae! - 1400x1050\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/hello-strawberry-sundae/nocal/july-19-hello-strawberry-sundae-nocal-1440x900.jpg\" title=\"Hello, Strawberry Sundae! - 1440x900\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/hello-strawberry-sundae/nocal/july-19-hello-strawberry-sundae-nocal-1600x1200.jpg\" title=\"Hello, Strawberry Sundae! - 1600x1200\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/hello-strawberry-sundae/nocal/july-19-hello-strawberry-sundae-nocal-1680x1050.jpg\" title=\"Hello, Strawberry Sundae! - 1680x1050\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/hello-strawberry-sundae/nocal/july-19-hello-strawberry-sundae-nocal-1680x1200.jpg\" title=\"Hello, Strawberry Sundae! - 1680x1200\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/hello-strawberry-sundae/nocal/july-19-hello-strawberry-sundae-nocal-1920x1080.jpg\" title=\"Hello, Strawberry Sundae! - 1920x1080\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/hello-strawberry-sundae/nocal/july-19-hello-strawberry-sundae-nocal-1920x1200.jpg\" title=\"Hello, Strawberry Sundae! - 1920x1200\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/hello-strawberry-sundae/nocal/july-19-hello-strawberry-sundae-nocal-1920x1440.jpg\" title=\"Hello, Strawberry Sundae! - 1920x1440\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/hello-strawberry-sundae/nocal/july-19-hello-strawberry-sundae-nocal-2560x1440.jpg\" title=\"Hello, Strawberry Sundae! - 2560x1440\">2560x1440</a></li>\n</ul></p>\n\n<p><h4 id=\"floral-thing\">Floral Thing</h4>\n<p>&ldquo;The wallpaper which I created consists of my personal sketches of Polish herbs and flowers. I wanted it to be light and simple with a hint of romantic feeling. I hope you&rsquo;ll enjoy it!&rdquo; &mdash; Designed by <a href=\"http://www.behance.net/terazzaraz\">Beata Kurek</a> from Poland.</p>\n<figure class=\"break-out\"><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/17adcb43-bd8f-4102-91c5-061e5aa42924/july-12-floral-thing-86-full-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/47264d51-cdb6-4cec-ab06-12bab8a2735c/july-12-floral-thing-86-preview-opt.png\" alt=\"Smashing Desktop Wallpapers - July 2012\"></a></figure>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/47264d51-cdb6-4cec-ab06-12bab8a2735c/july-12-floral-thing-86-preview-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/july-12/july-12-floral_thing__86-nocal-1024x1024.jpg\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-12/july-12-floral_thing__86-nocal-1280x800.jpg\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-12/july-12-floral_thing__86-nocal-1440x900.jpg\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-12/july-12-floral_thing__86-nocal-1680x1050.jpg\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-12/july-12-floral_thing__86-nocal-2560x1440.jpg\">2560x1440</a></li>\n</ul></p>\n\n<p><h4 id=\"keep-moving-forward\">Keep Moving Forward</h4>\n<p>“Snails can be inspiring! If you keep heading towards your goal, even if it is just tiny steps, enjoy the journey and hopefully it will be worth the effort.” — Designed by <a href=\"http://www.tazi.com.au\">Glynnis Owen</a> from Australia.</p>\n<figure class=\"break-out\"><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6ea1c3d8-1b2a-4102-b90b-a7b10b36ccb4/july-17-keep-moving-forward-full-opt.png\" title=\"Keep Moving Forward\"><img alt=\"Keep Moving Forward\" src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/606eecbe-290c-4a82-92f6-3a20d032b632/july-17-keep-moving-forward-preview-opt.png\"></a></figure>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/606eecbe-290c-4a82-92f6-3a20d032b632/july-17-keep-moving-forward-preview-opt.png\" title=\"Keep Moving Forward - Preview\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/keep-moving-forward/nocal/july-17-keep-moving-forward-nocal-320x480.png\" title=\"Keep Moving Forward - 320x480\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/keep-moving-forward/nocal/july-17-keep-moving-forward-nocal-640x480.png\" title=\"Keep Moving Forward - 640x480\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/keep-moving-forward/nocal/july-17-keep-moving-forward-nocal-800x600.png\" title=\"Keep Moving Forward - 800x600\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/keep-moving-forward/nocal/july-17-keep-moving-forward-nocal-1024x768.png\" title=\"Keep Moving Forward - 1024x768\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/keep-moving-forward/nocal/july-17-keep-moving-forward-nocal-1152x864.png\" title=\"Keep Moving Forward - 1152x864\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/keep-moving-forward/nocal/july-17-keep-moving-forward-nocal-1280x720.png\" title=\"Keep Moving Forward - 1280x720\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/keep-moving-forward/nocal/july-17-keep-moving-forward-nocal-1280x960.png\" title=\"Keep Moving Forward - 1280x960\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/keep-moving-forward/nocal/july-17-keep-moving-forward-nocal-1600x1200.png\" title=\"Keep Moving Forward - 1600x1200\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/keep-moving-forward/nocal/july-17-keep-moving-forward-nocal-1920x1080.png\" title=\"Keep Moving Forward - 1920x1080\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/keep-moving-forward/nocal/july-17-keep-moving-forward-nocal-1920x1440.png\" title=\"Keep Moving Forward - 1920x1440\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/keep-moving-forward/nocal/july-17-keep-moving-forward-nocal-2560x1440.png\" title=\"Keep Moving Forward - 2560x1440\">2560x1440</a></li>\n</ul></p>\n\n<p><h4 id=\"alentejo-plain-07-2019\">Alentejo Plain</h4>\n<p>&#147;Based in the Alentejo region, in the south of Portugal, where there are large plains used for growing wheat. It thus represents the extensions of the fields of cultivation and their simplicity. Contrast of the plain with the few trees in the fields. Storks that at this time of year predominate in this region, being part of the Alentejo landscape and mentioned in the singing of Alentejo.&#148; &mdash; Designed by <a href=\"https://www.linkedin.com/in/josé-guerra-00b029151/\">José Guerra</a> from Portugal.</p>\n<figure class=\"break-out\"><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d178fd83-c537-475b-9c68-404d74ab5852/july-19-alentejo-plain-full-opt.png\" title=\"Alentejo Plain\"><img alt=\"Alentejo Plain\" src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f669f954-8856-4148-b95d-79c96fc0b789/july-19-alentejo-plain-preview-opt.png\"></a></figure>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f669f954-8856-4148-b95d-79c96fc0b789/july-19-alentejo-plain-preview-opt.png\" title=\"Alentejo Plain - Preview\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/alentejo-plain/nocal/july-19-alentejo-plain-nocal-1125x2436.png\" title=\"Alentejo Plain - 1125x2436\">1125x2436</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/alentejo-plain/nocal/july-19-alentejo-plain-nocal-1280x800.png\" title=\"Alentejo Plain - 1280x800\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/alentejo-plain/nocal/july-19-alentejo-plain-nocal-1536x2048.png\" title=\"Alentejo Plain - 1536x2048\">1536x2048</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/alentejo-plain/nocal/july-19-alentejo-plain-nocal-1680x1050.png\" title=\"Alentejo Plain - 1680x1050\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/alentejo-plain/nocal/july-19-alentejo-plain-nocal-1920x1200.png\" title=\"Alentejo Plain - 1920x1200\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/alentejo-plain/nocal/july-19-alentejo-plain-nocal-2880x1800.png\" title=\"Alentejo Plain - 2880x1800\">2880x1800</a></li>\n</ul></p>\n\n<p><h4 id=\"july-rocks!-07-2019\">July Rocks!</h4>\n<p>Designed by <a href=\"https://jm930.webnode.pt/\">Joana Moreira</a> from Portugal.</p>\n<figure class=\"break-out\"><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/333a2bf1-6de8-470d-ab86-8ae25ec4869a/july-19-july-rocks-full-opt.png\" title=\"July Rocks!\"><img alt=\"July Rocks!\" src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ef573fef-8f0a-4c86-88f9-855de7cfdaa3/july-19-july-rocks-preview-opt.png\"></a></figure>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ef573fef-8f0a-4c86-88f9-855de7cfdaa3/july-19-july-rocks-preview-opt.png\" title=\"July Rocks! - Preview\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/july-rocks/nocal/july-19-july-rocks-nocal-320x480.png\" title=\"July Rocks! - 320x480\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/july-rocks/nocal/july-19-july-rocks-nocal-1024x768.png\" title=\"July Rocks! - 1024x768\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/july-rocks/nocal/july-19-july-rocks-nocal-1280x1024.png\" title=\"July Rocks! - 1280x1024\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/july-rocks/nocal/july-19-july-rocks-nocal-1920x1080.png\" title=\"July Rocks! - 1920x1080\">1920x1080</a></li>\n</ul></p>\n\n<p><h4 id=\"riding-in-the-drizzle-07-2019\">Riding In The Drizzle</h4>\n<p>&#147;Rain has come, showering the existence with new seeds of life. Everywhere life is blooming, as if they were asleep and the falling music of raindrops have awakened them. Feel the drops of rain. Feel this beautiful mystery of life. Listen to its music, melt into it.&#148; &mdash; Designed by <a href=\"https://aufait.in/document-management-system\">DMS Software</a> from India.</p>\n<figure class=\"break-out\"><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5acea4a6-5483-4425-8eeb-c7f5f0a3b295/july-19-riding-in-the-drizzle-full-opt.png\" title=\"Riding In The Drizzle\"><img alt=\"Riding In The Drizzle\" src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0828d9a5-d788-4e99-b930-5bbad01b45e2/july-19-riding-in-the-drizzle-preview-opt.png\"></a></figure>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0828d9a5-d788-4e99-b930-5bbad01b45e2/july-19-riding-in-the-drizzle-preview-opt.png\" title=\"Riding In The Drizzle - Preview\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/riding-in-the-drizzle/nocal/july-19-riding-in-the-drizzle-nocal-320x480.jpg\" title=\"Riding In The Drizzle - 320x480\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/riding-in-the-drizzle/nocal/july-19-riding-in-the-drizzle-nocal-640x480.jpg\" title=\"Riding In The Drizzle - 640x480\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/riding-in-the-drizzle/nocal/july-19-riding-in-the-drizzle-nocal-800x480.jpg\" title=\"Riding In The Drizzle - 800x480\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/riding-in-the-drizzle/nocal/july-19-riding-in-the-drizzle-nocal-800x600.jpg\" title=\"Riding In The Drizzle - 800x600\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/riding-in-the-drizzle/nocal/july-19-riding-in-the-drizzle-nocal-1024x768.jpg\" title=\"Riding In The Drizzle - 1024x768\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/riding-in-the-drizzle/nocal/july-19-riding-in-the-drizzle-nocal-1024x1024.jpg\" title=\"Riding In The Drizzle - 1024x1024\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/riding-in-the-drizzle/nocal/july-19-riding-in-the-drizzle-nocal-1152x864.jpg\" title=\"Riding In The Drizzle - 1152x864\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/riding-in-the-drizzle/nocal/july-19-riding-in-the-drizzle-nocal-1280x720.jpg\" title=\"Riding In The Drizzle - 1280x720\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/riding-in-the-drizzle/nocal/july-19-riding-in-the-drizzle-nocal-1280x800.jpg\" title=\"Riding In The Drizzle - 1280x800\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/riding-in-the-drizzle/nocal/july-19-riding-in-the-drizzle-nocal-1280x960.jpg\" title=\"Riding In The Drizzle - 1280x960\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/riding-in-the-drizzle/nocal/july-19-riding-in-the-drizzle-nocal-1280x1024.jpg\" title=\"Riding In The Drizzle - 1280x1024\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/riding-in-the-drizzle/nocal/july-19-riding-in-the-drizzle-nocal-1366x768.jpg\" title=\"Riding In The Drizzle - 1366x768\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/riding-in-the-drizzle/nocal/july-19-riding-in-the-drizzle-nocal-1400x1050.jpg\" title=\"Riding In The Drizzle - 1400x1050\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/riding-in-the-drizzle/nocal/july-19-riding-in-the-drizzle-nocal-1440x900.jpg\" title=\"Riding In The Drizzle - 1440x900\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/riding-in-the-drizzle/nocal/july-19-riding-in-the-drizzle-nocal-1600x1200.jpg\" title=\"Riding In The Drizzle - 1600x1200\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/riding-in-the-drizzle/nocal/july-19-riding-in-the-drizzle-nocal-1680x1050.jpg\" title=\"Riding In The Drizzle - 1680x1050\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/riding-in-the-drizzle/nocal/july-19-riding-in-the-drizzle-nocal-1680x1200.jpg\" title=\"Riding In The Drizzle - 1680x1200\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/riding-in-the-drizzle/nocal/july-19-riding-in-the-drizzle-nocal-1920x1080.jpg\" title=\"Riding In The Drizzle - 1920x1080\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/riding-in-the-drizzle/nocal/july-19-riding-in-the-drizzle-nocal-1920x1200.jpg\" title=\"Riding In The Drizzle - 1920x1200\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/riding-in-the-drizzle/nocal/july-19-riding-in-the-drizzle-nocal-1920x1440.jpg\" title=\"Riding In The Drizzle - 1920x1440\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/riding-in-the-drizzle/nocal/july-19-riding-in-the-drizzle-nocal-2560x1440.jpg\" title=\"Riding In The Drizzle - 2560x1440\">2560x1440</a></li>\n</ul></p>\n\n<p><h4 id=\"save-the-tigers-07-2019\">Save The Tigers</h4>\n<p>&#147;Global Tiger Day, often called International Tiger Day, is an annual celebration to raise awareness for tiger conservation, held annually on July 29. It was created in 2010 at the Saint Petersburg Tiger Summit. The goal of the day is to promote a global system for protecting the natural habitats of tigers and to raise public awareness and support for tiger conservation issues.&#148; &mdash; Designed by <a href=\"https://www.flyingloop.com/\">Athulya</a> from Calicut.</p>\n<figure class=\"break-out\"><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e0cb6ad5-f31b-45d1-a9c8-1786e5b57042/july-19-save-the-tigers-full-opt.png\" title=\"Save The Tigers\"><img alt=\"Save The Tigers\" src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/608e1bef-7bc9-48f5-b0cc-45a2d6056f48/july-19-save-the-tigers-preview-opt.png\"></a></figure>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/608e1bef-7bc9-48f5-b0cc-45a2d6056f48/july-19-save-the-tigers-preview-opt.png\" title=\"Save The Tigers - Preview\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/save-the-tigers/nocal/july-19-save-the-tigers-nocal-320x480.png\" title=\"Save The Tigers - 320x480\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/save-the-tigers/nocal/july-19-save-the-tigers-nocal-640x480.png\" title=\"Save The Tigers - 640x480\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/save-the-tigers/nocal/july-19-save-the-tigers-nocal-800x480.png\" title=\"Save The Tigers - 800x480\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/save-the-tigers/nocal/july-19-save-the-tigers-nocal-800x600.png\" title=\"Save The Tigers - 800x600\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/save-the-tigers/nocal/july-19-save-the-tigers-nocal-1024x768.png\" title=\"Save The Tigers - 1024x768\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/save-the-tigers/nocal/july-19-save-the-tigers-nocal-1024x1024.png\" title=\"Save The Tigers - 1024x1024\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/save-the-tigers/nocal/july-19-save-the-tigers-nocal-1152x864.png\" title=\"Save The Tigers - 1152x864\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/save-the-tigers/nocal/july-19-save-the-tigers-nocal-1280x720.png\" title=\"Save The Tigers - 1280x720\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/save-the-tigers/nocal/july-19-save-the-tigers-nocal-1280x800.png\" title=\"Save The Tigers - 1280x800\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/save-the-tigers/nocal/july-19-save-the-tigers-nocal-1280x960.png\" title=\"Save The Tigers - 1280x960\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/save-the-tigers/nocal/july-19-save-the-tigers-nocal-1280x1024.png\" title=\"Save The Tigers - 1280x1024\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/save-the-tigers/nocal/july-19-save-the-tigers-nocal-1366x768.png\" title=\"Save The Tigers - 1366x768\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/save-the-tigers/nocal/july-19-save-the-tigers-nocal-1400x1050.png\" title=\"Save The Tigers - 1400x1050\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/save-the-tigers/nocal/july-19-save-the-tigers-nocal-1440x900.png\" title=\"Save The Tigers - 1440x900\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/save-the-tigers/nocal/july-19-save-the-tigers-nocal-1600x1200.png\" title=\"Save The Tigers - 1600x1200\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/save-the-tigers/nocal/july-19-save-the-tigers-nocal-1680x1050.png\" title=\"Save The Tigers - 1680x1050\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/save-the-tigers/nocal/july-19-save-the-tigers-nocal-1680x1200.png\" title=\"Save The Tigers - 1680x1200\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/save-the-tigers/nocal/july-19-save-the-tigers-nocal-1920x1080.png\" title=\"Save The Tigers - 1920x1080\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/save-the-tigers/nocal/july-19-save-the-tigers-nocal-1920x1200.png\" title=\"Save The Tigers - 1920x1200\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/save-the-tigers/nocal/july-19-save-the-tigers-nocal-1920x1440.png\" title=\"Save The Tigers - 1920x1440\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-19/save-the-tigers/nocal/july-19-save-the-tigers-nocal-2560x1440.png\" title=\"Save The Tigers - 2560x1440\">2560x1440</a></li>\n</ul></p>\n\n<p><h4 id=\"cactus-hug\">Cactus Hug</h4>\n<p>Designed by <a href=\"https://www.iliscreative.com\">Ilaria Bagnasco</a> from Italy.</p>\n<figure class=\"break-out\"><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2ba59339-0606-4f62-adee-f504e32dd5ab/july-17-cactus-hug-full-opt.png\" title=\"Cactus Hug\"><img alt=\"Cactus Hug\" src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4d4851b8-8e30-4bc2-b4f3-50270d400fdd/july-17-cactus-hug-preview-opt.png\"></a></figure>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4d4851b8-8e30-4bc2-b4f3-50270d400fdd/july-17-cactus-hug-preview-opt.png\" title=\"Cactus Hug - Preview\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/cactus-hug/nocal/july-17-cactus-hug-nocal-320x480.jpg\" title=\"Cactus Hug - 320x480\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/cactus-hug/nocal/july-17-cactus-hug-nocal-800x600.jpg\" title=\"Cactus Hug - 800x600\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/cactus-hug/nocal/july-17-cactus-hug-nocal-1024x1024.jpg\" title=\"Cactus Hug - 1024x1024\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/cactus-hug/nocal/july-17-cactus-hug-nocal-1280x800.jpg\" title=\"Cactus Hug - 1280x800\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/cactus-hug/nocal/july-17-cactus-hug-nocal-1280x1024.jpg\" title=\"Cactus Hug - 1280x1024\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/cactus-hug/nocal/july-17-cactus-hug-nocal-1366x768.jpg\" title=\"Cactus Hug - 1366x768\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/cactus-hug/nocal/july-17-cactus-hug-nocal-1440x900.jpg\" title=\"Cactus Hug - 1440x900\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/cactus-hug/nocal/july-17-cactus-hug-nocal-1600x1200.jpg\" title=\"Cactus Hug - 1600x1200\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/cactus-hug/nocal/july-17-cactus-hug-nocal-1680x1050.jpg\" title=\"Cactus Hug - 1680x1050\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/cactus-hug/nocal/july-17-cactus-hug-nocal-1920x1080.jpg\" title=\"Cactus Hug - 1920x1080\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/cactus-hug/nocal/july-17-cactus-hug-nocal-1920x1200.jpg\" title=\"Cactus Hug - 1920x1200\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/cactus-hug/nocal/july-17-cactus-hug-nocal-2560x1440.jpg\" title=\"Cactus Hug - 2560x1440\">2560x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/cactus-hug/nocal/july-17-cactus-hug-nocal-2560x1600.jpg\" title=\"Cactus Hug - 2560x1600\">2560x1600</a></li>\n</ul></p>\n\n<p><h4 id=\"heated-mountains-07-2018\">Heated Mountains</h4>\n<p>&#147;Warm summer weather inspired the color palette.&#148; &mdash; Designed by <a href=\"http://marijanapivac.dribbble.com/\">Marijana Pivac</a> from Croatia.</p>\n<figure class=\"break-out\"><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/74b4c9cf-4212-46c9-8f15-02525c5585ea/july-18-heated-mountains-full-opt.png\" title=\"Heated Mountains\"><img alt=\"Heated Mountains\" src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dea767fc-b1c8-4a95-b14d-ac6163fd77c9/july-18-heated-mountains-preview-opt.png\" /></a></figure>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dea767fc-b1c8-4a95-b14d-ac6163fd77c9/july-18-heated-mountains-preview-opt.png\" title=\"Heated Mountains - Preview\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/july-18/heated-mountains/nocal/july-18-heated-mountains-nocal-320x480.png\" title=\"Heated Mountains - 320x480\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-18/heated-mountains/nocal/july-18-heated-mountains-nocal-640x480.png\" title=\"Heated Mountains - 640x480\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-18/heated-mountains/nocal/july-18-heated-mountains-nocal-800x480.png\" title=\"Heated Mountains - 800x480\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-18/heated-mountains/nocal/july-18-heated-mountains-nocal-800x600.png\" title=\"Heated Mountains - 800x600\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-18/heated-mountains/nocal/july-18-heated-mountains-nocal-1024x768.png\" title=\"Heated Mountains - 1024x768\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-18/heated-mountains/nocal/july-18-heated-mountains-nocal-1024x1024.png\" title=\"Heated Mountains - 1024x1024\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-18/heated-mountains/nocal/july-18-heated-mountains-nocal-1152x864.png\" title=\"Heated Mountains - 1152x864\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-18/heated-mountains/nocal/july-18-heated-mountains-nocal-1280x720.png\" title=\"Heated Mountains - 1280x720\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-18/heated-mountains/nocal/july-18-heated-mountains-nocal-1280x800.png\" title=\"Heated Mountains - 1280x800\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-18/heated-mountains/nocal/july-18-heated-mountains-nocal-1280x960.png\" title=\"Heated Mountains - 1280x960\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-18/heated-mountains/nocal/july-18-heated-mountains-nocal-1280x1024.png\" title=\"Heated Mountains - 1280x1024\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-18/heated-mountains/nocal/july-18-heated-mountains-nocal-1366x768.png\" title=\"Heated Mountains - 1366x768\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-18/heated-mountains/nocal/july-18-heated-mountains-nocal-1400x1050.png\" title=\"Heated Mountains - 1400x1050\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-18/heated-mountains/nocal/july-18-heated-mountains-nocal-1440x900.png\" title=\"Heated Mountains - 1440x900\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-18/heated-mountains/nocal/july-18-heated-mountains-nocal-1600x1200.png\" title=\"Heated Mountains - 1600x1200\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-18/heated-mountains/nocal/july-18-heated-mountains-nocal-1680x1050.png\" title=\"Heated Mountains - 1680x1050\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-18/heated-mountains/nocal/july-18-heated-mountains-nocal-1680x1200.png\" title=\"Heated Mountains - 1680x1200\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-18/heated-mountains/nocal/july-18-heated-mountains-nocal-1920x1080.png\" title=\"Heated Mountains - 1920x1080\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-18/heated-mountains/nocal/july-18-heated-mountains-nocal-1920x1200.png\" title=\"Heated Mountains - 1920x1200\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-18/heated-mountains/nocal/july-18-heated-mountains-nocal-1920x1440.png\" title=\"Heated Mountains - 1920x1440\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-18/heated-mountains/nocal/july-18-heated-mountains-nocal-2560x1440.png\" title=\"Heated Mountains - 2560x1440\">2560x1440</a></li>\n</ul></p>\n\n<p><h4>Summer Cannonball</h4>\n<p>“Summer is coming in the northern hemisphere and what better way to enjoy it than with watermelons and cannonballs.” — Designed by <a href=\"http://www.mariakellerac.com\">Maria Keller</a> from Mexico.</p>\n<figure class=\"break-out\"><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1537ec9a-99ad-4cc1-8755-8ac0ee69b83b/july-17-summer-cannonball-full-opt.png\" title=\"Summer Cannonball\"><img alt=\"Summer Cannonball\" src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e3e8e873-674d-43b2-b5b6-3709ad2f428c/july-17-summer-cannonball-preview-opt.png\"></a></figure></p>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e3e8e873-674d-43b2-b5b6-3709ad2f428c/july-17-summer-cannonball-preview-opt.png\" title=\"Summer Cannonball - Preview\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/summer-cannonball/nocal/july-17-summer-cannonball-nocal-320x480.png\" title=\"Summer Cannonball - 320x480\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/summer-cannonball/nocal/july-17-summer-cannonball-nocal-640x480.png\" title=\"Summer Cannonball - 640x480\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/summer-cannonball/nocal/july-17-summer-cannonball-nocal-640x1136.png\" title=\"Summer Cannonball - 640x1136\">640x1136</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/summer-cannonball/nocal/july-17-summer-cannonball-nocal-750x1334.png\" title=\"Summer Cannonball - 750x1334\">750x1334</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/summer-cannonball/nocal/july-17-summer-cannonball-nocal-800x480.png\" title=\"Summer Cannonball - 800x480\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/summer-cannonball/nocal/july-17-summer-cannonball-nocal-800x600.png\" title=\"Summer Cannonball - 800x600\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/summer-cannonball/nocal/july-17-summer-cannonball-nocal-1024x768.png\" title=\"Summer Cannonball - 1024x768\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/summer-cannonball/nocal/july-17-summer-cannonball-nocal-1024x1024.png\" title=\"Summer Cannonball - 1024x1024\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/summer-cannonball/nocal/july-17-summer-cannonball-nocal-1152x864.png\" title=\"Summer Cannonball - 1152x864\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/summer-cannonball/nocal/july-17-summer-cannonball-nocal-1242x2208.png\" title=\"Summer Cannonball - 1242x2208\">1242x2208</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/summer-cannonball/nocal/july-17-summer-cannonball-nocal-1280x720.png\" title=\"Summer Cannonball - 1280x720\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/summer-cannonball/nocal/july-17-summer-cannonball-nocal-1280x800.png\" title=\"Summer Cannonball - 1280x800\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/summer-cannonball/nocal/july-17-summer-cannonball-nocal-1280x960.png\" title=\"Summer Cannonball - 1280x960\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/summer-cannonball/nocal/july-17-summer-cannonball-nocal-1280x1024.png\" title=\"Summer Cannonball - 1280x1024\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/summer-cannonball/nocal/july-17-summer-cannonball-nocal-1366x768.png\" title=\"Summer Cannonball - 1366x768\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/summer-cannonball/nocal/july-17-summer-cannonball-nocal-1400x1050.png\" title=\"Summer Cannonball - 1400x1050\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/summer-cannonball/nocal/july-17-summer-cannonball-nocal-1440x900.png\" title=\"Summer Cannonball - 1440x900\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/summer-cannonball/nocal/july-17-summer-cannonball-nocal-1600x1200.png\" title=\"Summer Cannonball - 1600x1200\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/summer-cannonball/nocal/july-17-summer-cannonball-nocal-1680x1050.png\" title=\"Summer Cannonball - 1680x1050\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/summer-cannonball/nocal/july-17-summer-cannonball-nocal-1680x1200.png\" title=\"Summer Cannonball - 1680x1200\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/summer-cannonball/nocal/july-17-summer-cannonball-nocal-1920x1080.png\" title=\"Summer Cannonball - 1920x1080\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/summer-cannonball/nocal/july-17-summer-cannonball-nocal-1920x1200.png\" title=\"Summer Cannonball - 1920x1200\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/summer-cannonball/nocal/july-17-summer-cannonball-nocal-1920x1440.png\" title=\"Summer Cannonball - 1920x1440\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/summer-cannonball/nocal/july-17-summer-cannonball-nocal-2560x1440.png\" title=\"Summer Cannonball - 2560x1440\">2560x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/summer-cannonball/nocal/july-17-summer-cannonball-nocal-2880x1800.png\" title=\"Summer Cannonball - 2880x1800\">2880x1800</a></li>\n</ul></p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n\n\n\n<p><h4>Tropical Lilies</h4>\n<p>“I enjoy creating tropical designs, they fuel my wanderlust and passion for the exotic. Instantaneously transporting me to a tropical destination.” — Designed by <a href=\"http://www.fox-and-eagle.com/\">Tamsin Raslan</a> from the United States.</p>\n<figure class=\"break-out\"><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/eedd035d-7844-4e18-826f-4f48965c4d37/july-16-tropical-lilies-full-opt.png\" title=\"Tropical Lilies\"><img alt=\"Tropical Lilies\" src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/18e34889-f79b-4fec-8d5f-e4b951e98daf/july-16-tropical-lilies-preview-opt.png\"></a></figure></p>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/18e34889-f79b-4fec-8d5f-e4b951e98daf/july-16-tropical-lilies-preview-opt.png\" title=\"Tropical Lilies - Preview\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/tropical-lilies/nocal/july-16-tropical-lilies-nocal-320x480.png\" title=\"Tropical Lilies - 320x480\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/tropical-lilies/nocal/july-16-tropical-lilies-nocal-640x480.png\" title=\"Tropical Lilies - 640x480\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/tropical-lilies/nocal/july-16-tropical-lilies-nocal-800x480.png\" title=\"Tropical Lilies - 800x480\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/tropical-lilies/nocal/july-16-tropical-lilies-nocal-800x600.png\" title=\"Tropical Lilies - 800x600\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/tropical-lilies/nocal/july-16-tropical-lilies-nocal-1024x768.png\" title=\"Tropical Lilies - 1024x768\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/tropical-lilies/nocal/july-16-tropical-lilies-nocal-1024x1024.png\" title=\"Tropical Lilies - 1024x1024\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/tropical-lilies/nocal/july-16-tropical-lilies-nocal-1152x864.png\" title=\"Tropical Lilies - 1152x864\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/tropical-lilies/nocal/july-16-tropical-lilies-nocal-1280x720.png\" title=\"Tropical Lilies - 1280x720\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/tropical-lilies/nocal/july-16-tropical-lilies-nocal-1280x800.png\" title=\"Tropical Lilies - 1280x800\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/tropical-lilies/nocal/july-16-tropical-lilies-nocal-1280x960.png\" title=\"Tropical Lilies - 1280x960\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/tropical-lilies/nocal/july-16-tropical-lilies-nocal-1280x1024.png\" title=\"Tropical Lilies - 1280x1024\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/tropical-lilies/nocal/july-16-tropical-lilies-nocal-1440x900.png\" title=\"Tropical Lilies - 1440x900\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/tropical-lilies/nocal/july-16-tropical-lilies-nocal-1440x1050.png\" title=\"Tropical Lilies - 1440x1050\">1440x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/tropical-lilies/nocal/july-16-tropical-lilies-nocal-1600x1200.png\" title=\"Tropical Lilies - 1600x1200\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/tropical-lilies/nocal/july-16-tropical-lilies-nocal-1680x1050.png\" title=\"Tropical Lilies - 1680x1050\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/tropical-lilies/nocal/july-16-tropical-lilies-nocal-1680x1200.png\" title=\"Tropical Lilies - 1680x1200\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/tropical-lilies/nocal/july-16-tropical-lilies-nocal-1920x1080.png\" title=\"Tropical Lilies - 1920x1080\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/tropical-lilies/nocal/july-16-tropical-lilies-nocal-1920x1200.png\" title=\"Tropical Lilies - 1920x1200\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/tropical-lilies/nocal/july-16-tropical-lilies-nocal-1920x1440.png\" title=\"Tropical Lilies - 1920x1440\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/tropical-lilies/nocal/july-16-tropical-lilies-nocal-2560x1440.png\" title=\"Tropical Lilies - 2560x1440\">2560x1440</a></li>\n</ul></p>\n\n<p><h4>Eternal Summer</h4>\n<p>“And once you let your imagination go, you find yourself surrounded by eternal summer, unexplored worlds and all-pervading warmth, where there are no rules of physics and colors tint the sky under your feet.” — Designed by <a href=\"https://www.creitive.com/\">Ana Masnikosa</a> from Belgrade, Serbia.</p>\n<figure class=\"break-out\"><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/44fce15a-b5f0-4933-b73b-66411fb6b698/july-17-eternal-summer-full-opt.png\" title=\"Eternal Summer\"><img alt=\"Eternal Summer\" src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dd17eedd-d2e1-43d9-806a-1a853d0415fb/july-17-eternal-summer-preview-opt.png\"></a></figure></p><ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dd17eedd-d2e1-43d9-806a-1a853d0415fb/july-17-eternal-summer-preview-opt.png\" title=\"Eternal Summer - Preview\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/eternal-summer/nocal/july-17-eternal-summer-nocal-320x480.png\" title=\"Eternal Summer - 320x480\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/eternal-summer/nocal/july-17-eternal-summer-nocal-640x480.png\" title=\"Eternal Summer - 640x480\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/eternal-summer/nocal/july-17-eternal-summer-nocal-800x480.png\" title=\"Eternal Summer - 800x480\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/eternal-summer/nocal/july-17-eternal-summer-nocal-800x600.png\" title=\"Eternal Summer - 800x600\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/eternal-summer/nocal/july-17-eternal-summer-nocal-1024x768.png\" title=\"Eternal Summer - 1024x768\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/eternal-summer/nocal/july-17-eternal-summer-nocal-1024x1024.png\" title=\"Eternal Summer - 1024x1024\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/eternal-summer/nocal/july-17-eternal-summer-nocal-1152x864.png\" title=\"Eternal Summer - 1152x864\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/eternal-summer/nocal/july-17-eternal-summer-nocal-1280x720.png\" title=\"Eternal Summer - 1280x720\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/eternal-summer/nocal/july-17-eternal-summer-nocal-1280x800.png\" title=\"Eternal Summer - 1280x800\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/eternal-summer/nocal/july-17-eternal-summer-nocal-1280x960.png\" title=\"Eternal Summer - 1280x960\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/eternal-summer/nocal/july-17-eternal-summer-nocal-1280x1024.png\" title=\"Eternal Summer - 1280x1024\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/eternal-summer/nocal/july-17-eternal-summer-nocal-1400x1050.png\" title=\"Eternal Summer - 1400x1050\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/eternal-summer/nocal/july-17-eternal-summer-nocal-1440x900.png\" title=\"Eternal Summer - 1440x900\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/eternal-summer/nocal/july-17-eternal-summer-nocal-1600x1200.png\" title=\"Eternal Summer - 1600x1200\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/eternal-summer/nocal/july-17-eternal-summer-nocal-1680x1050.png\" title=\"Eternal Summer - 1680x1050\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/eternal-summer/nocal/july-17-eternal-summer-nocal-1680x1200.png\" title=\"Eternal Summer - 1680x1200\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/eternal-summer/nocal/july-17-eternal-summer-nocal-1920x1080.png\" title=\"Eternal Summer - 1920x1080\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/eternal-summer/nocal/july-17-eternal-summer-nocal-1920x1200.png\" title=\"Eternal Summer - 1920x1200\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/eternal-summer/nocal/july-17-eternal-summer-nocal-1920x1440.png\" title=\"Eternal Summer - 1920x1440\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-17/eternal-summer/nocal/july-17-eternal-summer-nocal-2560x1440.png\" title=\"Eternal Summer - 2560x1440\">2560x1440</a></li>\n</ul></p>\n\n<p><h4>A Flamboyance Of Flamingos</h4>\n<p>“July in South Africa is dreary and wintery so we give all the southern hemisphere dwellers a bit of colour for those grey days. And for the northern hemisphere dwellers a bit of pop for their summer!” — Designed by <a href=\"http://www.wonderlandcollective.co.za/\">Wonderland Collective</a> from South Africa.</p>\n<figure class=\"break-out\"><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2bbc33fd-46b8-437c-ac69-ecbf96320b61/july-15-a-flamboyance-of-flamingos-full-opt.png\" title=\"A Flamboyance Of Flamingos\"><img alt=\"A Flamboyance Of Flamingos\" src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/aa099a9d-0d72-4083-ac98-3e84d03dc825/july-15-a-flamboyance-of-flamingos-preview-opt.png\"></a></figure></p>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/aa099a9d-0d72-4083-ac98-3e84d03dc825/july-15-a-flamboyance-of-flamingos-preview-opt.png\" title=\"A Flamboyance Of Flamingos - Preview\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/july-15/a-flamboyance-of-flamingos/nocal/july-15-a-flamboyance-of-flamingos-nocal-320x480.jpg\" title=\"A Flamboyance Of Flamingos - 320x480\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-15/a-flamboyance-of-flamingos/nocal/july-15-a-flamboyance-of-flamingos-nocal-800x600.jpg\" title=\"A Flamboyance Of Flamingos - 800x600\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-15/a-flamboyance-of-flamingos/nocal/july-15-a-flamboyance-of-flamingos-nocal-1024x768.jpg\" title=\"A Flamboyance Of Flamingos - 1024x768\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-15/a-flamboyance-of-flamingos/nocal/july-15-a-flamboyance-of-flamingos-nocal-1280x960.jpg\" title=\"A Flamboyance Of Flamingos - 1280x960\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-15/a-flamboyance-of-flamingos/nocal/july-15-a-flamboyance-of-flamingos-nocal-1680x1050.jpg\" title=\"A Flamboyance Of Flamingos - 1680x1050\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-15/a-flamboyance-of-flamingos/nocal/july-15-a-flamboyance-of-flamingos-nocal-1920x1200.jpg\" title=\"A Flamboyance Of Flamingos - 1920x1200\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-15/a-flamboyance-of-flamingos/nocal/july-15-a-flamboyance-of-flamingos-nocal-2560x1440.jpg\" title=\"A Flamboyance Of Flamingos - 2560x1440\">2560x1440</a></li>\n</ul></p>\n\n<p><h4 id=\"summermoon\">Summermoon</h4>\n<p>Designed by <a href=\"http://www.neumann-mediengestaltung.de\">Erik Neumann</a> from Germany.</p>\n<figure class=\"break-out\"><a title=Summermoon href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f36886bb-9104-41fc-9424-946f46e96bbd/july-16-summermoon-full-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e3412699-b035-4cb1-8230-7468b4eaf954/july-16-summermoon-preview-opt.png\" alt=\"Summermoon\"></a></figure>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e3412699-b035-4cb1-8230-7468b4eaf954/july-16-summermoon-preview-opt.png\" title=\"Summermoon - Preview\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/summermoon/nocal/july-16-summermoon-nocal-1280x720.png\" title=\"Summermoon - 1280x720\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/summermoon/nocal/july-16-summermoon-nocal-1280x800.png\" title=\"Summermoon - 1280x800\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/summermoon/nocal/july-16-summermoon-nocal-1280x960.png\" title=\"Summermoon - 1280x960\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/summermoon/nocal/july-16-summermoon-nocal-1400x1050.png\" title=\"Summermoon - 1400x1050\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/summermoon/nocal/july-16-summermoon-nocal-1440x900.png\" title=\"Summermoon - 1440x900\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/summermoon/nocal/july-16-summermoon-nocal-1600x1200.png\" title=\"Summermoon - 1600x1200\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/summermoon/nocal/july-16-summermoon-nocal-1680x1050.png\" title=\"Summermoon - 1680x1050\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/summermoon/nocal/july-16-summermoon-nocal-1680x1200.png\" title=\"Summermoon - 1680x1200\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/summermoon/nocal/july-16-summermoon-nocal-1920x1080.png\" title=\"Summermoon - 1920x1080\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/summermoon/nocal/july-16-summermoon-nocal-1920x1200.png\" title=\"Summermoon - 1920x1200\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/summermoon/nocal/july-16-summermoon-nocal-1920x1440.png\" title=\"Summermoon - 1920x1440\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/summermoon/nocal/july-16-summermoon-nocal-2560x1440.png\" title=\"Summermoon - 2560x1440\">2560x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/summermoon/nocal/july-16-summermoon-nocal-2560x1600.png\" title=\"Summermoon - 2560x1600\">2560x1600</a></li>\n</ul></p>\n\n<p><h4 id=\"july-flavor\">July Flavor</h4>\n<p>Designed by Natalia Szendzielorz from Poland.</p>\n<figure class=\"break-out\"><a title=\"July Flavour\" href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/37726e2c-1f3f-4609-a499-bf44eab09dcb/july-16-july-flavour-full-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/02dcf5d3-db10-43f8-9d98-f1dd53e6d702/july-16-july-flavour-preview-opt.png\" alt=\"July Flavour\"></a></figure>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/02dcf5d3-db10-43f8-9d98-f1dd53e6d702/july-16-july-flavour-preview-opt.png\" title=\"July Flavour - Preview\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/july-flavour/nocal/july-16-july-flavour-nocal-540x960.jpg\" title=\"July Flavour - 540x960\">540x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/july-flavour/nocal/july-16-july-flavour-nocal-600x800.jpg\" title=\"July Flavour - 600x800\">600x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/july-flavour/nocal/july-16-july-flavour-nocal-1366x768.jpg\" title=\"July Flavour - 1366x768\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/july-flavour/nocal/july-16-july-flavour-nocal-1440x900.jpg\" title=\"July Flavour - 1440x900\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/july-flavour/nocal/july-16-july-flavour-nocal-1600x1200.jpg\" title=\"July Flavour - 1600x1200\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/july-flavour/nocal/july-16-july-flavour-nocal-1920x1080.jpg\" title=\"July Flavour - 1920x1080\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/july-flavour/nocal/july-16-july-flavour-nocal-1920x1200.jpg\" title=\"July Flavour - 1920x1200\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/july-flavour/nocal/july-16-july-flavour-nocal-2560x1440.jpg\" title=\"July Flavour - 2560x1440\">2560x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-16/july-flavour/nocal/july-16-july-flavour-nocal-2880x1800.jpg\" title=\"July Flavour - 2880x1800\">2880x1800</a></li>\n</ul></p>\n\n<p><h4 id=\"summer-heat\">Summer Heat</h4>\n<p>Designed by <a href=\"http://www.xenialatii.com\">Xenia Latii</a> from Berlin, Germany.</p>\n<figure class=\"break-out\"><a title=\"Summer Heat\" href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c76cb6d3-ba0f-4a43-9f14-0505c17e2e12/july-15-summer-heat-full-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/136465e6-74d9-45b9-a770-0ff5bb520353/july-15-summer-heat-preview-opt.png\" alt=\"Summer Heat\"></a></figure>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/136465e6-74d9-45b9-a770-0ff5bb520353/july-15-summer-heat-preview-opt.png\" title=\"Summer Heat - Preview\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/july-15/summer-heat/nocal/july-15-summer-heat-nocal-640x480.jpg\" title=\"Summer Heat - 640x480\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-15/summer-heat/nocal/july-15-summer-heat-nocal-800x480.jpg\" title=\"Summer Heat - 800x480\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-15/summer-heat/nocal/july-15-summer-heat-nocal-800x600.jpg\" title=\"Summer Heat - 800x600\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-15/summer-heat/nocal/july-15-summer-heat-nocal-1024x768.jpg\" title=\"Summer Heat - 1024x768\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-15/summer-heat/nocal/july-15-summer-heat-nocal-1152x864.jpg\" title=\"Summer Heat - 1152x864\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-15/summer-heat/nocal/july-15-summer-heat-nocal-1280x720.jpg\" title=\"Summer Heat - 1280x720\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-15/summer-heat/nocal/july-15-summer-heat-nocal-1280x800.jpg\" title=\"Summer Heat - 1280x800\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-15/summer-heat/nocal/july-15-summer-heat-nocal-1280x960.jpg\" title=\"Summer Heat - 1280x960\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-15/summer-heat/nocal/july-15-summer-heat-nocal-1280x1024.jpg\" title=\"Summer Heat - 1280x1024\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-15/summer-heat/nocal/july-15-summer-heat-nocal-1366x768.jpg\" title=\"Summer Heat - 1366x768\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-15/summer-heat/nocal/july-15-summer-heat-nocal-1400x1050.jpg\" title=\"Summer Heat - 1400x1050\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-15/summer-heat/nocal/july-15-summer-heat-nocal-1440x900.jpg\" title=\"Summer Heat - 1440x900\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-15/summer-heat/nocal/july-15-summer-heat-nocal-1600x1200.jpg\" title=\"Summer Heat - 1600x1200\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-15/summer-heat/nocal/july-15-summer-heat-nocal-1680x1050.jpg\" title=\"Summer Heat - 1680x1050\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-15/summer-heat/nocal/july-15-summer-heat-nocal-1680x1200.jpg\" title=\"Summer Heat - 1680x1200\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-15/summer-heat/nocal/july-15-summer-heat-nocal-1920x1080.jpg\" title=\"Summer Heat - 1920x1080\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-15/summer-heat/nocal/july-15-summer-heat-nocal-1920x1200.jpg\" title=\"Summer Heat - 1920x1200\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-15/summer-heat/nocal/july-15-summer-heat-nocal-1920x1440.jpg\" title=\"Summer Heat - 1920x1440\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/july-15/summer-heat/nocal/july-15-summer-heat-nocal-2560x1440.jpg\" title=\"Summer Heat - 2560x1440\">2560x1440</a></li>\n</ul></p>\n\n\n\t<div class=\"promo-newsletter--newsletter promo-newsletter--article\">\n    <div class=\"meow__content--inlined\">\n      \n\n<div class=\" promo-newsletter--newsletter\">\n\n<div class=\"promo-newsletter\">\n<div class=\"promo-newsletter-image-wrapper\">\n  <a href=\"/the-smashing-newsletter/\" class=\"promo-newsletter-image-link\">\n    <img src=\"/images/smashing-cat/cat-with-slippers.svg\" width=\"180\" height=\"235\" loading=\"lazy\" class=\"promo-newsletter-image\" alt=\"With Smashing Newsletter, it always feels like home. A cat with slippers reading the newsletter edition.\"/>\n  </a>\n</div>\n<h2 class=\"h2 promo-newsletter-title\">Smashing Newsletter</h2>\n<p class=\"promo-newsletter-description\">Every second Tuesday, we send a <a href=\"https://www.smashingmagazine.com/the-smashing-newsletter/\">newsletter</a> with useful techniques on front-end and UX. Subscribe and get <strong>Smart Interface Design Checklists PDF</strong> in your inbox.</p>\n\n<div class=\"promo-newsletter-form-wrapper\">\n  <div class=\"nl__form-wrapper\">\n  <form method=\"POST\" action=\"//smashingmagazine.us1.list-manage.com/subscribe/post?u=16b832d9ad4b28edf261f34df&amp;id=a1666656e0\" class=\"nl__form\">\n    <div class=\"input-wrapper \">\n      <label for=\"email\" class=\"form__field js-form-field form__field--floating nl__form__content \">\n        <span class=\"form__field__label\">Your <span class=\"form__field__label--extra\">(smashing)</span> email</span>\n        <input autocomplete=\"off\" class=\"form__field__input \" type=\"email\" pattern=\"(.+)@(.+){2,}\\.(.+){2,}\" name=\"EMAIL\" id=\"email\" required/>\n      </label>\n      <button\n      data-event-category=\"Button\"\n      data-event-action=\"click\"\n      data-event-label=\"Newsletter Box\"\n      type=\"submit\"\n      class=\"btn btn--medium  btn--green btn--promo-newsletter   ladda-button ladda-button--fixed\"\n      data-style=\"expand-right\"\n\t\t\tonclick=\"this.form && this.form.submit()\"\n\t\t\tvalue=\"Submit\"\n\t\t\t>\n        <span class=\"ladda-label\">\nSubscribe <span class=\"nl__form__arrow\">→</span>\n          <wbr></span>\n          <span class=\"ladda-spinner\"></span>\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n\n  <small class=\"promo-newsletter-caption\">\n  Front-end, design and UX. Sent 2× a month. <br/>You can always unsubscribe with just one click.</small>\n\n</div>\n</div>\n    </div>\n  </div>\n    \n\n              </article>\n            </body>\n          </html>\n        ",
      "content": "The smell of rain after a hot day, watching the moon rise on a summer night’s sky, going for a swim — often it’s the simple experiences that inspire us and that we treasure most. No matter what July will have in store for you this year, our new batch of wallpapers is bound to cater for some colorful inspiration along the way.\nMore than nine years ago, we started out on this wallpapers adventure to bring you beautiful and inspiring wallpapers every month.",
      "contentSnippet": "The smell of rain after a hot day, watching the moon rise on a summer night’s sky, going for a swim — often it’s the simple experiences that inspire us and that we treasure most. No matter what July will have in store for you this year, our new batch of wallpapers is bound to cater for some colorful inspiration along the way.\nMore than nine years ago, we started out on this wallpapers adventure to bring you beautiful and inspiring wallpapers every month.",
      "guid": "https://www.smashingmagazine.com/2020/06/desktop-wallpaper-calendars-july-2020/",
      "isoDate": "2020-06-30T09:00:00.000Z"
    },
    {
      "creator": "Drew McLellan",
      "title": "Smashing Podcast Episode 19 With Andy Bell: What Is CUBE CSS?",
      "link": "https://www.smashingmagazine.com/2020/06/smashing-podcast-episode-19/",
      "pubDate": "Tue, 30 Jun 2020 05:00:00 +0000",
      "author": "Drew McLellan",
      "content:encoded": "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2020/06/smashing-podcast-episode-19/\" />\n              <title>Smashing Podcast Episode 19 With Andy Bell: What Is CUBE CSS?</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>Smashing Podcast Episode 19 With Andy Bell: What Is CUBE CSS?</h1>\n                  \n                    \n                    <address>Drew McLellan</address>\n                  \n                  <time datetime=\"2020-06-30T05:00:00&#43;00:00\" class=\"op-published\">2020-06-30T05:00:00+00:00</time>\n                  <time datetime=\"2020-06-30T05:00:00&#43;00:00\" class=\"op-modified\">2020-07-10T03:35:48+00:00</time>\n                </header>\n                \n\n<p><a href=\"https://twitter.com/hankchizljaw\"><img style=\"float: right; padding: 1em;border-radius: 110px;max-width: 50%;height:auto\" src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f1bed031-d5bd-4aaf-884e-b0f4a1e20d84/andy-bell-200x200.jpg\" width=\"200\" height=\"200\" alt=\"Photo of Andy Bell\" /></a>Today, we’re talking about CUBE CSS. What is it, and how does it differ from approaches such as BEM, SMACSS, and OOCSS? I spoke to its creator, Andy Bell, to find out.</p>\n\n<iframe src=\"https://share.transistor.fm/e/48300fa4/dark\" width=\"100%\" height=\"180\" frameborder=\"0\" scrolling=\"no\" seamless=\"true\" style=\"width:100%; height:180px;\"></iframe>\n\n<h3 id=\"show-notes\">Show Notes</h3>\n\n<ul>\n<li><a href=\"https://piccalil.li/cube-css/\">CUBE CSS</a></li>\n<li><a href=\"https://piccalil.li\">Piccalilli</a></li>\n<li><a href=\"https://piccalil.li/course/learn-eleventy-from-scratch/\">Learn Eleventy From Scratch</a> - save 40%!</li>\n<li><a href=\"https://twitter.com/hankchizljaw\">Andy Bell</a> and <a href=\"https://twitter.com/piccalilli_\">Piccalilli</a> on Twitter</li>\n</ul>\n\n<p><strong>Note</strong>: <em>Listeners of the Smashing Podcast can save a whopping 40% on Andy’s <a href=\"https://piccalil.li/course/learn-eleventy-from-scratch/\">Learn Eleventy From Scratch</a> course using the code <code>SMASHINGPOD</code>.</em></p>\n\n<h4 id=\"weekly-update\">Weekly Update</h4>\n\n<ul>\n<li>“<a href=\"https://www.smashingmagazine.com/2020/06/vitruvius-web-design/\">What Vitruvius Can Teach Us About Web Design</a>”<br />\n<em>by Frederick O’Brien</em></li>\n<li>“<a href=\"https://www.smashingmagazine.com/2020/06/introduction-swr-react-hooks-remote-data-fetching/\">An Introduction To SWR: React Hooks For Remote Data Fetching</a>”<br />\n<em>by Ibrahima Ndaw</em></li>\n<li>“<a href=\"https://www.smashingmagazine.com/2020/06/web-designers-help-restaurants-digital-experiences/\">How Web Designers Can Help Restaurants Move Into Digital Experiences</a>”<br />\n<em>by Suzanne Scacca</em></li>\n<li>“<a href=\"https://www.smashingmagazine.com/2020/06/practical-guide-testing-react-applications-jest/\">A Practical Guide To Testing React Applications With Jest</a>”<br />\n<em>by Adeneye David Abiodun</em></li>\n<li>“<a href=\"https://www.smashingmagazine.com/2020/06/django-highlights-wrangling-static-assets-media-files-part-4/\">Django Highlights: Wrangling Static Assets And Media Files (Part 4)</a>”<br />\n<em>by Philip Kiely</em></li>\n</ul>\n\n<h3 id=\"transcript\">Transcript</h3>\n\n<p><span class=\"smashing-tv-host\">Drew McLellan:</span> He is an educator and freelance web designer based in the U.K. and has worked in the designer web industries for well over a decade. In that time he’s worked with some of the largest organizations in the world, like Harley-Davidson, BSkyB, Unilever, Oracle, and the NHS. Alongside Heydon Pickering, he’s the co-author of Every Layout, as well as running Front-End Challenges Club which is focused on teaching front-end development best practice via short, fun challenges.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> His latest venture is Piccalilli, a website newsletter with tutorials and courses to help you level up as a front-end developer and designer. So we know he’s an experienced developer and educator, but did you know he was the first person allowed to compete at Crufts with a panda?</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> My Smashing friends, please welcome, Andy Bell. Hi, Andy, how are you?</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy Bell:</span> I’m smashing, thanks. How are you?</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> I’m very good, thank you very much. Now I wanted to talk to you today about something that you posted on your site, Piccalilli, about a CSS methodology that you’ve developed for yourself over recent years. First of all, I guess we should probably explore what we mean by a CSS methodology because that could mean different things to different people. So when you think of the CSS methodology, what is it to you?</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> That’s a good, hard question to start with, Drew. Appreciate that, thank you!</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> Welcome!</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> It’s a tricky one. So, for context, I’ve used BEM for a long time, and that is Block Element Modifier. That’s been around for a long time. The way that I look at a CSS methodology is, it’s not a framework, it’s an organization structure. That’s how I like to see it. It’s like a process almost. It’s like you’ve got a problem that you need to solve with CSS and you use the methodology to solve it for you and keep things predictable and organized. BEM’s just legendary for that because it’s been wildly successful.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Then you could almost qualify things like the style components and that sort of thing. You can almost say that they’re methodology orientated even though they’re a bit more framework entwined, but still, it’s a methodology of breaking things into tiny molecules. So essentially that’s what I’m trying to do with CUBE CSS as well. A thinking structure, I think I described it as.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> So it’s an application of process for how you architect and you write CSS, and it’s not so much anything that’s based on tools or any other sort of technology, it’s just a sort of work flow. So there’s lots of different approaches out there. You mentioned BEM. There’s SMACSS, OOCSS, Atomic CSS. And then you’ve got these sort of unusual lovechild approaches like ABEM. Have you seen that one?</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Yeah.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> Why publish your own?</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Yeah, yeah. Why make your own? That’s a very good question. I think those who know me well know I like to sail against the tide a lot. It’s mainly because I tend to do lots of varied projects as well, in varied teams. So it’s very hard, I’ve found, to work with BEM with a traditional developer because they’re used to using CSS for what CSS is all about: the cascade, et cetera, and that’s why I sort of stole that from the language.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> On the other flip side is that less structured methodologies, it’s harder to work with a programmer, JS sort of person because they like structure and organization and small components, which is understandable working with the language that they work in.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> So I found myself in these positions where I was working with different types of people, different types of projects where one methodology wasn’t quite working. Over the years, I’ve just been playing around with this idea of how things go, and then there’s the stuff me and Heydon did, Every Layout, which sort of enforced the big part of it, which is the C, the composition part, and then I’ve just sort of evolved it very rapidly over the last six months.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> The only reason I wrote an article about it was because I was just doing this course and I thought I’d better write some supplementary material to go with it so people understand it, and it’s absolutely blown up. So maybe we’re not over methodologies quite yet, Drew.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> So the course material that you’ve been putting together actually uses CUBE CSS as its methodology, does it?</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Yeah. So a good 50% of the course is actually front-end, even though it’s a course unlimited. It’s so, so deeply entwined in the way that we build the front-end that I couldn’t just say, &ldquo;Oh, by the way, this is how I write a nice CSS,&rdquo; and then leave it. I know people like to get into the detail, so I was like, what I’ll do is, I’ll write this post that’s really long and really detailed and then if someone wants to skill up and really understand what we’re doing, then they can do, and the rest is from there. And here we are today, Drew, sitting and chatting about it.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> So if somebody already understands BEM and is maybe already using BEM, as an example, because that’s probably one of the widest adopted methodologies, isn’t it? So if they’ve already got an understanding of BEM and they’re coming to CUBE, is that something that they would find easy to adopt? Are there many similarities or is it completely different?</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Yeah. I’d say going from BEM to CUBE is probably a smooth transition, especially the way I like to still write the CSS for CUBE. So the majority of stuff’s happening at a higher level. So it’s happening at the cascade level and it’s happening global CSS, using the utilities to do a lot of the stuff. But when you come into the nuts and bolts of it, it’s very BEM-like components, blocks and elements. The only thing that’s sort of different from BEM is, instead of having modifiers, we use this thing called exceptions instead which is, instead of using CSS classes, it turns to data attributes, which I think gives a nice bit of separation and a real exception, which is what a modifier should be.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Part of the reason why I’ve sort of sailed away from BEM was because I found the way I was working with it, especially in design systems, was modifiers were dominated and it became a problem because it was like, what is the role of my block at this point? Because if I’m modifying it to the point where it’s unrecognizable regularly, then is this methodology still working how it’s supposed to work?</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Then there’s the whole design token stuff, the stuff that Jina did with the Lightning Design System which we’ve all started adopting now. The utility class stuff really started to make sense with that approach. So I just sort of smushed all the things I like about other people’s work and slotted into my own instead.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> You talk about with BEM, the sort of modifier approach kind of getting out of control. Was that one of the main pain points with BEM that CUBE tries to address?</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Yeah, absolutely. I do like the modifier approach with BEM, it does make sense. What I like about BEM is something that I still do, is the double underscore for an element, and then there’s the double dash for a modifier. I like that way of organizing things. It was just a case of okay, well, a lot of the modifiers I can actually account for with utility classes and then the other bits&hellip;</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> So the example I use in the article is, imagine you’ve got a card and then the card is flipped, so the content appears before the image. So then that makes sense, to see display: flex and then you reverse it, reverse the order. That makes sense, to have an exception rule for that because it’s an exception of the card’s default state, and that’s how I like to see it. It’s like an affected state on that component, is what an exception is, and that makes sense.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> With a lot of the stuff that I’ve done more recently, the modern front-end stack with reactive JavaScript, there’s a lot of state changing and it’s makes sense to handle it appropriately between CSS and JavaScript because they are becoming more and more entwined with each other, whether you like it or not. It’s a common language for them. As you can see by my face, very much not, but there you go. You’re probably thinking, &ldquo;Actually, I’ve been working with react quite a lot recently, so I’m the other way round.&rdquo; So I can see that as well.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> So let’s get into CUBE then. So CUBE stands for Composition Utility Block Exception. Is that right?</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Yeah. That’s the one.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> What on Earth does that mean?</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Oh, mate, you should have heard it before! I was doing a talk last year. I did a talk, and it was called Keeping it Simple with CSS that scales, and in there I sort of introduced an earlier version of it called CBEUT, which was Cascade Block Element Utility Token. It was rubbish. I hated the name of it. I did it a couple of times, this talk last year, and I really didn’t like the name. Then when I came to doing this stuff this year, I thought, &ldquo;I really need to think about what it actually is and what it’s called.&rdquo; I think CUBE is a little less rubbish. I think that’s the best way I can describe it.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> But then, names are always rubbish for these things, aren’t they? I mean, like BEM, what a rubbish name that is! But we all do it. Look at Jamstack: that’s a terrible name as well, isn’t it?</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> My lips are sealed!</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Your boss is going, &ldquo;What?&rdquo; It’s true. It’s just the way it is, isn’t it, in our industry.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> It seems that a lot of the CSS methodologies try and work around some of the features of CSS, things like the cascade. My understanding from what I read is, CUBE tries to make use of those sort of features and properties of CSS.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Yeah. A good analogy for it is SCSS, like Sass, is an extension of the natural CSS language, isn’t it? You’re pretty much right in CSS still. So CUBE CSS is like that. So it’s an extension of CSS. So we should still write CSS, as CSS should&hellip; well, it’s supposed to be written. Let’s be honest, that how it’s supposed to be written, is the name gives it away: Cascading Style Sheets. So it’s embracing that again because what I’ve found is that I’ve gone all the way down to the micro-optimization level. I’ve been down the path that I see a lot of people going down recently where&hellip; and I’ve mentioned this in the article as well, where I can see&hellip; there’s some evidence of it recently. I’ve spotted people have been creating spacer components and stuff like that, and I understand that problem, I’ve been in that situation.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> The way I fixed it was, instead of drilling down and trying to micro-optimize, I actually started thinking about things on a compositional level instead because it doesn’t matter how small your components are, at some point they’re going to be pages, they’re going to be views. You cannot avoid that, that’s how it’s going to be. So instead of trying to say, &ldquo;Right, I need these tiny little helpers to do this layout,&rdquo; you say, &ldquo;Right, I’ve got a contact page view, or a product page view, and that’s a skeletal layout composition. Then inside of that I can slot whatever components I want in there.&rdquo; We’ve got things like Grid and Flexbox now which make that much more achievable, and you can essentially put whatever you want inside of the skeletal layout, it doesn’t matter. Then the components should, at that point, behave how you want them to behave, with or without container queries.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> This is the composition part of CUBE where you’re looking at things at more of a macro level, looking at how components can be composed into a view to create the sort of pages that you need to create for a site or an app or what have you.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> So it’s creating rules, essentially. It’s like guidance. It’s trying to get guidelines for something. It’s not like a strict rules, like, you should do this, you should do that. That’s essentially what you’re doing with the browser, with this methodology, is you’re saying&hellip; you’re not forcing it to do anything. You’re saying, &ldquo;Look, ideally, if you could lay it out like this, that would be great, but I understand that that might not be the case so here’s some bounds and some upper and lower levels that we can work with. Do what you can, and cheers.&rdquo; Then you just chuck some components at it and let it just do what it does. You add enough control in there for it to not look rubbish.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> So a good example would see&hellip; we do a layout in Every Layout called the switcher, which essentially will in-line items until a certain point where the calculation that works out how wide it should will just stack them on top of each other. But because we add margin to the in-line and the block, it works, regardless of what the state of it is, it still looks fine. That’s the idea, is that we’re not telling the browser to say, &ldquo;You must layer this three column grid out.&rdquo; We’re saying, &ldquo;If you can layer a three column grid out, do it. Otherwise, just stack and space instead.&rdquo; So it’s that sort of methodology, of letting the browser do its job really.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> Many of the different approaches that have come along for CSS over the last few years have very much focused on the component level of dealing with everything like it’s a component. CUBE doesn’t downplay that component aspect so much, it just gives this extra concept over the top of taking those components and composing them into bigger layouts, rather than just saying the layout’s just another component.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Yeah, that’s a good point, yeah. I think the thing to say about components is they’re important, especially in modern front-end stuff. We do a lot of component stuff, system stuff. But the way I see a component is, it’s a collection of rules that extend what’s already been done.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> The point I make in the article is, by the time you get down to the block level, most of your styling has actually been done, and really what your component is doing is dotting the Is and crossing the Ts and it’s saying, &ldquo;Right, in this context&hellip;&rdquo; So for a card, for example, make the image have a minimum height of X, and add a bit of padding here. Do this, that and the other. Put a button here. It’s just sort of additional rules on top of what’s already been inherited from the rest of the CSS. I think that’s probably the best way to describe it.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Whereas in BEM, the component is the source of truth. Until you put that class on the element, nothing has been applied at that point, and that method works. I just found I wrote more CSS by doing that, and more repetitive CSS, which I don’t like doing.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> Would you consider the typography and the colors and the vertical rhythms, spacing, and all of that, is all that part of the idea of composition in this model?</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Yeah. In a global CSS, yeah, absolutely. The vertical rhythm especially, and the flow. We did an article on that at 24 ways, didn’t we, a couple of years ago, the flow and rhythm component. That was a sort of abstract from this approach as well, where you set a base component which essentially uses the lobotomized owl selector. I don’t know how I’m going to describe that on the radio, but we will. We’ll just put, I think, in the show notes about the Heydon article or something. But essentially that, it selects child elements&hellip; sorry, sibling elements.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> So it says, &ldquo;Right, every element that follows element X have margin top of CSS costs and property value,&rdquo; and then the beauty of that is then you can set that CSS custom property value on a compositional context as well. So you can say, &ldquo;Right, in this component, if there’s some flow on the go, we’ll set flow space to actually be two rem because we want it to be nice and beefy, the wide space.&rdquo; Then in another one you might say, &ldquo;Actually, I want flow space to be half a rem because I want it to be tight.&rdquo; This is all happening, all the control is coming from a higher level and then what you’re doing is, you’re adding contextual overrides rather than reinventing it each time, reinventing the same thing over and over again.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> So that’s the C, Composition. Next we’ve got U, which is Utility. So what do we mean by utility?</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> So it’s a class that does one job, and it does it really well. That could be an implementation of a design token which&hellip; it’s an abstract of properties. Usually it’s colors or typography styles, sizing, and rules like that. The idea is you generate utility classes that apply those. So you’ve got a utility that will apply background primary, which is like the primary color, and then color primary, which is the text color. Then you might generate some spacing tokens for marginal padding, and all those sorts of things. They just do one job. They just add that one spacing rule, that one color rule, and that’s it.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> But then you’ve got other utilities as well. So a good example is a wrapper utility. What that will do is, it will put a maximum width on an element and then it will put left and right auto margin to sit it in the middle of the thing. So it’s just got one job, and it’s just doing it efficiently and well.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> So you’ve got your global styles, you’ve done a lot of your typography settings and a lot of your flooring space. Your composition’s then giving context and layout. Then utilities are applying tokens directly to elements to give them those styling that you need. So like a heading, for example, you’re saying, &ldquo;I want this to be this size and I want it to have this lead in, and I want it to have this measure.&rdquo; Then at that point&hellip; this is what I was saying about the blocks&hellip; then you go further down the stack, and you’ve already done most of the work at the point.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> So they give you this really efficient way of working, and because HTML sort of streams down the pipe as well, it’s really nice to abstract the workload onto HTML rather than CSS as well, I’ve found. I used to really get into utility classes, like in this sort of old curmudgeon style of, &ldquo;Oh, separation of concerns,&rdquo; but I actually think it’s a really decent way of working. I mention in the article that I actually like Tailwind CSS. I think it does work, and I really like using it for product typing because I can really put something out really quick. But I think it just goes a little bit too far, does Tailwind, whereas I like to rain it in when it goes beyond just applying a single rule on a class. So that’s it, I think. Do you?</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> So, yeah, you talk in the article a lot about design tokens, which is something that we’ve talked about on the Smashing Podcast with Jina Anne back in episode three, I think it was. So it sounds like design tokens are a really fundamental aspect.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Yeah. Oh, God, yeah. I remember so vividly when Jina was doing the Lightning Design System stuff because I was building a design system at the time, or something that resembled a design system, and we were struggling to get executive approval of it. When the Lightning Design System came out, I literally just sent them link after link and I said, &ldquo;This is what we’re doing. We’re building a design system. This is what Salesforce are currently using it for.&rdquo; I remember her work at the time actually helped me to get stuff through the door.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Then the design token stuff has always stuck with me as being a really good way of applying these rules. Because I’m a designer by trade, so I can just sort of see that organization and the ability to organize and create a single source of truth being really useful because it’s something we’ve not really had in digital design, especially in the Adobe era of working with Photoshop and stuff, we just didn’t have that luxury. We had it in print with the Pantone Book but we didn’t have it in digital with random hex codes all over the shop.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> So it’s just great. I love that level of control. Actually, I think it aids in creativity because you’re not thinking about unimportant stuff anymore, you’re just thinking about what you’re doing with it.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> Does the implementation of those design tokens matter particularly with the approach? Is it always CSS custom properties?</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> I think that’s a really important point with CUBE. Some of the responses I’ve had, people have struggled with this a little bit. There’s no mention of technology in it whatsoever. The only technology that’s consistent is CSS. You can do it however you want. You could do all this with whatever CSS and JS things people are doing now, or you could it with just Vanilla CSS. You could do it with Sass. I do it with Sass. Less, if that’s what you’re still doing. All these available technologies, post CSS, all these things. You can do however you want to do it, it doesn’t matter.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> The idea is that if you follow those sort of constructs, you’ll be fine. That’s the idea behind it. It’s a very loose and not strict as some of the methodologies are. I’ve seen it with BEM especially, people get really ingrained in the principles of BEM to the point where it’s like you’re not even solving the problem anymore. I think that you’ve got to be flexible. I said it in this talk last year. I was like, &ldquo;If you stick to your guns too tightly, you can actually cause problems for yourself in the long run because you try and follow a certain path, and you know it’s not working anymore.&rdquo; You should always be flexible and work with a system rather than working to the letter to it.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> So the B, the B is Block. You’ve talked about this idea, that by the time you get down to the block level, most of everything should be in place, and then the block level styling is only really concerned with the actual very detail of a particular component. Generally, is the concept of a block similar to what people will be familiar with?</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Oh, absolutely, yeah. So imagine your BEM component and take all the visual stuff out of it, and that’s what you’re left with, essentially, the block. This is what I struggled to articulate when I first started thinking of this methodology. A block is actually really a C, it’s a composition, but that makes it really difficult because you’re into recursive territory there and I think people’s brains would explode. But really that’s what a block is, it’s actually another compositional layer but more of a sort of strict context, so like your card, your button, your carousel, if that’s what you like doing still, and all that sort of stuff.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> It’s like a specific thing, a component, and then inside of there you’re setting specific rules for it to follow, really ignoring the rest so you’re not&hellip; You might apply tokens in the blocks, and I do do that still, but really it’s more layout orientated, is a block, as far as I work with them, or at least taking the token and applying it in a specific way, like a button hover status, stuff like that. So really your block should be tiny by the time you get down to them, they shouldn’t be really doing much at all.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> So it could be as small as a hyperlink.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Yeah.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> But it could also be a compound collection of other blocks?</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Yeah. Like a module sort of thing. You could definitely do that. Because, again, that goes back to the sort of compositional aspect of it, is that whatever goes in it shouldn’t matter. The good example of that is like the card. So the content of a card is, say, like a heading, a summary and a button. You shouldn’t really be specifically targeting those three elements. You should be saying, &ldquo;Look, anything that happens to find itself in content, have some flow rules in there and have some sort of compositional layout rules,&rdquo; and then it doesn’t matter what you put in there. You might decide that you want to put an image in that content thing and it should just work, it should just look fine.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> That’s the whole point of working with CSS. It’s a very forgiving way of working with CSS. You’re making your life a lot easier by being less rigid because when stuff accidentally finds itself in something, which it will, it doesn’t look horrific as it could do if you were being more specific about things, is what I’ve found.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> I definitely need a lot of forgiveness around my CSS!</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> I know you do!</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> Cheers! So that’s the B. The last thing is E: E is Exception. Now we’re not talking about error messages, are we?</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> No, no. It’s a sort of-</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> We’re not talking about JavaScript exceptions.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Yeah, yeah. There should be none of that at this point. I should hope not anyway, otherwise you really are in the woods at that point: I don’t think I’m going to be able to help you! The whole idea of this is&hellip; so you’ve created the context with your block, and an exception is exactly that, it’s like an exception to the rule: so a flipped card, or it might be a ghost button. So you know those buttons that have just got a border and a transparent background? That would be an exception because a button has probably got a solid background color and then the label color. So it’s creating a sort of distinct state of variation.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> The reason why I do this with data attributes instead of classes, and the reason why that is is because a) I think it’s nice to have a distinction. So when you’re scanning through lots of HTML, you can see data, hyphen something, you’re like, &ldquo;Right, okay, something has definitely changed on this element.&rdquo; The other thing is that it’s very nice to give JavaScript access to that state, and vice versa as well. So I really like applying state with data attributes in JavaScript. I think that is essentially what they’re for, a sort of communication layer. The harmony between them seems to work really well.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> So a good example is, say you’ve got a status message and then JavaScript will add data state is either success, error or information, or something. You can then hook into that with your exception styles in CSS. So you know that’s an exception of the status component and it’s going against its default state. So it’s just a really handy way of working with things. It’s predictable on both ends: it’s predictable on the CSS end, and it’s predictable on the JavaScript end as well.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> I guess it’s quite nice that something that class names don’t give you is a property and value. So if you want to have something like that which is the state, and it can either be success or failure or warning or what have you, you can specifically address that state property and flip its value. Whereas with a big long list of class names, if you’re manipulating that in JavaScript, for example, you’re going to have to look at each one of them and add that business logic in there that says, &ldquo;I can only set one of these,&rdquo; and what happens if two of those classes are applied to the same element? You can’t get that with a data attribute, it only has one value.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Yeah. That’s a good way of saying that, yeah. It is very helpful, I’ve found, to work like that.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> That’s quite interesting. I don’t think I’ve seen any other methodologies that take that approach. Is that completely unique to CUBE, doing that?</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> It might be. I don’t really pay much attention to other stuff, which I should do. Someone else is probably doing that. I’ll tell you now, it’s been the most controversial aspect of it. Some people really did not like the idea of using data attributes. The thing is as well, and how I respond, is, do what you want. We’re not telling you to do things in a certain way, it’s just suggestions. If you want to do exceptions to CSS classes, like modifiers, then knock yourself out. The CUBE police aren’t going to come knocking at your door. It’s absolutely fine.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> The CUBE thing is a thinking thing, it’s a structure. You apply that structure however you want to apply it, with what tooling you want, or whatever technology you want. As long as you keep things consistent, that’s the important thing.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> So there’s no such thing as pure CUBE?</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> The way I write it is pure CUBE, Drew. Everyone else is just a fake, it’s just a weak immitation.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> Apart from to you, no-one can say, &ldquo;That isn’t textbook CUBE.&rdquo;</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> No, that’s it. No-one can dispute that really, can they? So, yeah, I’ll go with that. Gives you a bit of clout or something, I think, something like that.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> Can you mix and match a CUBE approach with other methodologies? Can you use bits of BEM?</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Yeah, I reckon so. I’ve been thinking about it a little bit because I’m going to do some more stuff on it soon because it’s become quite popular, so people will want more work. One thing I’m going to look at is how to approach using the CUBE methodology with something existing.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> So there’s two opposite ends of the scale. A good question that people have asked is: &ldquo;How does this work with every layout, the other stuff?&rdquo; I’m like, basically, every layout is the C. That’s what every layout is, it’s the compositional layer. Then someone else asked, &ldquo;Well, how would this work with something like Atomic Web Design, like their stuff that Brad Frost did? It’s like, well, you could break those pieces up and apply them at each level. Atomic Design goes all the way down into the micro detail. It’s abstracting that into using, right, okay, well I can apply this with utilities, so the molecules, I think. I can apply that with the utilities, and it’s translating what you know already into this slightly different structure of working.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Really, it’s a renaming for a lot of things. I’ve not invented anything here, I’ve just sort of, like I say, I’ve just stolen things that I like. I love the way that some of the Atomic Design stuff is thought about. That’s really some smart work. And BEM. The stuff Harry did, the Inverted Triangle CSS, I thought that was really cool. So I’ve just sort of nicked bits that I like from each one of them and sort of stitched them all together into this other hybrid thing, approach. More to come, I think.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> Can the CUBE approach be applied to existing projects that already have CSS in place or is it something you really need to start on a fresh project with?</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> That very much depends. So if you’ve got like a bootstrap job and it’s just got thousands of lines of custom CSS, that I’ve definitely been involved in before, then I think you might be trying to put a fire out with a bottle of water at that point. But if you&hellip; say, for instance, if you’ve got a rough BEM setup and it’s gone a bit layer-y, you could use CUBE to refactor and actually pull it back into shape again.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> It depends, the answer to that one. But it’s doable, as with everything. If you really want it to work, Drew, you can do it if you want, can’t you? The world is our oyster!</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> Especially if your BEM site’s gone layer-y.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Yeah. Nothing worse than a layer-y BEM site!</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> I’ve noticed in the examples that you’ve given&hellip; and I’ve got an eagle eye, I’ve seen you’ve been doing this for a while&hellip; a lot of your class values in the HTML attribute are wrapped in square brackets.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Oh, God, yeah. Tell you what, Drew-</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> What is that about? What is that about?</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> I’ll tell you what, if there’s ever one thing that I’ve done in my whole career that’s just been absolutely outrageously controversial&hellip; and you follow me on Twitter, you’ve seen what comes out of my mouth&hellip; it’s those bloody brackets! My, God! People either love them or hate them. They’re Marmite, they are.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> The reason I do them is a grouping mechanism. So if you look at the way that they’re structured, the way I do it is, block at the start and then I’ll do a utilities after that. Then what I might do is, in between a block group and a utility group, there might be another block class. So a good example of that would be&hellip; we’ll go back to the card again. But then say that there’s a specific block called a CTA, like a call to action. You might have that applied to the card as well, and then your utilities are enforcing the design attributes, so the colors and all that business. So then you’ve got three groups of stuff.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> When you come to it, if you’ve got that order in your head each time, you know, okay, right, this first group’s blocks. Oh, that’s looks like another block. I’ve got that one. Then it’s like, right, they’re definitely utility classes. Then what I might even do is, if there’s a lot of design token implementation, have that in a separate group. So it’s just very clear what each group is doing, and there’s a separation inside of the classes there as well. I’ve found it really helpful. Some people find it incredibly offensive. It’s definitely a do it if you want to do it. Definitely you don’t have to do it.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> It’s quite funny, when I published that article, so many people finished halfway through to ask me, &ldquo;What is it with these brackets?&rdquo; I was like, &ldquo;Did you finish the article? Because there’s a big section at the end where it explains exactly what they’re doing,&rdquo; to the point where I actually had to write a bit in the middle of the article of, &ldquo;If the brackets are essentially doing your head in, click here and I’ll skip you all the way down to that explanation bit so you can just read about them.&rdquo; It can be quite controversial.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> When I’ve worked on really, really complex front-ends&hellip; and we did a little bit of stuff together, didn’t we, last year?</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> Yeah.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> You’ve seen the sort of design implementation on that project that we were on. It requires that sort of grouping because there’s just so much going on at the time, there’s so much different stuff happening. I’ve just found it really, really useful over the years, and also get lots of questions about it, to the point where I was almost going to write just one page on my website that I could just fire people to to answer the question for them.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> Slash, what’s with the brackets?</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Yeah. Slash, brackets. Have you seen that new Hey Email thing that’s just come out? They’ve bought a domain of itsnotatypo.com, just to answer the whole Imbox, like im with an M rather than an in. Basically, I was like, &ldquo;I think I need to do that,&rdquo; like, whatswiththebrackets.com, and just do a one-pager about it.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> It strikes me that the approach with brackets actually could be something that might be useful when using things like Tailwind or something that has a lot of classes because that can-</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Yeah. Oh, God, yes.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> You have classes that are addressing your break points and what have you, and then you’ll have things that are for layout, things that are for color or type, or what have you. So it might also be a useful way of dealing in situations like that.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> I’d definitely agree with that. A good analogy&hellip; not analogy. A good bit of info about Tailwind is that I actually quite like Tailwind. I’ve used that on very big projects. The one thing that really opened my eyes to Tailwind though was when I saw a junior developer try to work out what was going on, and it was really, really eye-opening because they just didn’t have a clue what was happening.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> I think that’s one problem I’ve found with these sort of over-engineered approaches, which I think it’s fair to say Tailwind is, is that there’s a certain skill level that is required to work with it. I know the industry tends to have an obsession with seniority now, but there’s still people that are just getting into the game that we need to accommodate, and I think having stuff that’s closer to the language itself is more helpful in those situations because they’re probably learning material that is the language as it is. So I think it’s just a bit more helpful. Especially having a diverse team of people as well. Just food for thought for everyone.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> People might look at all the different methodologies that are out there and say, &ldquo;This is evidence that CSS is terrible and broken, that we need&hellip; all these problems have to be solved by hacking stuff on top. We need tools to fix bits of CSS. We need strict procedures for how we implement it, just to get it to work.&rdquo; Should the platform be adapting itself? Do we need new bits of CSS to try and solve these problems or are we all right just hacking around and making up funny acronyms?</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> I think the power of CSS, I think, is its flexibility. So if you’re going to program CSS, a lot of the knowledge is less of the syntax and more of the workings of a browser and how it works. I think that might be a suggestion, that the problem is that people might not have learnt CSS quite as thoroughly as they thought they might have learnt it, who created these problems. I’ve seen that in evidence myself. I spotted a spacing mechanism that had been invested, which was very complicated, and I thought, &ldquo;This person has not learnt what padding is because padding would actually fix this problem for them, understanding how padding works and the box model.&rdquo; That’s not to be snidey about it.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> We work in an industry now that moves at an even faster pace than it has done previously and I think there’s a lot less time for people to learn things in detail. But, on that front, I think CSS still does have work to do in terms of the working group, who I think do a bloody good job. A great, shining example of their work was the Grid spec which was just phenomenal. The way that rolled out in pretty much every browser on day one, I thought that was so good.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> But we’ve got more work to do, I think, and I think maybe the pace might need to increase a little, especially with stuff like container queries, we all love talking about them. Stuff like that I think would help to put CSS in a different light with people, I think. But I think CSS is brilliant, I love it. I’ve never had a problem with it in lots of years really. I do find some of the solutions a bit odd, but there you go.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> What’s the response been like to CUBE since you published the article?</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Mind-blowing. I honestly published it as just supporting material, and that’s all I expected it to be, and it’s just blown up all over the place. A lot of people have been reading it, asking about it, been really interested about it. There’s definitely more to come on it.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> I did say in the article, I said, &ldquo;Look, if people are actually quite interested in this, I’ll expand on this post and actually make some documentation.&rdquo; I’ve got bits of documentation dotted around all over the place, but to sort of centralize that, and then I was thinking of doing some workshops and stuff. So there’s stuff to go. It’s how Every Layout started as well. We both had these scattered ideas about layout and then we sort of merged them together. So something like that, I suppose, will come in the future.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> Are there any downsides that you’re aware of to using CUBE? Are there problems that it doesn’t attempt to solve?</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Yeah. This accent, Drew, it just won’t go way, no matter what I do! In all seriousness, I think CUBE’s got as close as I can get to being happy with the front-end, which is saying a lot, I think. You never know, things might change again. This has evolved over more recent years. Give it another five years, I’ll probably be struggling with this and trying something else. I think that’s the key point, is to just keep working on yourself and working on what you know and how you approach things.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> This definitely won’t work for everyone as well, I know that for a fact. I know that from my comments. I don’t expect it to work for everyone. I don’t expect anything to work for everyone. It’s the same with JavaScript stuff: some people like the reactive stuff and some people don&rsquo;t. It is what it is. We’re all people at the end of the day, we all have different tastes. It’s all about communicating with your teammates at the end of the day, that’s the important thing.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> I know you as a very talented designer and developer and you, like many of us, you’re just working on real projects all day, every day. But you’ve recently started publishing on this site, Piccalilli, which is where the CUBE CSS introduction article was. So Piccalilli is kind of a new venture for you, isn’t it? What’s it all about?</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Very kind of you to say, Drew. You’ve actually worked with me, so that’s high praise. But the Piccalilli thing is an evolution. So I’m a freelancer. I do client work, but I think this has become apparent with the pandemic, that that is not the most sustainable thing in the world in some industries. I think freelancing can be very, very tough, as a developer and designer. It’s something that I’ve been doing it for so long now, 10 years&hellip; well, 12 years now actually.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> I fancied doing something a bit different and applying the knowledge that I’ve got and actually sharing it with people. I’ve always been very open and sharing, and I wanted to formalize that. So I created Piccalilli to write tutorials, but mainly for courses that I’m producing: that’s the main meat and potatoes. And then there’s the newsletter which is&hellip; people are really enjoying the newsletter because I share cool things I’ve found on the internet every week. That’s the backbone of it. It’s just going really well. That’s essentially where I want to see myself doing more and more full-time, as the years go on, I think.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> So what’s coming next for Piccalilli? Have you got anything that you’ve got coming out?</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Thanks for the door open there, Drew! By the time this recording goes out, the first course will be live: Learn Eleventy From Scratch, and that’s where we learn how to build a Gatsby website! No, you learn how to build an Eleventy site. So you start off with a completely empty directory, there’s nothing in it, it’s empty, and then at the end of it you’ll finish up with this really nice-looking agency site. We learn all sorts in it. You learn how to really go to town with Eleventy. We pull remote data in from places. We use CUBE CSS to build a really nice front-end for it.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> If you want to get into the Jamstack and you want to get into static site generators, or just how to build a nice website, it’s just a really handy course, I hope, for that. It’s currently being edited within an inch of its life as we’re talking. It’s going to be cool, I hope, and useful. But that’s an accumulation of a lot of stuff I’ve been doing over the last couple of years. So it should be fun.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> So buy it, and I’ll do a discount code, do like smashingpod for 40% off, and you can get it when it comes out.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> Amazing. We’ll link that up. Have you figured out how to spell Piccalilli reliably yet?</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> I was on with Chris and Dave with the ShopTalk Show and I said on there, &ldquo;If there’s ever one thing you want to hire me for it’s to write Piccalilli by hand first time without even thinking about it,&rdquo; because I’ve written that word so many times that I just know exactly how to spell it off by heart. So the answer to your question is yes.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> Well, I’m still struggling, I’ll tell you that much!</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> It is hard. Oh, God. I totally empathize. It took me a long time to learn how to spell it but it’s one of those words in our vocabulary. This year I’m trying to spell necessary without making a spelling mistake!</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> So I’ve been learning all about CUBE CSS. What have you been learning about lately, Andy?</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Do you know what? This is going to surprise you, Drew. MySQL is what I’ve been learning about recently. So, basically, Piccalilli is totally self-published. It’s an Eleventy site but it’s got an API behind it, and that’s got a MySQL database behind it. The stuff that gives people content that they’ve purchased requires some pretty hefty querying. So I’ve just actually properly invested in some MySQL&hellip; especially the difference between joins, which I didn’t actually realize there was a difference between each type of join. So that’s been really useful and it’s resulted in some pretty speedy interactions with the database.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> I used to run this thing called Front-End Challenges Club and when I first launched it it just collapsed and died on itself because MySQL was shoddy to say the least. So I’ve really been learning how to do that because I’m not a backend person at all, I’m a pixel-pusher. So it’s definitely not in my remit. That’s more your neck of the woods, isn’t it? I find it really cool, MySQL. I actually really like writing it. It’s a really nice, instructional language, isn’t it?</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> It is, it’s great. I learnt SQL at school.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Wow!</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> We’re talking like 20 years ago now.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Did they have computers in those days?</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> They did, yeah. We had to wind-</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Did you have to write it by hand?</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> We had to wind them up! We did. But, I tell you, for a developer, it’s akin to learning your times tables: one of those things that seems like a bit of a chore but once you’re fluent, it just becomes useful time and time again.</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Yeah. For sure. There’s really tangible differences as well. You really see the difference in speed. I really like working with Node because that’s really fast but Node and MySQL is just&hellip; not a very common choice, but I think it’s a pretty good choice. I think it works really, really well. So I’m happy with that. As you know, I don’t like writing PHP. So that’s never going to be an option.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> If you, dear listener, would like to hear more from Andy, you can follow him on Twitter where he’s at hankchizljaw. You can find Piccalilli at piccalil.li, where you’ll also find the article describing CUBE CSS, and we’ll also add links to all of those in the show notes, of course.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> Thanks for joining us today, Andy. Did you have any parting words?</p>\n\n<p><span class=\"smashing-tv-speaker\">Andy:</span> Stay safe, and wear your mask.</p>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\">\n  <span>(il)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        ",
      "content": "Today, we’re talking about CUBE CSS. What is it, and how does it differ from approaches such as BEM, SMACSS, and OOCSS? I spoke to its creator, Andy Bell, to find out.\nShow Notes CUBE CSS Piccalilli Learn Eleventy From Scratch - save 40%! Andy Bell and Piccalilli on Twitter Note: Listeners of the Smashing Podcast can save a whopping 40% on Andy’s Learn Eleventy From Scratch course using the code SMASHINGPOD.",
      "contentSnippet": "Today, we’re talking about CUBE CSS. What is it, and how does it differ from approaches such as BEM, SMACSS, and OOCSS? I spoke to its creator, Andy Bell, to find out.\nShow Notes CUBE CSS Piccalilli Learn Eleventy From Scratch - save 40%! Andy Bell and Piccalilli on Twitter Note: Listeners of the Smashing Podcast can save a whopping 40% on Andy’s Learn Eleventy From Scratch course using the code SMASHINGPOD.",
      "guid": "https://www.smashingmagazine.com/2020/06/smashing-podcast-episode-19/",
      "isoDate": "2020-06-30T05:00:00.000Z"
    },
    {
      "creator": "Chidi Orji",
      "title": "Firebase Push Notifications In React",
      "link": "https://www.smashingmagazine.com/2020/06/firebase-push-notifications-react/",
      "pubDate": "Mon, 29 Jun 2020 13:30:00 +0000",
      "author": "Chidi Orji",
      "content:encoded": "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2020/06/firebase-push-notifications-react/\" />\n              <title>Firebase Push Notifications In React</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>Firebase Push Notifications In React</h1>\n                  \n                    \n                    <address>Chidi Orji</address>\n                  \n                  <time datetime=\"2020-06-29T13:30:00&#43;00:00\" class=\"op-published\">2020-06-29T13:30:00+00:00</time>\n                  <time datetime=\"2020-06-29T13:30:00&#43;00:00\" class=\"op-modified\">2020-07-10T03:35:48+00:00</time>\n                </header>\n                \n\n<p>Notifications have become a stable part of the web nowadays. It’s not uncommon to come across sites asking for permission to send notifications to your browser. Most modern web browsers implement the <a href=\"https://www.w3.org/TR/push-api/\">push API</a> and are able to handle push notifications. A quick check on <a href=\"https://caniuse.com/#feat=push-api\">caniuse</a> shows that the API enjoys wide support among modern chrome-based browsers and Firefox browser.</p>\n\n<p>There are various services for implementing notifications on the web. Notable ones are <a href=\"https://pusher.com/\">Pusher</a> and <a href=\"https://firebase.google.com/\">Firebase</a>. In this article, we’ll implement push notifications with the Firebase Cloud Messaging (FCM) service, which is “a cross-platform messaging solution that lets you reliably send messages at no cost”.</p>\n\n<p>I assume that the reader has some familiarity with writing a back-end application in Express.js and/or some familiarity with React. If you’re comfortable with either of these technologies, then, you could work with either the frontend or backend. We will implement the backend first, then move on to the frontend. In that way, you can use whichever section appeals more to you.</p>\n\n<p>So let’s get started.</p>\n\n<h3 id=\"types-of-firebase-messages\">Types Of Firebase Messages</h3>\n\n<p>The Firebase documentation specifies that an FCM implementation requires two components.</p>\n\n<ol>\n<li>A trusted environment such as Cloud Functions for Firebase or an app server on which to build, target, and send messages.</li>\n<li>An iOS, Android, or web (JavaScript) client app that receives messages via the corresponding platform-specific transport service.</li>\n</ol>\n\n<p>We will take care of item 1 in our express back-end app, and item 2 in our react front-end app.</p>\n\n\n  <div data-component=\"FeaturePanel\" data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container hidden\"></div>\n\n\n<p>The docs also state that FCM lets us send two types of messages.</p>\n\n<ol>\n<li>Notification messages (sometimes thought of as “display messages”) are handled by the FCM SDK automatically.</li>\n<li>Data messages are handled by the client app.</li>\n</ol>\n\n<p>Notification messages are automatically handled by the browser on the web. They can also take an optional <code>data</code> payload, which must be handled by the client app. In this tutorial, we’ll be sending and receiving data messages, which must be handled by the client app. This affords us more freedom in deciding how to handle the received message.</p>\n\n<h3 id=\"setting-up-a-firebase-project\">Setting Up A Firebase Project</h3>\n\n<p>The very first thing we need to do is to set up a Firebase project. FCM is a service and as such, we’ll be needing some API keys. This step requires that you have a Google account. Create one if you don’t already have one. You can click <a href=\"https://accounts.google.com/signup/v2/webcreateaccount?hl=en&amp;flowName=GlifWebSignIn&amp;flowEntry=SignUp\">here</a> to get started.</p>\n\n<p>After setting up your Google account, head on to the <a href=\"https://console.firebase.google.com/\">Firebase console</a>.</p>\n\n<p>Click on <strong>add project</strong>. Enter a <em>name</em> for your project and click on <strong>continue</strong>. On the next screen, you may choose to turn off analytics. You can always turn it on later from the Analytics menu of your project page. Click <strong>continue</strong> and wait a few minutes for the project to be created. It’s usually under a minute. Then click on <strong>continue</strong> to open your project page.</p>\n\n<p>Once we’ve successfully set up a project, the next step is to get the necessary keys to work with our project. When working with Firebase, we need to complete a configuration step for the frontend and backend separately. Let’s see how we can obtain the credentials needed to work with both.</p>\n\n<h4 id=\"frontend\">Frontend</h4>\n\n<p>On the project page, click on the icon to add Firebase to your web app.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f5e48d67-8f3c-40c7-824a-c0af3dd07dd1/01-add-project-to-web.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f5e48d67-8f3c-40c7-824a-c0af3dd07dd1/01-add-project-to-web.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f5e48d67-8f3c-40c7-824a-c0af3dd07dd1/01-add-project-to-web.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f5e48d67-8f3c-40c7-824a-c0af3dd07dd1/01-add-project-to-web.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f5e48d67-8f3c-40c7-824a-c0af3dd07dd1/01-add-project-to-web.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f5e48d67-8f3c-40c7-824a-c0af3dd07dd1/01-add-project-to-web.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f5e48d67-8f3c-40c7-824a-c0af3dd07dd1/01-add-project-to-web.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Add Firebase to a web project\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Add Firebase to a web project. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f5e48d67-8f3c-40c7-824a-c0af3dd07dd1/01-add-project-to-web.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Give your app a <em>nickname</em>. No need to set up Firebase hosting. Click on <strong>Register</strong> app and give it a few seconds to complete the setup. On the next screen, copy out the app credentials and store them somewhere. You could just leave this window open and come back to it later.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a8f91f87-03b4-463f-8e5d-45399edd647d/02-firebase-credentials.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a8f91f87-03b4-463f-8e5d-45399edd647d/02-firebase-credentials.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a8f91f87-03b4-463f-8e5d-45399edd647d/02-firebase-credentials.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a8f91f87-03b4-463f-8e5d-45399edd647d/02-firebase-credentials.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a8f91f87-03b4-463f-8e5d-45399edd647d/02-firebase-credentials.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a8f91f87-03b4-463f-8e5d-45399edd647d/02-firebase-credentials.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a8f91f87-03b4-463f-8e5d-45399edd647d/02-firebase-credentials.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Firebase web app credentials\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Firebase web app credentials. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a8f91f87-03b4-463f-8e5d-45399edd647d/02-firebase-credentials.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>We’ll be needing the configuration object later. Click on continue to console to return to your console.</p>\n\n<h4 id=\"backend\">Backend</h4>\n\n<p>We need a service account credential to connect with our Firebase project from the backend. On your project page, click on the <strong>gear</strong> icon next to Project Overview to create a service account for use with our Express backend. Refer to the below screenshot. Follow steps 1 to 4 to download a <code>JSON</code> file with your account credentials. Be sure to keep your service account file in a safe place.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/318242f9-6697-46c6-a1b3-4774ce5403ae/03-create-service-account.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/318242f9-6697-46c6-a1b3-4774ce5403ae/03-create-service-account.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/318242f9-6697-46c6-a1b3-4774ce5403ae/03-create-service-account.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/318242f9-6697-46c6-a1b3-4774ce5403ae/03-create-service-account.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/318242f9-6697-46c6-a1b3-4774ce5403ae/03-create-service-account.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/318242f9-6697-46c6-a1b3-4774ce5403ae/03-create-service-account.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/318242f9-6697-46c6-a1b3-4774ce5403ae/03-create-service-account.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Steps for creating a service account credential\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Steps for creating a service account credential. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/318242f9-6697-46c6-a1b3-4774ce5403ae/03-create-service-account.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>I’ll advise you not to download it until you’re ready to use it. Just remember to come back to these sections if you need a refresher.</p>\n\n<p>So now we’ve successfully set up a Firebase project and added a web app to it. We’ve also seen how to get the credentials we need to work with both the frontend and backend. Let’s now work on sending push notifications from our express backend.</p>\n\n<h3 id=\"getting-started\">Getting Started</h3>\n\n<p>To make it easier to work through this tutorial, I’ve set up a project on <a href=\"https://github.com/chidimo/Fireact\">Github</a> with both a server and a client. Usually, you’ll have a separate repo for your backend and frontend respectively. But I’ve put them together here to make it easier to work through this tutorial.</p>\n\n<p>Create a fork of the repo, clone it to your computer, and let’s get our front-end and back-end servers started.</p>\n\n<ol>\n<li>Fork the repo and check out the <code>01-get-started</code> branch.</li>\n<li>Open the project in your code editor of choice and observe the contents.</li>\n<li>In the project root, we have two folders, <code>client/</code> and <code>server/</code>. There’s also a <code>.editorconfig</code> file, a <code>.gitignore</code>, and a <code>README.md</code>.</li>\n<li>The client folder contains a React app. This is where we will listen for notifications.</li>\n<li>The server folder contains an express app. This is where we’ll send notifications from. The app is from the project we built in my other article <a href=\"https://www.smashingmagazine.com/2020/04/express-api-backend-project-postgresql/\">How To Set Up An Express API Backend Project With PostgreSQL</a>.</li>\n<li>Open a terminal and navigate to the <code>client/</code> folder. Run the <code>yarn install</code> command to install the project dependencies. Then run <code>yarn start</code> to start the project. Visit <code>http://localhost:3000</code> to see the live app.</li>\n<li>Create a <code>.env</code> file inside the <code>server/</code> folder and add the <code>CONNECTION_STRING</code> environment variable. This variable is a database connection URL pointing to a PostgreSQL database. If you need help with this, check out the <strong><code>Connecting The PostgreSQL Database And Writing A Model</code></strong> section of my linked article. You should also provide the <code>PORT</code> environment variable since React already runs on port <code>3000</code>. I set <code>PORT=3001</code>  in my <code>.env</code> file.</li>\n<li>Open a separate terminal and navigate to the <code>server/</code> folder. Run the <code>yarn install</code> command to install the project dependencies. Run <code>yarn runQuery</code> to create the project database. Run <code>yarn startdev</code> to start the project. Visit <a href=\"http://localhost:3001/v1/messages\">http://localhost:3001/v1/messages</a> and you should see some messages in a JSON format.</li>\n</ol>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/58b83a7d-b96f-4b81-8c02-da3d5d081e29/04-frontend-and-backend-running.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/58b83a7d-b96f-4b81-8c02-da3d5d081e29/04-frontend-and-backend-running.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/58b83a7d-b96f-4b81-8c02-da3d5d081e29/04-frontend-and-backend-running.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/58b83a7d-b96f-4b81-8c02-da3d5d081e29/04-frontend-and-backend-running.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/58b83a7d-b96f-4b81-8c02-da3d5d081e29/04-frontend-and-backend-running.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/58b83a7d-b96f-4b81-8c02-da3d5d081e29/04-frontend-and-backend-running.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/58b83a7d-b96f-4b81-8c02-da3d5d081e29/04-frontend-and-backend-running.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Frontend and backend servers running\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Frontend and backend servers running. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/58b83a7d-b96f-4b81-8c02-da3d5d081e29/04-frontend-and-backend-running.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/093f4592-2a65-4246-a64c-e5563b62dac3/05-react-app-running.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/093f4592-2a65-4246-a64c-e5563b62dac3/05-react-app-running.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/093f4592-2a65-4246-a64c-e5563b62dac3/05-react-app-running.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/093f4592-2a65-4246-a64c-e5563b62dac3/05-react-app-running.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/093f4592-2a65-4246-a64c-e5563b62dac3/05-react-app-running.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/093f4592-2a65-4246-a64c-e5563b62dac3/05-react-app-running.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/093f4592-2a65-4246-a64c-e5563b62dac3/05-react-app-running.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"React frontend app running\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      React frontend app running. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/093f4592-2a65-4246-a64c-e5563b62dac3/05-react-app-running.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cfc73121-ce16-4a72-9600-9a8a08a66a58/06-express-app-running.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cfc73121-ce16-4a72-9600-9a8a08a66a58/06-express-app-running.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cfc73121-ce16-4a72-9600-9a8a08a66a58/06-express-app-running.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cfc73121-ce16-4a72-9600-9a8a08a66a58/06-express-app-running.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cfc73121-ce16-4a72-9600-9a8a08a66a58/06-express-app-running.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cfc73121-ce16-4a72-9600-9a8a08a66a58/06-express-app-running.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cfc73121-ce16-4a72-9600-9a8a08a66a58/06-express-app-running.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Express backend app running\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Express backend app running. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cfc73121-ce16-4a72-9600-9a8a08a66a58/06-express-app-running.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Now that we have our front-end and back-end apps running, let’s implement notifications in the backend.</p>\n\n<h3 id=\"setting-up-firebase-admin-messaging-on-the-backend\">Setting Up Firebase Admin Messaging On The Backend</h3>\n\n<p>Sending out push notifications with FCM on the backend requires either the <a href=\"https://www.npmjs.com/package/firebase-admin\">Firebase admin SDK</a> or the <a href=\"https://firebase.google.com/docs/cloud-messaging/server#choose\">FCM server protocols</a>. We’ll be making use of the admin SDK in this tutorial. There’s also the <a href=\"https://console.firebase.google.com/project/_/notification\">notifications composer</a>, which is good for “testing and sending marketing and engagement messages with powerful built-in targeting and analytics”.</p>\n\n<p>In your terminal, navigate to the <code>server/</code> folder and install the Admin SDK.</p>\n\n<pre><code class=\"language-javascript\"># install firebase admin SDK\nyarn add firebase-admin</code></pre>\n\n<p>Open your <code>.env</code> file and add the following environment variable.</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">GOOGLE_APPLICATION_CREDENTIALS=\"path-to-your-service-account-json-file\"</code></pre>\n</div>\n\n<p>The value of this variable is the path to your downloaded service account credentials. At this point, you probably want to go back to the section where we created the service account for our project. You should copy the admin initialization code from there and also download your service account key file. Place this file in your <code>server/</code> folder and add it to your <code>.gitignore</code>.</p>\n\n<p>Remember, in an actual project, you should store this file in a very secure location on your server. Don’t let it get into the wrong hands.</p>\n\n<p>Open <code>server/src/settings.js</code> and export the application credentials file path.</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\"># export the service account key file path\nexport const googleApplicationCredentials = process.env.GOOGLE_APPLICATION_CREDENTIALS;</code></pre>\n</div>\n\n<p>Create a file <code>server/src/firebaseInit.js</code> and add the below code.</p>\n\n<pre><code class=\"language-javascript\">import admin from 'firebase-admin';\n\nimport { googleApplicationCredentials } from './settings'\n\nconst serviceAccount = require(googleApplicationCredentials);\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n  databaseURL: 'your-database-url-here'\n});\n\nexport const messaging = admin.messaging();</code></pre>\n\n<p>We import the admin module from <code>firebase-admin</code>. We then initialize the admin app with our service account file. Finally, we create and export the messaging feature.</p>\n\n<p>Note that I could have passed the path to my service account key file directly, but it is the less secure option. Always use environment variables when dealing with sensitive information.</p>\n\n<p>To check that you completed the initialization successfully, open up server/src/app.js and include the following lines.</p>\n\n<pre><code class=\"language-javascript\">import { messaging } from './firebaseInit'\nconsole.log(messaging)</code></pre>\n\n<p>We import the messaging instance and log it in the console. You should see something like the picture below. You should remove these once you verify that your admin is set up correctly.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0b5977c1-0f78-4ee1-8a63-312b840118d4/07-messaging-logged.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0b5977c1-0f78-4ee1-8a63-312b840118d4/07-messaging-logged.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0b5977c1-0f78-4ee1-8a63-312b840118d4/07-messaging-logged.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0b5977c1-0f78-4ee1-8a63-312b840118d4/07-messaging-logged.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0b5977c1-0f78-4ee1-8a63-312b840118d4/07-messaging-logged.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0b5977c1-0f78-4ee1-8a63-312b840118d4/07-messaging-logged.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0b5977c1-0f78-4ee1-8a63-312b840118d4/07-messaging-logged.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Console log of messaging feature\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Console log of messaging feature. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0b5977c1-0f78-4ee1-8a63-312b840118d4/07-messaging-logged.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>If you run into any problems, you can check out the <a href=\"https://github.com/chidimo/Fireact/tree/02-connect-firebase-admin\">02-connect-firebase-admin</a> branch of my repo for comparison.</p>\n\n<p>Now that we’ve successfully setup admin messaging, let’s now write the code to send the notifications.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n\n\n\n<h3 id=\"sending-push-notifications-from-the-backend\">Sending Push Notifications From The Backend</h3>\n\n<p>FCM data message configuration is very simple. All you have to do is supply one or more target(s) and a <code>JSON</code> of the message you wish to send to the client(s). There are no required keys in the <code>JSON</code>. You alone decide what key-value pairs you want to include in the data. The data messages form works across all platforms, so our notification could also be processed by mobile devices.</p>\n\n<p>There are additional configurations for other platforms. For example, there’s an <code>android</code> settings that only work with android devices and <code>apns</code> settings that work on only iOS devices. You can find the configuration guide <a href=\"https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages#Notification\">here</a>.</p>\n\n<p>Create a file <code>server/src/notify.js</code> and enter the below code.</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">import { messaging } from './firebaseInit';\n\nexport const sendNotificationToClient = (tokens, data) =&gt; {\n  // Send a message to the devices corresponding to the provided\n  // registration tokens.\n  messaging\n    .sendMulticast({ tokens, data })\n    .then(response => {\n      // Response is an object of the form { responses: [] }\n      const successes = response.responses.filter(r =&gt; r.success === true)\n        .length;\n      const failures = response.responses.filter(r =&gt; r.success === false)\n        .length;\n      console.log(\n        'Notifications sent:',\n        `${successes} successful, ${failures} failed`\n      );\n    })\n    .catch(error =&gt; {\n      console.log('Error sending message:', error);\n    });\n};</code></pre>\n</div>\n\n<p>We created a function that accepts an array of token strings and a data object. Each token string represents a device that has accepted to receive notifications from our back-end application. The notification will be sent to each client in the tokens array. We’ll see how to generate the token in the front-end section of the tutorial.</p>\n\n<p>The messaging instance’s <code>sendMulticast</code> method returns a promise. On success, we get an array from which we count the number of successes as well as failed notifications. You could certainly handle this response anyhow you want.</p>\n\n<p>Let’s use this function to send out a notification each time a new message is added to the database.</p>\n\n<p>Open <code>server/src/controllers/message.js</code> and update the <code>addMessage</code> function.</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">import { sendNotificationToClient } from '../notify';\n\nexport const addMessage = async (req, res) => {\n  const { name, message } = req.body;\n  const columns = 'name, message';\n  const values = `'${name}', '${message}'`;\n  try {\n    const data = await messagesModel.insertWithReturn(columns, values);\n    const tokens = [];\n    const notificationData = {\n      title: 'New message',\n      body: message,\n    };\n    sendNotificationToClient(tokens, notificationData);\n    res.status(200).json({ messages: data.rows });\n  } catch (err) {\n    res.status(200).json({ messages: err.stack });\n  }\n};</code></pre>\n</div>\n    \n\n<p>This function handles a post request to the <code>/messages</code>  endpoint. Once a message is successfully created, a notification is sent out by the <code>sendNotificationToClient</code> function followed by the response to the client. The only missing piece in this code is the <code>tokens</code> to send the notifications to.</p>\n\n<p>When we connect the client app, we’ll copy the generated token and paste it in this file. In a production app, you’ll store the tokens somewhere in your database.</p>\n\n<p>With this last piece of code, we’ve completed the back-end implementation. Let’s now switch over to the frontend.</p>\n\n<p>The corresponding branch in my repo at this point is <a href=\"https://github.com/chidimo/Fireact/tree/03-send-notification\">03-send-notification</a>.</p>\n\n<h3 id=\"setting-up-firebase-messaging-notifications-on-the-client\">Setting Up Firebase Messaging Notifications On The Client</h3>\n\n<p>Let’s take a look at the main components of our front-end React app.</p>\n\n<p>Open up <code>client/src/App.js</code> and inspect the content. I’ll leave out most of the import statements and just look at the program logic.</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\"># library imports\n\nimport { Messaging } from './Messaging';\n\naxios.defaults.baseURL = 'http://localhost:3001/v1';\n\nconst App = () =&gt; {\n  return (\n    &lt;Fragment&gt;\n      &lt;ToastContainer autoClose={2000} position=\"top-center\" /&gt;\n      &lt;Navbar bg=\"primary\" variant=\"dark\"&gt;\n        &lt;Navbar.Brand href=\"#home\"&gt;Firebase notifictations with React and Express&lt;/Navbar.Brand&gt;\n      &lt;/Navbar&gt;\n      &lt;Container className=\"center-column\"&gt;\n        &lt;Row&gt;\n          &lt;Col&gt;\n            &lt;Messaging /&gt;\n          &lt;/Col&gt;\n        &lt;/Row&gt;\n      &lt;/Container&gt;\n    &lt;/Fragment&gt;\n  );\n};\nexport default App;</code></pre>\n</div>\n\n<p>This is a regular react component styled with <a href=\"https://react-bootstrap.github.io/\">react-bootstrap</a>. There’s a toast component right at the top of our app, which we shall use to display notifications. Note that we also set the <code>baseURL</code> for the <code>axios</code> library. Everything of note happens inside the <code>&lt;Messaging /&gt;</code> component. Let’s now take a look at its content.</p>\n\n<p>Open up <code>client/src/Messaging.js</code> and inspect the content.</p>\n\n<pre><code class=\"language-javascript\">export const Messaging = () =&gt; {\n  const [messages, setMessages] = React.useState([]);\n  const [requesting, setRequesting] = React.useState(false);\n\n  React.useEffect(() =&gt; {\n    setRequesting(true);\n    axios.get(\"/messages\").then((resp) =&gt; {\n      setMessages(resp.data.messages);\n      setRequesting(false);\n    });\n  }, []);\n\n  return (\n    &lt;Container&gt;\n      {/* form goes here */}\n      &lt;div className=\"message-list\"&gt;\n        &lt;h3&gt;Messages&lt;/h3&gt;\n        {requesting ? (\n          &lt;Spinner animation=\"border\" role=\"status\"&gt;\n            &lt;span className=\"sr-only\"&gt;Loading...&lt;/span&gt;\n          &lt;/Spinner&gt;\n        ) : (\n          &lt;&gt;\n            {messages.map((m, index) =&gt; {\n              const { name, message } = m;\n              return (\n                &lt;div key={index}&gt;\n                  {name}: {message}\n                &lt;/div&gt;\n              );\n            })}\n          &lt;/&gt;\n        )}\n      &lt;/div&gt;\n    &lt;/Container&gt;\n  );\n};</code></pre>\n\n<p>We have two state variables, <code>messages</code> and <code>requesting</code>. <code>messages</code> represent the list of messages from our database and <code>requesting</code> is for toggling our loader state. We have a <code>React.useEffect</code> block where we make our API call to the <code>/messages</code> endpoint and set the returned data in our <code>messages</code> state.</p>\n\n<p>In the return statement, we map over the messages and display the <code>name</code> and <code>message</code> fields. On the same page, we include a form for creating new messages.</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">&lt;Formik\n  initialValues={{\n    name: \"\",\n    message: \"\",\n  }}\n  onSubmit={(values, actions) =&gt; {\n    setTimeout(() =&gt; {\n      alert(JSON.stringify(values, null, 2));\n      actions.setSubmitting(false);\n      toast.success(\"Submitted succesfully\");\n    }, 1000);\n  }}\n&gt;\n  {(prop) =&gt; {\n    const { handleSubmit, handleChange, isSubmitting } = prop;\n    return (\n      &lt;&gt;\n        &lt;InputGroup className=\"mb-3\"&gt;\n          &lt;InputGroup.Prepend&gt;\n            &lt;InputGroup.Text id=\"basic-addon1\"&gt;Name&lt;/InputGroup.Text&gt;\n          &lt;/InputGroup.Prepend&gt;\n          &lt;FormControl\n            placeholder=\"Enter your name\"\n            onChange={handleChange(\"name\")}\n          /&gt;\n        &lt;/InputGroup&gt;\n        &lt;InputGroup className=\"mb-3\"&gt;\n          &lt;InputGroup.Prepend&gt;\n            &lt;InputGroup.Text id=\"basic-addon1\"&gt;Message&lt;/InputGroup.Text&gt;\n          &lt;/InputGroup.Prepend&gt;\n          &lt;FormControl\n            onChange={handleChange(\"message\")}\n            placeholder=\"Enter a message\"\n          /&gt;\n        &lt;/InputGroup&gt;\n        {isSubmitting ? (\n          &lt;Button variant=\"primary\" disabled&gt;\n            &lt;Spinner\n              as=\"span\"\n              size=\"sm\"\n              role=\"status\"\n              animation=\"grow\"\n              aria-hidden=\"true\"\n            /&gt;\n            Loading...\n          &lt;/Button&gt;\n        ) : (\n          &lt;Button variant=\"primary\" onClick={() =&gt; handleSubmit()}&gt;\n            Submit\n          &lt;/Button&gt;\n        )}\n      &lt;/&gt;\n    );\n  }}\n&lt;/Formik&gt;</code></pre>\n</div>\n  \n\n<div class=\"sponsors__lead-place\"></div>\n\n\n\n\n<p>We’re using the <a href=\"https://jaredpalmer.com/formik/docs/overview\"><code>Formik</code></a> library to manage our form. We pass the <code>&lt;Formik /&gt;</code> component an <code>initialvalues</code>  props, an <code>onSubmit</code> prop and the form component we want to render. In return, we get back some handy functions such as <code>handleChange</code> which we can use to manipulate our form inputs, and <code>handleSubmit</code> which we use to submit the form. <code>isSubmitting</code> is a <code>boolean</code> that we use to toggle the submit button state.</p>\n\n<p>I encourage you to give formik a try. It really simplifies working with forms. We will replace the code in the <code>onSubmit</code> method later.</p>\n\n<p>Let’s now implement the method that will request a browser’s permission and assign it a token.</p>\n\n<p>To start using Firebase in the frontend, we have to install the <a href=\"https://www.npmjs.com/package/firebase\">Firebase JavaScript client</a> library. Note that this is a different package from the <code>firebase-admin SDK</code>.</p>\n\n<pre><code class=\"language-javascript\"># install firebase client library\nyarn add firebase</code></pre>\n\n<p>Create a file <code>client/src/firebaseInit.js</code> and add the following content.</p>\n\n<pre><code class=\"language-javascript\">import firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nconst config = {\n  apiKey: \"API-KEY\",\n  authDomain: \"AUTH-DOMAIN\",\n  databaseURL: \"DATABASE-URL\",\n  projectId: \"PROJECT-ID\",\n  storageBucket: \"STORAGE-BUCKET\",\n  messagingSenderId: \"MESSAGING-SENDER-ID\",\n  appId: \"APP-ID\"\n};\n\nfirebase.initializeApp(config);\nconst messaging = firebase.messaging();\n\n// next block of code goes here</code></pre>\n\n<p>The Firebase <a href=\"https://www.npmjs.com/package/firebase#include-only-the-features-you-need\">docs</a> state that:</p>\n\n<blockquote>“The full Firebase JavaScript client includes support for Firebase Authentication, the Firebase Realtime Database, Firebase Storage, and Firebase Cloud Messaging.”</blockquote>\n\n<p>So here, we import only the messaging feature. At this point, you could refer to the section on creating a Firebase project to get the <code>config</code> object. We then initialize Firebase and export the messaging feature. Let’s add in the final block of code.</p>\n\n<pre><code class=\"language-javascript\">export const requestFirebaseNotificationPermission = () =&gt;\n  new Promise((resolve, reject) =&gt; {\n    messaging\n      .requestPermission()\n      .then(() => messaging.getToken())\n      .then((firebaseToken) =&gt; {\n        resolve(firebaseToken);\n      })\n      .catch((err) =&gt; {\n        reject(err);\n      });\n  });\n\nexport const onMessageListener = () =&gt;\n  new Promise((resolve) =&gt; {\n    messaging.onMessage((payload) =&gt; {\n      resolve(payload);\n    });\n  });</code></pre>\n\n<p>The <code>requestFirebaseNotificationPermission</code> function requests the browser’s permission to send notifications and resolves with a token if the request is granted. This is the token that FCM uses to send a notification to the browser. It is what triggers the prompt you see on browsers asking for permission to send a notification.</p>\n\n<p>The <code>onMessageListener</code> function is only invoked when the browser is in the foreground. Later, we will write a separate function to handle the notification when the browser is in the background.</p>\n\n<p>Open up <code>client/src/App.js</code> and import the <code>requestFirebaseNotificationPermission</code> function.</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">import { requestFirebaseNotificationPermission } from './firebaseInit'</code></pre>\n</div>\n\n<p>Then inside the App function, add the below code before the return statement.</p>\n\n<pre><code class=\"language-javascript\">requestFirebaseNotificationPermission()\n  .then((firebaseToken) => {\n    // eslint-disable-next-line no-console\n    console.log(firebaseToken);\n  })\n  .catch((err) => {\n    return err;\n  });</code></pre>\n\n<p>Once the app loads this function runs and requests the browser’s permission to show notifications. If the permission is granted, we log the token. In a production app, you should save the token somewhere that your backend can access. But for this tutorial, we’re just going to copy and paste the token into the back-end app.</p>\n\n<p>Now run your app and you should see the notification request message. Click allow and wait for the token to be logged to the console. Since you’ve granted the browser permission, if we refresh the page you won’t see the banner anymore, but the token will still be logged to the console.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/11cd37b3-d457-4fd6-a64a-6b107df50ce1/08-notification-request.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/11cd37b3-d457-4fd6-a64a-6b107df50ce1/08-notification-request.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/11cd37b3-d457-4fd6-a64a-6b107df50ce1/08-notification-request.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/11cd37b3-d457-4fd6-a64a-6b107df50ce1/08-notification-request.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/11cd37b3-d457-4fd6-a64a-6b107df50ce1/08-notification-request.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/11cd37b3-d457-4fd6-a64a-6b107df50ce1/08-notification-request.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/11cd37b3-d457-4fd6-a64a-6b107df50ce1/08-notification-request.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"App request to show notifications\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      App request to show notifications. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/11cd37b3-d457-4fd6-a64a-6b107df50ce1/08-notification-request.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>You should know that Firefox browser (v75) doesn’t ask for notification permission by default. The permission request has to be triggered by a user-generated action like a click.</p>\n\n<p>This is a good point for me to commit my changes. The corresponding branch is <a href=\"https://github.com/chidimo/Fireact/tree/04-request-permission\">04-request-permission</a>.</p>\n\n<p>Let’s now complete the code for saving a message to our database.</p>\n\n<p>Open up <code>client/src/Messaging.js</code> and replace the <code>onSubmit</code> function of our form with the below code.</p>\n\n<pre><code class=\"language-javascript\">onSubmit={(values, actions) =&gt; {\n  axios\n    .post(\"/messages\", values)\n    .then((resp) =&gt; {\n      setMessages(resp.data.messages.concat(messages));\n      actions.setSubmitting(false);\n      toast.success(\"Submitted succesfully\");\n    })\n    .catch((err) =&gt; {\n      console.log(err);\n      toast.error(\"There was an error saving the message\");\n    });\n}}</code></pre>\n\n<p>We make a <code>post</code> request to the <code>/messages</code> endpoint to create a new message. If the request succeeds we take the returned data and put it at the top of the <code>messages</code> list. We also display a success toast.</p>\n\n<p>Let’s try it out to see if it works. Start the front-end and back-end servers. Before trying out the post request, open <code>server/src/controllers/messages.js</code> and comment out the line where we’re sending the notification.</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\"># this line will throw an error if tokens is an empty array comment it out temporarily\n// sendNotificationToClient(tokens, notificationData);</code></pre>\n</div>\n\n<p>Try adding some messages to the database. Works? That’s great. Now uncomment that line before continuing.</p>\n\n<p>Copy the notification token from the developer console and paste it into the tokens array. The token is a very long string, as shown below.</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">\n    const tokens = [\n      'eEa1Yr4Hknqzjxu3P1G3Ox:APA91bF_DF5aSneGdvxXeyL6BIQy8wd1f600oKE100lzqYq2zROn50wuRe9nB-wWryyJeBmiPVutYogKDV2m36PoEbKK9MOpJPyI-UXqMdYiWLEae8MiuXB4mVz9bXD0IwP7bappnLqg',\n    ];</code></pre>\n</div>\n\n<p>Open <code>client/src/Messaging.js</code>, import the <code>onMessageListener</code> and invoke it just under the <code>useEffect</code> block. Any position within the function is fine as long it’s before the <code>return</code> statement.</p>\n\n<pre><code class=\"language-javascript\">import { onMessageListener } from './firebaseInit';\n\n  React.useEffect(() =&gt; {\n    ...\n  }, []);\n\n  onMessageListener()\n    .then((payload) =&gt; {\n      const { title, body } = payload.data;\n      toast.info(`${title}; ${body}`);\n    })\n    .catch((err) =&gt; {\n      toast.error(JSON.stringify(err));\n    });</code></pre>\n\n<p>The listener returns a promise which resolves to the notification payload on success. We then display the title and body in a toast. Note that we could have taken any other action once we receive this notification but I’m keeping things simple here. With both servers running, try it out and see if it’s working.</p>\n\n<p>Works? That’s great.</p>\n\n<p>In case you run into problems, you could always compare with my repo. The corresponding branch at this point is <a href=\"https://github.com/chidimo/Fireact/tree/05-listen-to-notification\">05-listen-to-notification</a>.</p>\n\n<p>There’s just one bit we need to take care of. Right now we can only see notifications when the browser is in the foreground. The point about notifications is that it should pop up whether the browser is in the foreground or not.</p>\n\n<p>If we were to be sending a display message i.e. we included a <code>notification</code> object in our notification payload, the browser will take care of that on its own. But since we’re sending a data message, we have to tell the browser how to behave in response to a notification when our browser is in the background.</p>\n\n<p>To handle the background notification we need to register a <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API\">service worker</a> with our front-end client.</p>\n\n<p>Create a file <code>client/public/firebase-messaging-sw.js</code> and enter the following content:</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">importScripts('https://www.gstatic.com/firebasejs/7.14.2/firebase-app.js');\nimportScripts('https://www.gstatic.com/firebasejs/7.14.2/firebase-messaging.js');\n\nconst config = {\n  apiKey: \"API-KEY\",\n  authDomain: \"AUTH-DOMAIN\",\n  databaseURL: \"DATABASE-URL\",\n  projectId: \"PROJECT-ID\",\n  storageBucket: \"STORAGE-BUCKET\",\n  messagingSenderId: \"MESSAGING-SENDER-ID\",\n  appId: \"APP-ID\"\n};\n\nfirebase.initializeApp(config);\nconst messaging = firebase.messaging();\n\nmessaging.setBackgroundMessageHandler(function(payload) {\n  console.log('[firebase-messaging-sw.js] Received background message ', payload);\n  const notificationTitle = payload.data.title;\n  const notificationOptions = {\n    body: payload.data.body,\n    icon: '/firebase-logo.png'\n  };\n  return self.registration.showNotification(notificationTitle,\n    notificationOptions);\n});\n\nself.addEventListener('notificationclick', event =&gt; {\n  console.log(event)\n  return event;\n});</code></pre>\n</div>\n\n<p>At the top of the file, we’re importing the <code>firebase-app</code> and the <code>firebase-messaging</code> libraries since we only need the messaging feature. Don’t worry if the import syntax is new. It’s a syntax for importing external scripts into service worker files. Make sure that the version being imported is the same as the one in your <code>package.json</code>. I’ve run into issues that I solved by harmonizing the versions.</p>\n\n<p>As usual, we initialize Firebase, then we invoke the <code>setBackgroundMessageHandler</code>, passing it a callback, which receives the notification message payload. The remaining part of the code specifies how the browser should display the notification. Notice that we can also include an icon to display as well.</p>\n\n<p>We can also control what happens when we click on the notification with the <code>notificationclick</code> event handler.</p>\n\n<p>Create a file <code>client/src/serviceWorker.js</code> and enter the below content.</p>\n\n<pre><code class=\"language-javascript\">export const registerServiceWorker = () =&gt; {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker\n      .register('firebase-messaging-sw.js')\n      .then(function (registration) {\n        // eslint-disable-next-line no-console\n        console.log('[SW]: SCOPE: ', registration.scope);\n        return registration.scope;\n      })\n      .catch(function (err) {\n        return err;\n      });\n  }\n};</code></pre>\n\n<p>This function registers our service worker files. Note that we have replaced the more detailed version generated by React. We first check if the <code>serviceWorker</code> is present in the <code>navigator</code> object. This is simple browser support. If the browser supports service workers, we register the service worker file we created earlier.</p>\n\n<p>Now open <code>client/src/index.js</code>, import this function, and invoke it.</p>\n\n<pre><code class=\"language-javascript\"># other imports\n\nimport { registerServiceWorker } from './serviceWorker'\n\nReactDOM.render(\n  ...\n);\n\nregisterServiceWorker()</code></pre>\n\n<p>If all goes well, you should see the service worker&rsquo;s scope logged to your console.</p>\n\n<p>Open <a href=\"http://localhost:3000/messaging\">http://localhost:3000/messaging</a> in a second browser and create a message. You should see the notification from the other browser come into view.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d30f5f2c-d2a5-4d13-b68f-49d1c7090390/09-types-of-notification.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d30f5f2c-d2a5-4d13-b68f-49d1c7090390/09-types-of-notification.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d30f5f2c-d2a5-4d13-b68f-49d1c7090390/09-types-of-notification.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d30f5f2c-d2a5-4d13-b68f-49d1c7090390/09-types-of-notification.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d30f5f2c-d2a5-4d13-b68f-49d1c7090390/09-types-of-notification.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d30f5f2c-d2a5-4d13-b68f-49d1c7090390/09-types-of-notification.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d30f5f2c-d2a5-4d13-b68f-49d1c7090390/09-types-of-notification.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Background and foreground notifications\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Background and foreground notifications. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d30f5f2c-d2a5-4d13-b68f-49d1c7090390/09-types-of-notification.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>With that, we’ve come to the end of this tutorial. The corresponding branch in my repo is <a href=\"https://github.com/chidimo/Fireact/tree/06-handle-background-notification\">06-handle-background-notification</a>.</p>\n\n<h3 id=\"conclusion\">Conclusion</h3>\n\n<p>In this article, we learned about the different types of notification messages we can send with the  Firebase Cloud Messaging (FCM). API. We then implemented the “data message” type on the backend. Finally, we generated a token on the client app which we used to receive notification messages triggered by the back-end app. Finally, we learned how to listen for and display the notification messages when the browser is in either the background or foreground.</p>\n\n<p>I encourage you to take a look at the FCM docs to learn more.</p>\n\n<h4 id=\"related-resources\">Related Resources</h4>\n\n<ul>\n<li><a href=\"https://console.firebase.google.com/\">Firebase</a>, official website</li>\n<li><a href=\"https://github.com/chidimo/Fireact\">Fireact</a>, Orji Chidi Matthew, GitHub</li>\n<li>“<a href=\"https://www.npmjs.com/package/firebase\">Firebase: App Success Made Simple</a>,” the npm blog</li>\n<li><a href=\"https://console.firebase.google.com/project/_/notification\">Firebase Console</a></li>\n<li><a href=\"https://www.npmjs.com/package/firebase-admin\">Firebase Admin Node.js SDK</a>, the npm blog</li>\n<li><a href=\"https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages#webpushconfig\">WebpushConfig</a>, Firebase Docs</li>\n<li><a href=\"https://firebase.google.com/docs/reference/admin/node/admin.messaging.Messaging#sendmulticast\"><code>sendMulticast</code></a>, Firebase Docs</li>\n<li><a href=\"https://serviceworke.rs/\">Service Worker Cookbook</a>, Mozilla</li>\n<li><a href=\"https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages#Notification\">Notification</a>, Firebase Docs</li>\n<li><a href=\"https://firebase.google.com/docs/cloud-messaging/\">Firebase Cloud Messaging</a>, Firebase Documentation</li>\n<li>“<a href=\"https://www.smashingmagazine.com/2020/04/express-api-backend-project-postgresql/\">How To Set Up An Express API Backend Project With PostgreSQL</a>,” Chidi Orji</li>\n</ul>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\">\n  <span>(ks, ra, yk, il)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        ",
      "content": "Notifications have become a stable part of the web nowadays. It’s not uncommon to come across sites asking for permission to send notifications to your browser. Most modern web browsers implement the push API and are able to handle push notifications. A quick check on caniuse shows that the API enjoys wide support among modern chrome-based browsers and Firefox browser.\nThere are various services for implementing notifications on the web.",
      "contentSnippet": "Notifications have become a stable part of the web nowadays. It’s not uncommon to come across sites asking for permission to send notifications to your browser. Most modern web browsers implement the push API and are able to handle push notifications. A quick check on caniuse shows that the API enjoys wide support among modern chrome-based browsers and Firefox browser.\nThere are various services for implementing notifications on the web.",
      "guid": "https://www.smashingmagazine.com/2020/06/firebase-push-notifications-react/",
      "isoDate": "2020-06-29T13:30:00.000Z"
    },
    {
      "creator": "Andrew Clarke",
      "title": "Inspired Design Decisions With Giovanni Pintori: Publicity Becomes An Art Form",
      "link": "https://www.smashingmagazine.com/2020/06/inspired-design-decisions-giovanni-pintori/",
      "pubDate": "Fri, 26 Jun 2020 14:00:00 +0000",
      "author": "Andrew Clarke",
      "content:encoded": "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2020/06/inspired-design-decisions-giovanni-pintori/\" />\n              <title>Inspired Design Decisions With Giovanni Pintori: Publicity Becomes An Art Form</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>Inspired Design Decisions With Giovanni Pintori: Publicity Becomes An Art Form</h1>\n                  \n                    \n                    <address>Andrew Clarke</address>\n                  \n                  <time datetime=\"2020-06-26T14:00:00&#43;00:00\" class=\"op-published\">2020-06-26T14:00:00+00:00</time>\n                  <time datetime=\"2020-06-26T14:00:00&#43;00:00\" class=\"op-modified\">2020-07-10T03:35:48+00:00</time>\n                </header>\n                \n\n<p>With one or two occasional exceptions, I’ve spent the past twenty-two years designing for countless clients. A few of these projects lasted a year, some several months, but the majority for no more than a few weeks.</p>\n\n<p>Being completely absorbed for a few weeks or months in designing a product interface or a website can be a thrill. It often starts with the gratification which comes from winning the work. Gaining a new client’s confidence and trust can be addictive. During the seductive “getting to know you” phase, you learn about the client and what they expect from you and your work. Addictive personalities like mine crave the intensity of these feelings, but &mdash; just like some relationships &mdash; the initial excitement soon fades into the realities of working together.</p>\n\n<p>This creative promiscuity has suited my often short attention span and restless curiosity very well. But, there were times I wished I could stay with an organization for longer, get to know them better, and be a positive influence on what they do and make.</p>\n\n<p>I know many designers who work in-house. While I never envy their commute or the money they spend on living close to work, there’s a part of me that envies their ability to stay and shape the long-term creative direction of a company in the way which Giovanni Pintori helped Olivetti.</p>\n\n<blockquote>“In our day and age, publicity has become an art form, and increasingly needs to live up to this name. Publicity is a form of discourse that should eschew vagueness in favor of brevity, clarity, and persuasiveness. Those who engage in publicity (writers, painters, architects) need logic and imagination in equal measure.”<br /><br />&mdash; Giovanni Pintori</blockquote>\n\n<p>Italian designer Giovanni Pintori worked for business products manufacturer Olivetti for over 31 years. During this time, his style developed into the company’s unique design vocabulary. The appeal of working with one company for longer than a few months has become stronger as I’ve got older. For the past 18 months, I’ve devoted most of my time to working with a Swiss cybersecurity company, based not far from Milan and where Giovanni Pintori called home.</p>\n\n<p>Like Olivetti, this company values design in every form. While my top priority is the design of the company’s products, I’ve also had the opportunity to influence their brand, marketing, and overall creative direction.</p>\n\n<p>I still spend time on other people’s projects when the work attracts me, but I’ve learned how rewarding a long-term client relationship can be. I’m happy and more creatively satisfied than I have been in years. Plus, as old age catches up with me, I don’t have the energy to chase every attractive project like I used to.</p>\n\n<h4 id=\"read-more-from-the-series\">Read More From The Series</h4>\n\n<ul>\n<li><a href=\"https://www.smashingmagazine.com/2019/06/inspired-design-decisions-avaunt-magazine/\">Inspired Design Decisions: Avaunt Magazine</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2019/07/inspired-design-decisions-pressing-matters/\">Inspired Design Decisions: Pressing Matters</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2019/08/inspired-design-decisions-ernest-journal\">Inspired Design Decisions: Ernest Journal</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2019/09/inspired-design-decisions-alexey-brodovitch/\">Inspired Design Decisions: Alexey Brodovitch</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2019/10/inspired-design-decisions-bea-feitler/\">Inspired Design Decisions: Bea Feitler</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2020/03/inspired-design-decisions-neville-brody/\">Inspired Design Decisions: Neville Brody</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2020/03/inspired-design-decisions-otto-storch/\">Inspired Design Decisions: Otto Storch</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2020/04/inspired-design-decisions-herb-lubalin/\">Inspired Design Decisions: Herb Lubalin</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2020/05/inspired-design-decisions-max-huber/\">Inspired Design Decisions: Max Huber</a></li>\n</ul>\n\n\n  <div data-component=\"FeaturePanel\" data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container hidden\"></div>\n\n\n<h3 id=\"inspired-by-giovanni-pintori\">Inspired By Giovanni Pintori</h3>\n\n<p>Born in Sardinia in 1912, Giovanni Pintori became one of the most influential European graphic designers of the 20th century. He became known for the distinctive style he crafted into Olivetti’s design language for over 30 years.</p>\n\n<p>Pintori studied design at Italy’s influential L’Istituto Superiore per le Industrie Artistiche (Higher Institute for Artistic Industries) where he was surrounded by the creative arts. ISIA was a progressive school where students studied ceramics, painting, metalwork, and woodwork.</p>\n\n<p>While studying at ISIA, Pintori met Renato Zveteremich the advertising director and publicist who headed Olivetti’s advertising department during the 1930s. After graduating from HIAI, Pintori joined Olivetti to work under Zveteremich and became the company’s art director in 1950.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7a96ad36-f1e6-4f21-b5ee-296aa6ef6fd5/issue-10-01-inspired-design-decisions-giovanni-pintori-publicity.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7a96ad36-f1e6-4f21-b5ee-296aa6ef6fd5/issue-10-01-inspired-design-decisions-giovanni-pintori-publicity.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7a96ad36-f1e6-4f21-b5ee-296aa6ef6fd5/issue-10-01-inspired-design-decisions-giovanni-pintori-publicity.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7a96ad36-f1e6-4f21-b5ee-296aa6ef6fd5/issue-10-01-inspired-design-decisions-giovanni-pintori-publicity.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7a96ad36-f1e6-4f21-b5ee-296aa6ef6fd5/issue-10-01-inspired-design-decisions-giovanni-pintori-publicity.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7a96ad36-f1e6-4f21-b5ee-296aa6ef6fd5/issue-10-01-inspired-design-decisions-giovanni-pintori-publicity.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7a96ad36-f1e6-4f21-b5ee-296aa6ef6fd5/issue-10-01-inspired-design-decisions-giovanni-pintori-publicity.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"poster by Giovanni Pintori and etching by Joan Miró\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Left: Tir à l'arc (1972) etching and aquatint by Joan Miró. Right: Olivetti Lettera 22 poster (1954) designed by Giovanni Pintori. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7a96ad36-f1e6-4f21-b5ee-296aa6ef6fd5/issue-10-01-inspired-design-decisions-giovanni-pintori-publicity.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Olivetti manufactured business machines, most famously its range of typewriters. When Pintori joined Olivetti, the company was already known for its original product designs. Its products were immediately recognizable, and under the guidance of industrial designer Marcello Nizzoli, every detail of their designs—from the shape of a spacebar to the color of their outer casings was carefully considered.</p>\n\n<blockquote>“If artists are called upon to interpret, express, and defend the functional purity of a machine, it is truly a sign that the machine has entered the human spirit and that the problem of forms and relationships is still of an intuitive nature.”<br /><br />&mdash; Renato Zveteremich</blockquote>\n\n<p>But Olivetti’s preoccupation with design didn’t end with its products. Creativity was an essential part of the company’s culture which was evident from the architecture of its factories and offices to its advertising and graphic design used to promote its products.</p>\n\n<p>Over his 30 year career at Olivetti, Pintori designed the company’s advertising, brochures, and even their annual calendars. Pintori’s aesthetic style was bold and confident. He used bright colors from minimal color palettes and combined them with shapes to fill his designs with energy.</p>\n\n<p>But Pintori’s work wasn’t just playful, it was thoughtful. His choice of shapes wasn’t abstract. Shapes suggested the benefits of using a product rather than describe its features literally. Pintori didn’t just illustrate products, he brought them to life through his designs by suggesting how they might be used and what they could do to enhance people’s lives and work.</p>\n\n<blockquote>“I do not attempt to speak on behalf of the machines. Instead, I have tried to make them speak for themselves, through the graphic presentation of their elements, their operations and their use.”</blockquote>\n\n<p>Pintori defined Olivetti’s image far beyond his time at the company, and he continued to work on projects with them after leaving in 1967. He established his own studio in Milan, where he worked as a freelance designer, before retiring and dedicating himself to painting.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/facbe24c-86ed-4c09-839f-a765be30d29d/issue-10-02-inspired-design-decisions-giovanni-pintori-publicity.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/facbe24c-86ed-4c09-839f-a765be30d29d/issue-10-02-inspired-design-decisions-giovanni-pintori-publicity.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/facbe24c-86ed-4c09-839f-a765be30d29d/issue-10-02-inspired-design-decisions-giovanni-pintori-publicity.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/facbe24c-86ed-4c09-839f-a765be30d29d/issue-10-02-inspired-design-decisions-giovanni-pintori-publicity.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/facbe24c-86ed-4c09-839f-a765be30d29d/issue-10-02-inspired-design-decisions-giovanni-pintori-publicity.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/facbe24c-86ed-4c09-839f-a765be30d29d/issue-10-02-inspired-design-decisions-giovanni-pintori-publicity.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/facbe24c-86ed-4c09-839f-a765be30d29d/issue-10-02-inspired-design-decisions-giovanni-pintori-publicity.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"painting by Jasper Johns and poster by Giovanni Pintori\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Left: Numbers in Color (1958–59) painting by Jasper Johns. Right: Olivetti numbers poster (1949) designed by Giovanni Pintori. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/facbe24c-86ed-4c09-839f-a765be30d29d/issue-10-02-inspired-design-decisions-giovanni-pintori-publicity.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Giovanni Pintori died in Milan in 1999, and there’s a book, Pintori by Marta Sironi and published by Moleskine which catalogs his astonishing career.</p>\n\n<p>Pintori’s work inspires not only because of the boldness of his colorful shapes, but because of what they represent. Pintori understood that promoting a product required more than listing its features. Publicity should tell a story that resonates with customers, and that’s a lesson we should all be inspired by.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9fe54c06-3e74-4155-9847-c11ee8150769/issue-10-03-inspired-design-decisions-giovanni-pintori-publicity.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9fe54c06-3e74-4155-9847-c11ee8150769/issue-10-03-inspired-design-decisions-giovanni-pintori-publicity.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9fe54c06-3e74-4155-9847-c11ee8150769/issue-10-03-inspired-design-decisions-giovanni-pintori-publicity.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9fe54c06-3e74-4155-9847-c11ee8150769/issue-10-03-inspired-design-decisions-giovanni-pintori-publicity.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9fe54c06-3e74-4155-9847-c11ee8150769/issue-10-03-inspired-design-decisions-giovanni-pintori-publicity.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9fe54c06-3e74-4155-9847-c11ee8150769/issue-10-03-inspired-design-decisions-giovanni-pintori-publicity.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9fe54c06-3e74-4155-9847-c11ee8150769/issue-10-03-inspired-design-decisions-giovanni-pintori-publicity.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"brochures designed by Giovanni Pintori\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Left: Olivetti Lettera 22 brochure designed by Giovanni Pintori, 1954. Right: Olivetti Lettera 22 brochure designed by Giovanni Pintori, 1965. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9fe54c06-3e74-4155-9847-c11ee8150769/issue-10-03-inspired-design-decisions-giovanni-pintori-publicity.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1c08f3e1-0732-40f1-9570-2cf4b1a74626/issue-10-04-inspired-design-decisions-giovanni-pintori-publicity.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1c08f3e1-0732-40f1-9570-2cf4b1a74626/issue-10-04-inspired-design-decisions-giovanni-pintori-publicity.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1c08f3e1-0732-40f1-9570-2cf4b1a74626/issue-10-04-inspired-design-decisions-giovanni-pintori-publicity.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1c08f3e1-0732-40f1-9570-2cf4b1a74626/issue-10-04-inspired-design-decisions-giovanni-pintori-publicity.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1c08f3e1-0732-40f1-9570-2cf4b1a74626/issue-10-04-inspired-design-decisions-giovanni-pintori-publicity.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1c08f3e1-0732-40f1-9570-2cf4b1a74626/issue-10-04-inspired-design-decisions-giovanni-pintori-publicity.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1c08f3e1-0732-40f1-9570-2cf4b1a74626/issue-10-04-inspired-design-decisions-giovanni-pintori-publicity.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"posters designed by Giovanni Pintori\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Left: Olivetti Graphika poster designed by Giovanni Pintori, 1956. Right: Olivetti Tetractys poster designed by Giovanni Pintori, 1956. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1c08f3e1-0732-40f1-9570-2cf4b1a74626/issue-10-04-inspired-design-decisions-giovanni-pintori-publicity.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h4 id=\"creating-color-palettes\">Creating Color Palettes</h4>\n\n<p>The colors we choose should tell a story about a company, product, or service as eloquently as our layout or typography. Our color choices can attract someone’s attention, influence their perception of what we do, and even stimulate emotions. Color plays an essential role in making a product or website easy and intuitive to use. As well as brand colors, color palettes for the web help people to navigate, let them know what they can press, and where they’ve been.</p>\n\n<p>I like to keep my colors simple, and my palettes rarely contain more than three hues; a dominant color, secondary or supporting color, and an accent. To these, I add a small selection of neutral colors for use as backgrounds, borders, and text.</p>\n\n<p>To add depth to my designs &mdash; and to give me greater flexibility &mdash; I also introduce shades and tints of each of my hues. I use darker shades for borders &mdash; for example &mdash; around buttons &mdash; and lighter tints to add highlights.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6bf68b50-4032-4697-af95-f64653091a79/issue-10-05-inspired-design-decisions-giovanni-pintori-publicity.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6bf68b50-4032-4697-af95-f64653091a79/issue-10-05-inspired-design-decisions-giovanni-pintori-publicity.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6bf68b50-4032-4697-af95-f64653091a79/issue-10-05-inspired-design-decisions-giovanni-pintori-publicity.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6bf68b50-4032-4697-af95-f64653091a79/issue-10-05-inspired-design-decisions-giovanni-pintori-publicity.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6bf68b50-4032-4697-af95-f64653091a79/issue-10-05-inspired-design-decisions-giovanni-pintori-publicity.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6bf68b50-4032-4697-af95-f64653091a79/issue-10-05-inspired-design-decisions-giovanni-pintori-publicity.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6bf68b50-4032-4697-af95-f64653091a79/issue-10-05-inspired-design-decisions-giovanni-pintori-publicity.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Left: My color palette. Right: Demonstrating percentage use.\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Left: My color palette. Right: Demonstrating percentage use. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6bf68b50-4032-4697-af95-f64653091a79/issue-10-05-inspired-design-decisions-giovanni-pintori-publicity.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Since operating system dark modes have become more prevalent, I also subtly alter the lightness and saturation of colors in my palettes, so they appear more vibrant against dark backgrounds.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f1445e27-9d23-475e-b821-44dc7880a111/issue-10-06-inspired-design-decisions-giovanni-pintori-publicity.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f1445e27-9d23-475e-b821-44dc7880a111/issue-10-06-inspired-design-decisions-giovanni-pintori-publicity.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f1445e27-9d23-475e-b821-44dc7880a111/issue-10-06-inspired-design-decisions-giovanni-pintori-publicity.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f1445e27-9d23-475e-b821-44dc7880a111/issue-10-06-inspired-design-decisions-giovanni-pintori-publicity.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f1445e27-9d23-475e-b821-44dc7880a111/issue-10-06-inspired-design-decisions-giovanni-pintori-publicity.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f1445e27-9d23-475e-b821-44dc7880a111/issue-10-06-inspired-design-decisions-giovanni-pintori-publicity.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f1445e27-9d23-475e-b821-44dc7880a111/issue-10-06-inspired-design-decisions-giovanni-pintori-publicity.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"color palette against a dark background\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Left & right: Presenting a color palette against a dark background. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f1445e27-9d23-475e-b821-44dc7880a111/issue-10-06-inspired-design-decisions-giovanni-pintori-publicity.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h3 id=\"using-primary-colors\">Using Primary Colors</h3>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/befc0772-8027-4f2b-b891-f78c6892d2ec/issue-10-07-inspired-design-decisions-giovanni-pintori-publicity.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/befc0772-8027-4f2b-b891-f78c6892d2ec/issue-10-07-inspired-design-decisions-giovanni-pintori-publicity.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/befc0772-8027-4f2b-b891-f78c6892d2ec/issue-10-07-inspired-design-decisions-giovanni-pintori-publicity.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/befc0772-8027-4f2b-b891-f78c6892d2ec/issue-10-07-inspired-design-decisions-giovanni-pintori-publicity.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/befc0772-8027-4f2b-b891-f78c6892d2ec/issue-10-07-inspired-design-decisions-giovanni-pintori-publicity.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/befc0772-8027-4f2b-b891-f78c6892d2ec/issue-10-07-inspired-design-decisions-giovanni-pintori-publicity.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/befc0772-8027-4f2b-b891-f78c6892d2ec/issue-10-07-inspired-design-decisions-giovanni-pintori-publicity.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Pintori-inspired design\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      The primary colors used in this Pintori-inspired design emphasise the clarity of its message and the simplicity of its layout. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/befc0772-8027-4f2b-b891-f78c6892d2ec/issue-10-07-inspired-design-decisions-giovanni-pintori-publicity.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>The HTML needed to implement my first Pintori-inspired design is meaningful and simple as the design itself. I need just four structural elements; a header which contains two SVGs of the iconic Morris Traveller’s profile, the main element for my running text, an SVG of the Traveller’s front, and finally a footer which contains the Morris Motors company logo:</p>\n\n<pre><code class=\"language-html\">&lt;header&gt;  \n  &lt;svg&gt;…&lt;/svg&gt;\n  &lt;svg&gt;…&lt;/svg&gt;\n&lt;/header&gt;\n\n&lt;main&gt;\n  &lt;h1&gt;…&lt;/h1&gt;\n  &lt;p&gt;…&lt;/p&gt;\n&lt;/main&gt;\n\n&lt;figure&gt;\n  &lt;svg&gt;…&lt;/svg&gt;\n&lt;/figure&gt;\n\n&lt;footer&gt;\n  &lt;svg&gt;…&lt;/svg&gt;\n&lt;/footer&gt;\n</code></pre>\n\n<p>While external SVG files will be cached and ready to render, I now embed SVG in my HTML whenever possible. Fewer external files mean fewer HTTP requests, but the benefits of embedding go far beyond performance.</p>\n\n<p>Subtle changes in color saturation and lightness between light themes and dark modes are often necessary to maintain the punchiness of design elements against contrasting background colors. When an SVG is embedded in HTML, its fills and strokes can be subtlety altered using CSS.</p>\n\n<p>I start by applying color and typography foundation styles for the distinguished dark version of my design. These include Moderna Sans, a versatile sans-serif typeface designed by Luciano Vergara and Alfonso García which I chose to evoke the style of Pintori’s work for Olivetti:</p>\n\n<pre><code class=\"language-css\">body {\npadding: 2rem;\nbackground-color: #262626;\nfont-family: \"moderna_sans-light\";\ncolor: #fff; }\n\nh1 {\nfont-family: \"moderna_sans-bold-cnd-it\";\nfont-size: 2.8rem;\nfont-weight: normal;\nline-height: 1; }\n</code></pre>\n\n<p>Flexbox transforms my header into a horizontally scrolling panel, one of the most effective ways to maintain visual hierarchy in a small screen design:</p>\n\n<pre><code class=\"language-css\">header {\ndisplay: flex;\nflex-wrap: nowrap;\noverflow-x: scroll; }\n</code></pre>\n\n<p>The flex-grow property with its value of 1 ensures all images expand to fill any available space, while flex-basis makes sure these flex items start from a minimum of 640px;</p>\n\n<pre><code class=\"language-css\">header svg {\nflex-grow: 1;\nflex-basis: 640px; }\nheader svg:not(:last-of-type) {\nmargin-right: 2rem; }\n</code></pre>\n\n<p>Finally, I add large amounts of horizontal padding and align the Morris logo to the centre of my footer:</p>\n\n<pre><code class=\"language-css\">footer {\npadding-right: 8rem;\npadding-left: 8rem;\ntext-align: center; }\n</code></pre>\n\n<p>My horizontal scrolling panel adds interest to a small screen, but the extra space available on medium-size screens allows me to show more of my quintessentially English Travellers.</p>\n\n<p>CSS Grid offers the precise placement and stacking of elements which Flexbox lacks and is the perfect choice for this header on medium to large screens. I change the display property’s value from flex to grid, then add three symmetrical columns and rows.</p>\n\n<p>While the width of the two outer columns is fixed at 270px, the inner column expands to fill all remaining space. I use a similar technique for the three rows, fixing the outer two at a height of 100px. This offsets the position of both images and adds depth to this design:</p>\n\n<pre><code class=\"language-css\">header {\ndisplay: grid;\ngrid-template-columns: 270px 1fr 270px;\ngrid-template-rows: 100px 1fr 100px; }\n</code></pre>\n\n<p>Using pseudo-class selectors and line numbers, I place the first SVG, then reduce it in size to add perspective:</p>\n\n<pre><code class=\"language-css\">header svg:first-of-type {\ngrid-column: 2 / 4;\ngrid-row: 1 / 2;\ntransform: scale(.85); }\n</code></pre>\n\n<p>Then, I place the second of my two graphics. I raise it within the stacking order by adding a higher z-index value which brings it visually closer to the viewer:</p>\n\n<pre><code class=\"language-css\">header svg:last-of-type {\ngrid-column: 1 / 3;\ngrid-row: 2 / 4;\nz-index: 2; }\n</code></pre>\n\n<p>Even a seemingly mundane even-ratio grid can result in an original layout when a design includes plenty of whitespace to help lead the eye. For this medium-size design, I apply a symmetrical six-column grid with column and rows gap values which are proportional to the width and height of a screen:</p>\n\n<pre><code class=\"language-css\">@media (min-width: 48em) {\nbody {\ndisplay: grid;\ngrid-template-columns: repeat(6, 1fr);\ncolumn-gap: 2vw;\nrow-gap: 2vh; }\n}\n</code></pre>\n\n<p>My header element fills the entire width of my grid. Then, I place the main, figure, and footer elements, adding proportionally more white space to narrow the width of my figure and footer:</p>\n\n<pre><code class=\"language-css\">header {\ngrid-column: 1 / -1; }\n\nmain {\ngrid-column: 2 / 6; }\n\nfigure {\ngrid-column: 3 / 5; }\n\nfooter {\ngrid-column: 3 / 5;\npadding-right: 4rem;\npadding-left: 4rem; }\n</code></pre>\n\n<p>This design becomes more distinguished with the space available on large screens.</p>\n\n<p>For them, I apply grid values to the body element to create the eight columns of a 6+4 compound grid:</p>\n\n<pre><code class=\"language-css\">@media (min-width: 64em) {\n\nbody {\ngrid-template-columns: 2fr 1fr 1fr 2fr 2fr 1fr 1fr 2fr; }\n}\n</code></pre>\n\n<p>Basing my medium-size design on six columns, then including the same grid in my large screen compound, helps to maintain proportions throughout all sizes of my design. Then, I reposition the four structural elements onto my new grid:</p>\n\n<pre><code class=\"language-css\">header {\ngrid-column: 1 / 8; }\n\nmain {\ngrid-column: 2 / 5;\ntext-align: right; }\n\nfigure {\ngrid-column: 5 / 7; }\n\nfooter {\ngrid-column: 4;\npadding: 0; }\n</code></pre>\n\n<p>Finally, to create a solid block of content in the centre of my design, I bind the main content to its now adjacent figure by realigning its text to the right:</p>\n\n<pre><code class=\"language-css\">main {\ntext-align: right; }\n</code></pre>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/62e8eef5-1101-431e-9e57-f8e0941b5f12/issue-10-08-inspired-design-decisions-giovanni-pintori-publicity.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/62e8eef5-1101-431e-9e57-f8e0941b5f12/issue-10-08-inspired-design-decisions-giovanni-pintori-publicity.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/62e8eef5-1101-431e-9e57-f8e0941b5f12/issue-10-08-inspired-design-decisions-giovanni-pintori-publicity.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/62e8eef5-1101-431e-9e57-f8e0941b5f12/issue-10-08-inspired-design-decisions-giovanni-pintori-publicity.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/62e8eef5-1101-431e-9e57-f8e0941b5f12/issue-10-08-inspired-design-decisions-giovanni-pintori-publicity.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/62e8eef5-1101-431e-9e57-f8e0941b5f12/issue-10-08-inspired-design-decisions-giovanni-pintori-publicity.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/62e8eef5-1101-431e-9e57-f8e0941b5f12/issue-10-08-inspired-design-decisions-giovanni-pintori-publicity.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Primary colors\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Left: Primary colors against an off-white background. Right: Primary colors stand out against this dark background. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/62e8eef5-1101-431e-9e57-f8e0941b5f12/issue-10-08-inspired-design-decisions-giovanni-pintori-publicity.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5d64c97a-3c27-4be1-acb3-e4155120c425/issue-10-09-inspired-design-decisions-giovanni-pintori-publicity.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5d64c97a-3c27-4be1-acb3-e4155120c425/issue-10-09-inspired-design-decisions-giovanni-pintori-publicity.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5d64c97a-3c27-4be1-acb3-e4155120c425/issue-10-09-inspired-design-decisions-giovanni-pintori-publicity.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5d64c97a-3c27-4be1-acb3-e4155120c425/issue-10-09-inspired-design-decisions-giovanni-pintori-publicity.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5d64c97a-3c27-4be1-acb3-e4155120c425/issue-10-09-inspired-design-decisions-giovanni-pintori-publicity.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5d64c97a-3c27-4be1-acb3-e4155120c425/issue-10-09-inspired-design-decisions-giovanni-pintori-publicity.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5d64c97a-3c27-4be1-acb3-e4155120c425/issue-10-09-inspired-design-decisions-giovanni-pintori-publicity.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      The monochromatic color palettes used in my next design. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5d64c97a-3c27-4be1-acb3-e4155120c425/issue-10-09-inspired-design-decisions-giovanni-pintori-publicity.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h4 id=\"monochromatic-palettes\">Monochromatic Palettes</h4>\n\n<p>Even after over twenty years in the business, I still find working with color the most challenging aspect of design. Perhaps that’s why I so often gravitate towards monochromatic color schemes because they make achieving a visually cohesive look quite simple.</p>\n\n<p>Monochromatic color palettes contain variations in shade, tints, and tones, by adding varying percentages of black, grey, or white to a chosen base color.</p>\n\n<ul>\n<li><strong>Shades</strong>: Darken color using black</li>\n<li><strong>Tints</strong>: Lighten color using white</li>\n<li><strong>Tones</strong>: Desaturate color using grey</li>\n</ul>\n\n<p>When they’re used for backgrounds, borders, and details, shades and tints can make a design feel harmonious.</p>\n\n<p>Using shades, tints, and tones can help to tone down vibrant colors which might draw unwanted attention to aspects of a design. They are particularly useful when developing a more varied color palette from a set of existing brand colors.</p>\n\n<p>I often choose either a purely monochromatic or partially-monochromatic palette which includes an accent color. This added color acts as a counterpoint to the base color and gives a design greater depth.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/59a88738-fc57-408c-99c9-30fbd28e694b/issue-10-10-inspired-design-decisions-giovanni-pintori-publicity.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/59a88738-fc57-408c-99c9-30fbd28e694b/issue-10-10-inspired-design-decisions-giovanni-pintori-publicity.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/59a88738-fc57-408c-99c9-30fbd28e694b/issue-10-10-inspired-design-decisions-giovanni-pintori-publicity.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/59a88738-fc57-408c-99c9-30fbd28e694b/issue-10-10-inspired-design-decisions-giovanni-pintori-publicity.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/59a88738-fc57-408c-99c9-30fbd28e694b/issue-10-10-inspired-design-decisions-giovanni-pintori-publicity.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/59a88738-fc57-408c-99c9-30fbd28e694b/issue-10-10-inspired-design-decisions-giovanni-pintori-publicity.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/59a88738-fc57-408c-99c9-30fbd28e694b/issue-10-10-inspired-design-decisions-giovanni-pintori-publicity.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"tints and tones\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Left: Shades: 100%–50% Center: Tints: 100%–50% Right: Tones: 100%–50%. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/59a88738-fc57-408c-99c9-30fbd28e694b/issue-10-10-inspired-design-decisions-giovanni-pintori-publicity.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h3 id=\"limiting-the-palette\">Limiting The Palette</h3>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d72331bd-c38d-4a03-82da-43e7c4ae2d9c/issue-10-11-inspired-design-decisions-giovanni-pintori-publicity.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d72331bd-c38d-4a03-82da-43e7c4ae2d9c/issue-10-11-inspired-design-decisions-giovanni-pintori-publicity.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d72331bd-c38d-4a03-82da-43e7c4ae2d9c/issue-10-11-inspired-design-decisions-giovanni-pintori-publicity.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d72331bd-c38d-4a03-82da-43e7c4ae2d9c/issue-10-11-inspired-design-decisions-giovanni-pintori-publicity.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d72331bd-c38d-4a03-82da-43e7c4ae2d9c/issue-10-11-inspired-design-decisions-giovanni-pintori-publicity.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d72331bd-c38d-4a03-82da-43e7c4ae2d9c/issue-10-11-inspired-design-decisions-giovanni-pintori-publicity.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d72331bd-c38d-4a03-82da-43e7c4ae2d9c/issue-10-11-inspired-design-decisions-giovanni-pintori-publicity.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"full-color version of a Pintori-inspired design\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      This full-color version of my Pintori-inspired design includes several monochromatic elements placed onto a modular grid. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d72331bd-c38d-4a03-82da-43e7c4ae2d9c/issue-10-11-inspired-design-decisions-giovanni-pintori-publicity.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Thanks to CSS Grid, background image gradients, and pseudo elements, this next Pintori-inspired design achieves enormous value from a very small set of HTML elements. I need only a headline, a single paragraph, plus seven empty divisions. I give each division its own identity. This allows me to give them their own distinctive style:</p>\n\n<pre><code class=\"language-html\">&lt;h1&gt;…&lt;/h1&gt;\n&lt;p&gt;…&lt;/p&gt;\n&lt;div id=\"panel-a\"&gt;&lt;/div&gt;\n&lt;div id=\"panel-b\"&gt;&lt;/div&gt;\n&lt;div id=\"panel-c\"&gt;&lt;/div&gt;\n&lt;div id=\"panel-d\"&gt;&lt;/div&gt;\n&lt;div id=\"panel-e\"&gt;&lt;/div&gt;\n&lt;div id=\"panel-f\"&gt;&lt;/div&gt;\n&lt;div id=\"panel-g\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>This HTML places the headline and paragraph before the seven panels, but look closely at the finished small screen design, and you’ll see this content has been reordered to place the Morris logo, then a picture of the Traveller’s front-end at the top.</p>\n\n<p>Whereas I often introduce grid properties to medium and large screens, CSS Grid is also useful for reordering content on smaller screens. For this design, I change the body element’s display value to grid, then introduce a viewport height-based gap between the intrinsic, unspecified rows:</p>\n\n<pre><code class=\"language-css\">body {\ndisplay: grid;\nrow-gap: 2vh; }\n</code></pre>\n\n<p>Then, I reorder the panels which contain my Morris Motors logo and image, plus the headline, using row line numbers:</p>\n\n<pre><code class=\"language-css\">#panel-d { grid-row: 1; }\n#panel-e { grid-row: 2; }\nh1 { grid-row: 3; }\n</code></pre>\n\n<p>Because my panel divisions have no other elements, their height will collapse to zero, leaving only their borders. To ensure there’s space to display their generated backgrounds and content, I specify a minimum height for all panels:</p>\n\n<pre><code class=\"language-css\">[id*=\"panel\"] {\nmin-height: 380px; }\n</code></pre>\n\n<p>The panel which appears first in my small screen design shows the Morris Motors logo, which I insert using a CSS generated content data URI. If you’re unfamiliar with this handy content type, a data URI is a file which has been encoded into a string. You can use a data URI anywhere in your CSS or HTML:</p>\n\n<pre><code class=\"language-html\">&lt;img src=\"data:image/png…\"&gt;\n&lt;img src=\"data:image/svg+xml…\"&gt;\n</code></pre>\n\n<pre><code class=\"language-css\">div { \nbackground-image: url(\"data:image/svg+xml…\"); }\n</code></pre>\n\n<p>When a browser finds a data URI, it decodes the content and reconstructs the original file. Data URIs aren’t limited to encoded images but are frequently used to encode PNG format images and SVGs. You will find several tools for converting images to data URIs online.</p>\n\n<p>First, I change the minimum height of this panel to match the height of my logo, then I insert the logo:</p>\n\n<pre><code class=\"language-css\">#panel-d {\nmin-height: 90px;\ntext-align: center; }\n\n#panel-d:before {\ncontent: url(\"data:image/svg+xml…\");\ndisplay: block;\nwidth: 135px;\nheight: 90px;\nmargin: 0 auto; }\n</code></pre>\n\n<p>I use a similar technique to place a background image behind my paragraph. I add repeat, position, and size properties which make the background flexible and place it always at the horizontal and vertical centre of my paragraph:</p>\n\n<pre><code class=\"language-javascript\">p {\nbackground-image: url(\"data:image/svg+xml…\"); }\n\np {\nbackground-repeat: no-repeat;\nbackground-position: 50% 50%;\nbackground-size: 50% 50%; }\n</code></pre>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/aff62299-7666-4236-8e9c-de8c82571891/issue-10-12-inspired-design-decisions-giovanni-pintori-publicity.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/aff62299-7666-4236-8e9c-de8c82571891/issue-10-12-inspired-design-decisions-giovanni-pintori-publicity.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/aff62299-7666-4236-8e9c-de8c82571891/issue-10-12-inspired-design-decisions-giovanni-pintori-publicity.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/aff62299-7666-4236-8e9c-de8c82571891/issue-10-12-inspired-design-decisions-giovanni-pintori-publicity.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/aff62299-7666-4236-8e9c-de8c82571891/issue-10-12-inspired-design-decisions-giovanni-pintori-publicity.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/aff62299-7666-4236-8e9c-de8c82571891/issue-10-12-inspired-design-decisions-giovanni-pintori-publicity.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/aff62299-7666-4236-8e9c-de8c82571891/issue-10-12-inspired-design-decisions-giovanni-pintori-publicity.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"panels with distinctive graphic design\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Each one of the panels has its own distinctive graphic design. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/aff62299-7666-4236-8e9c-de8c82571891/issue-10-12-inspired-design-decisions-giovanni-pintori-publicity.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Each one of my panels has its own distinctive graphic design. I could’ve placed images into these seven panels, but this would’ve required at least seven additional HTTP requests. So instead, I use various combinations of multiple background images using data URIs and CSS gradients to achieve the results I need.</p>\n\n<p>The first panel contains a graphic of the Morris’s hub cap over a striped blue, white, and black background. The hub cap background image comes from a data URI:</p>\n\n<pre><code class=\"language-css\">#panel-a {\nbackground-image: url(\"data:image/svg+xml…\"); }\n</code></pre>\n\n<p>Then, I add the second, striped background image using a linear-gradient:</p>\n\n<pre><code class=\"language-css\">#panel-a {\nbackground-image: url(\"data:image/svg+xml…\"),\nlinear-gradient(\nto bottom, \n#34749F,\n#34749F 65px,\n#fff 65px,\n#fff 80px,\n#262626 80px); }\n</code></pre>\n\n<p>I specify two sets of comma separated repeat, position, and size values, remembering to keep them in the same order as my background images:</p>\n\n<pre><code class=\"language-css\">#panel-a {\nbackground-repeat: no-repeat, repeat-x;\nbackground-position: 50% 100%, 0 0;\nbackground-size: 75% 75%, auto auto; }\n</code></pre>\n\n<p>This next panel includes two SVG images, followed by more complex black, yellow, and white stripes. By placing color stops with different colors at the same position in my gradient, I create a striped background with hard lines between my colors:</p>\n\n<pre><code class=\"language-css\">#panel-b {\nbackground-image: \nurl(\"data:image/svg+xml…\"),\nurl(\"data:image/svg+xml…\"),\nlinear-gradient(\nto bottom, \n#B5964D,\n#B5964D 125px,\n#262626 125px,\n#262626 140px,\n#fff 140px,\n#fff 155px,\n#262626 155px); }\n\n#panel-b {\nbackground-repeat: no-repeat, no-repeat, repeat-x;\nbackground-position: 50% 45px, 50% 190px, 0 0;\nbackground-size: 90%, 90%, auto; }\n</code></pre>\n\n<p>I developed each of my panels using different combinations of these same techniques, making them fast loading and flexible. It’s rare to find designs online which are based on a modular grid, but it is the perfect choice for this Pintori-inspired, large screen design. This modular grid is comprised of three columns and rows.</p>\n\n<p>I add grid properties to the body element, then specify my column widths to fill all available space. To make sure there’s always enough height to show the content of each panel, I use Grid’s minmax value, setting the minimum height at 300px and the maximum at 1fr:</p>\n\n<pre><code class=\"language-css\">@media (min-width: 64em) {\n\nbody {\ndisplay: grid;\ngrid-template-columns: 1fr 1fr 1fr;\ngrid-template-rows: repeat(3, minmax(300px, 1fr));\ngap: 1rem;\nmin-height: 100vh; }\n}\n</code></pre>\n\n<p>Elements in this design don’t overlap, so I use grid-template-areas for their simplicity. This design has nine grid areas, and I give each one a single letter name, a–h. As the letter d is used for two adjacent areas, the item placed using that letter will occupy both:</p>\n\n<pre><code class=\"language-css\">body {\ngrid-template-areas: \n\"a b c\"\n\"d d e\"\n\"f g h\"; }\n</code></pre>\n\n<p>In this large screen implementation, the CSS Grid minmax value controls the height of my rows, making the min-height I applied earlier redundant:</p>\n\n<pre><code class=\"language-css\">[id*=\"panel\"] {\nmin-height: none; }\n</code></pre>\n\n<p>I place my panels using area names which allows me to change where they appear in my layout without altering their position in my HTML:</p>\n\n<pre><code class=\"language-css\">#panel-a { grid-area: a; }\n#panel-b { grid-area: b; }\n#panel-c { grid-area: c; }\n#panel-d { grid-area: d; }\n#panel-e { grid-area: e; }\n#panel-f { grid-area: f; }\n#panel-g { grid-area: g; }\np { grid-area: h; }\n</code></pre>\n\n<p>While the design of my panels remains consistent across screen sizes, there’s one panel where the content and backgrounds change for larger screens. This panel contains the familiar Morris logo and what appears to be the main headline, “Style… in a BIG way.”</p>\n\n<p>To develop this panel, I first add a deep solid border at the top, followed by a data URI background image:</p>\n\n<pre><code class=\"language-css\">#panel-d {\nborder-top: 15px solid #262626;\nbackground-image: url(\"data:image/svg+xml…\"); }\n</code></pre>\n\n<p>Then, I add a second gradient background image which creates the black panel and two vertical yellow stripes:</p>\n\n<pre><code class=\"language-css\">#panel-d {\nbackground-image: url(\"data:image/svg+xml…\"),\nlinear-gradient(\nto right, \n#fff,\n#fff 280px,\n#B5964D 280px,\n#B5964D 320px,\n#fff 320px,\n#fff 335px,\n#262626 335px,\n#262626 calc(100% - 40px),\n#F2C867 calc(100% - 40px),\n#F2C867 100%); }\n</code></pre>\n\n<p>Earlier in my process, I used a :before pseudo-element to add the Morris logo to this design. For large screens, I reposition that logo to the bottom-left of my panel:</p>\n\n<pre><code class=\"language-css\">#panel-d\nposition: relative; }\n#panel-d:before {\nposition: absolute;\nbottom: 0;\nleft: 0;\nmargin: 0; }\n</code></pre>\n\n<p>My large headline is immediately descended from the HTML body and is not part of this panel, making it tricky to position across flexible screen sizes. To reproduce my design precisely, without compromising accessibility, I first use an accessible method to hide this headline visually for people who use screen readers:</p>\n\n<pre><code class=\"language-css\">h1 { \nposition: absolute !important;\nheight: 1px; \nwidth: 1px;\noverflow: hidden;\nclip: rect(1px, 1px, 1px, 1px);\nwhite-space: nowrap; }\n</code></pre>\n\n<p>Then, I reinstate the headline’s text using generated content and an :after pseudo-element. I position it to the bottom-right of my panel and replicate its bold, condensed, italic style:</p>\n\n<pre><code class=\"language-css\">#panel-d:after {\ncontent: \"Style… in a BIG way\";\nposition: absolute;\nbottom: 0;\nright: 0;\nfont-family: \"moderna_sans-bold-cnd-it\";\nfont-size: 2.8rem;\nline-height: 1;\ntext-align: right; }\n</code></pre>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/06776f16-9681-45ec-80ac-c3f9e2367bbe/issue-10-13-inspired-design-decisions-giovanni-pintori-publicity.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/06776f16-9681-45ec-80ac-c3f9e2367bbe/issue-10-13-inspired-design-decisions-giovanni-pintori-publicity.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/06776f16-9681-45ec-80ac-c3f9e2367bbe/issue-10-13-inspired-design-decisions-giovanni-pintori-publicity.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/06776f16-9681-45ec-80ac-c3f9e2367bbe/issue-10-13-inspired-design-decisions-giovanni-pintori-publicity.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/06776f16-9681-45ec-80ac-c3f9e2367bbe/issue-10-13-inspired-design-decisions-giovanni-pintori-publicity.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/06776f16-9681-45ec-80ac-c3f9e2367bbe/issue-10-13-inspired-design-decisions-giovanni-pintori-publicity.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/06776f16-9681-45ec-80ac-c3f9e2367bbe/issue-10-13-inspired-design-decisions-giovanni-pintori-publicity.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Pintori-inspired design\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Left: Monochrome version. Right: Full-color version of this Pintori-inspired design. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/06776f16-9681-45ec-80ac-c3f9e2367bbe/issue-10-13-inspired-design-decisions-giovanni-pintori-publicity.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6930805d-ee13-47ef-92c5-45835de38650/issue-10-14-inspired-design-decisions-giovanni-pintori-publicity.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6930805d-ee13-47ef-92c5-45835de38650/issue-10-14-inspired-design-decisions-giovanni-pintori-publicity.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6930805d-ee13-47ef-92c5-45835de38650/issue-10-14-inspired-design-decisions-giovanni-pintori-publicity.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6930805d-ee13-47ef-92c5-45835de38650/issue-10-14-inspired-design-decisions-giovanni-pintori-publicity.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6930805d-ee13-47ef-92c5-45835de38650/issue-10-14-inspired-design-decisions-giovanni-pintori-publicity.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6930805d-ee13-47ef-92c5-45835de38650/issue-10-14-inspired-design-decisions-giovanni-pintori-publicity.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6930805d-ee13-47ef-92c5-45835de38650/issue-10-14-inspired-design-decisions-giovanni-pintori-publicity.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Four complementary palettes include two colors on opposite sides of a color wheel\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Four complementary palettes include two colors on opposite sides of a color wheel. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6930805d-ee13-47ef-92c5-45835de38650/issue-10-14-inspired-design-decisions-giovanni-pintori-publicity.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h4 id=\"complementary-palettes\">Complementary Palettes</h4>\n\n<p>Colors that complement each other sit on opposite sides of a color wheel. But, although it’s easy to understand their mathematical relationship, working with complementary colors can be challenging.</p>\n\n<p>Adjacent complementary color combinations can look harsh, and rather than complement each other, can feel unharmonious. To prevent them from clashing, use shades, tints, or tones of complementary colors which will also help to expand your palette of usable colors.</p>\n\n<p>Alternatively, use split complementary colors where instead of opposing colors, the palette includes two colors on either side of the complementary.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f443793a-4051-4502-b8bb-553b74937496/issue-10-15-inspired-design-decisions-giovanni-pintori-publicity.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f443793a-4051-4502-b8bb-553b74937496/issue-10-15-inspired-design-decisions-giovanni-pintori-publicity.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f443793a-4051-4502-b8bb-553b74937496/issue-10-15-inspired-design-decisions-giovanni-pintori-publicity.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f443793a-4051-4502-b8bb-553b74937496/issue-10-15-inspired-design-decisions-giovanni-pintori-publicity.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f443793a-4051-4502-b8bb-553b74937496/issue-10-15-inspired-design-decisions-giovanni-pintori-publicity.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f443793a-4051-4502-b8bb-553b74937496/issue-10-15-inspired-design-decisions-giovanni-pintori-publicity.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f443793a-4051-4502-b8bb-553b74937496/issue-10-15-inspired-design-decisions-giovanni-pintori-publicity.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Split complementary palette includes two colors on either side of the complementary.\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Split complementary palette includes two colors on either side of the complementary. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f443793a-4051-4502-b8bb-553b74937496/issue-10-15-inspired-design-decisions-giovanni-pintori-publicity.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h3 id=\"complementing-colors\">Complementing Colors</h3>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4b59a809-ffa1-47e1-9629-f704aa199e20/issue-10-16-inspired-design-decisions-giovanni-pintori-publicity.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4b59a809-ffa1-47e1-9629-f704aa199e20/issue-10-16-inspired-design-decisions-giovanni-pintori-publicity.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4b59a809-ffa1-47e1-9629-f704aa199e20/issue-10-16-inspired-design-decisions-giovanni-pintori-publicity.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4b59a809-ffa1-47e1-9629-f704aa199e20/issue-10-16-inspired-design-decisions-giovanni-pintori-publicity.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4b59a809-ffa1-47e1-9629-f704aa199e20/issue-10-16-inspired-design-decisions-giovanni-pintori-publicity.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4b59a809-ffa1-47e1-9629-f704aa199e20/issue-10-16-inspired-design-decisions-giovanni-pintori-publicity.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4b59a809-ffa1-47e1-9629-f704aa199e20/issue-10-16-inspired-design-decisions-giovanni-pintori-publicity.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Complementary pairings add personality to this Pintori-inspired design.\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Complementary pairings add personality to this Pintori-inspired design. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4b59a809-ffa1-47e1-9629-f704aa199e20/issue-10-16-inspired-design-decisions-giovanni-pintori-publicity.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Several colorfully complementary Morris Traveller blueprints overlap in my next Pintori-inspired design. The HTML needed to develop this design is as minimal as the depictions of this car. A banner division includes an SVG of the Morris logo, and the main element contains the headline and running text.</p>\n\n<p>But, the flexibility of this design across several screen sizes comes from using two picture elements, each containing three images. I include one picture element in the header, then another in my footer:</p>\n\n<pre><code class=\"language-html\">&lt;div class=\"banner\"&gt;\n  &lt;svg&gt;…&lt;/svg&gt;\n&lt;/div&gt;\n\n&lt;header&gt;\n  &lt;picture&gt;\n    &lt;source media=\"(min-width: 72em)\"&gt;\n    &lt;source media=\"(min-width: 48em)\"&gt;\n    &lt;img&gt;\n  &lt;/picture&gt;\n&lt;/header&gt;\n\n&lt;main&gt;\n  &lt;h1&gt;&lt;b&gt;…&lt;/b&gt;&lt;/h1&gt;\n  &lt;p&gt;…&lt;/p&gt;\n&lt;/main&gt;\n\n&lt;footer&gt;\n  &lt;picture&gt;\n    &lt;source media=\"(min-width: 72em)\"&gt;\n    &lt;source media=\"(min-width: 48em)\"&gt;\n    &lt;img&gt;\n  &lt;/picture&gt;\n&lt;/footer&gt;\n</code></pre>\n\n<p>Every one of my development projects starts by adding the now familiar foundation styles, this time adding an off-white background color and almost black sans-serif text:</p>\n\n<pre><code class=\"language-css\">body {\nbackground-color: #f3f2f2;\nfont-family: \"moderna_sans-light\";\ncolor: #262626; }\n</code></pre>\n\n<p>I align the content of my banner division to the centre, then set the logo’s maximum width to a diminutive 150px:</p>\n\n<pre><code class=\"language-css\">.banner {\ntext-align: center; }\n\n.banner svg {\nmax-width: 150px; }\n</code></pre>\n\n<p>The main headline in this design is set in the bold, condensed, italic style of Moderna Sans:</p>\n\n<pre><code class=\"language-css\">h1 {\nfont-family: \"moderna_sans-bold-cnd-it\";\nfont-size: 2.027rem;\nfont-weight: normal;\nline-height: 1.2; }\n</code></pre>\n\n<p>Part of this headline is enclosed within a span element which enables me to change its color to match other aspects of this design, including the bull emblem at the center of the Morris Motors logo:</p>\n\n<pre><code class=\"language-css\">h1 span {\ncolor: #df4561; }\n\n#logo .emblem {\nfill: #df4561; }\n</code></pre>\n\n<p>On small screens, both the header and footer contain a single Traveller image. When there’s space to place two Travellers side-by-side, a browser changes the images in the two picture elements.</p>\n\n<p>For medium-size screens, I make use of the extra space available space and introduce a four-column symmetrical grid:</p>\n\n<pre><code class=\"language-css\">@media (min-width: 48em) {\n\nbody {\ndisplay: grid;\ngrid-template-columns: repeat(4, 1fr); }\n}\n</code></pre>\n\n<p>I place the banner division in the two centre columns, centre my logo, then shift it vertically to fit between the bumpers of my two Travellers:</p>\n\n<pre><code class=\"language-css\">.banner {\ngrid-column: 2 / 4; \ntext-align: center;\ntransform: translateY(2vh); }\n</code></pre>\n\n<p>Both my header and footer span the grid from edge to edge, while placing the main content into the two centre columns creates a comfortable measure:</p>\n\n<pre><code class=\"language-css\">header,\nfooter {\ngrid-column: 1 / -1; }\nmain {\ngrid-column: 2 / 4; }\n</code></pre>\n\n<p>The most significant changes to the layout of this design can be seen at larger screen sizes. Despite their names, you needn’t place a header or footer element at the top and bottom of a layout. They can be placed anywhere within a design, including on the left or right.</p>\n\n<p>For more precise control over my layout, I increase the number of columns in my grid from four to eight, then introduce two rows. The first row has a fixed height of 160px, while the height of the second will be dictated by the content:</p>\n\n<pre><code class=\"language-css\">@media (min-width: 72em) {\n\nbody {\ngrid-template-columns: repeat(8, 1fr);\ngrid-template-rows: 160px auto;\ncolumn-gap: 2vw; }\n}\n</code></pre>\n\n<p>I reposition my banner division across three columns and set the main element below to match:</p>\n\n<pre><code class=\"language-css\">.banner,\nmain {\ngrid-column: 3 / 5; }\n</code></pre>\n\n<p>Then, I place the footer into the first three columns, and the header into the final four to create an asymmetrical layout from the symmetrical grid:</p>\n\n<pre><code class=\"language-css\">header {\ngrid-column: 5 / -1; }\n\nfooter {\ngrid-column: 1 / 4; }\n</code></pre>\n\n<p>Both header and footer fill the height of my grid from top to bottom:</p>\n\n<pre><code class=\"language-css\">header,\nfooter {\ngrid-row: 1 / 3; }\n</code></pre>\n\n<p>While the banner division occupies the first row:</p>\n\n<pre><code class=\"language-css\">.banner {\ngrid-row: 1;  }\n</code></pre>\n\n<p>And the main element fits neatly underneath it:</p>\n\n<pre><code class=\"language-css\">main {\ngrid-row: 2 / 3;\nz-index: 2; }\n</code></pre>\n\n<p>Implementing light themes and dark designs has become part of everyday product and website design since Apple introduced a dark mode to iOS and macOS. Developing dark/light modes is easy, and there’s now a widely supported media query for this user preference. There are three values to choose from:</p>\n\n<ul>\n<li><strong>no-preference</strong>: Someone hasn’t expressed a preference</li>\n<li><strong>light</strong>: Someone has selected a light theme</li>\n<li><strong>dark</strong>: Someone has chosen a dark theme</li>\n</ul>\n\n<p>Introducing a dark mode version of this design involves little more than adding changes to certain color values within that media query. For example, by reversing the background and foreground text colors, and changing the path fill colors in my SVG logo:</p>\n\n<pre><code class=\"language-css\">@media (prefers-color-scheme: dark) {\n\nbody {\nbackground-color: #262626;\ncolor: #fff; }\n#logo .metal,\n#logo .emblem {\nfill: #fff; }\n}\n</code></pre>\n\n<p>Deciding on dark mode colors sometimes involves more than simply inverting them, making white backgrounds black, and the black text white. Pure white text on full black backgrounds makes reading long passages of text tiring for the eye, so consider softening this contrast by using an off-white:</p>\n\n<pre><code class=\"language-css\">body {\ncolor: #f3f2f2; }\n</code></pre>\n\n<p>Sometimes, even vibrant complementary colors can appear different when they’re placed against a dark background. Thankfully, CSS filters can increase a color’s brightness, saturation, or both, with no need to export a different version  of a file for darker backgrounds:</p>\n\n<pre><code class=\"language-css\">header img,\nfooter img {\nfilter: saturate(1.5) brightness(1.1); }\n</code></pre>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/455d8775-f5de-4c57-9657-379ac9bf2f72/issue-10-17-inspired-design-decisions-giovanni-pintori-publicity.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/455d8775-f5de-4c57-9657-379ac9bf2f72/issue-10-17-inspired-design-decisions-giovanni-pintori-publicity.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/455d8775-f5de-4c57-9657-379ac9bf2f72/issue-10-17-inspired-design-decisions-giovanni-pintori-publicity.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/455d8775-f5de-4c57-9657-379ac9bf2f72/issue-10-17-inspired-design-decisions-giovanni-pintori-publicity.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/455d8775-f5de-4c57-9657-379ac9bf2f72/issue-10-17-inspired-design-decisions-giovanni-pintori-publicity.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/455d8775-f5de-4c57-9657-379ac9bf2f72/issue-10-17-inspired-design-decisions-giovanni-pintori-publicity.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/455d8775-f5de-4c57-9657-379ac9bf2f72/issue-10-17-inspired-design-decisions-giovanni-pintori-publicity.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Vivid complementary colors against a dark background.\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Vivid complementary colors against a dark background. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/455d8775-f5de-4c57-9657-379ac9bf2f72/issue-10-17-inspired-design-decisions-giovanni-pintori-publicity.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h3 id=\"brightening-colors\">Brightening Colors</h3>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b6b57e87-d1fc-4b43-91d9-d00a77bc0b5c/issue-10-18-inspired-design-decisions-giovanni-pintori-publicity.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b6b57e87-d1fc-4b43-91d9-d00a77bc0b5c/issue-10-18-inspired-design-decisions-giovanni-pintori-publicity.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b6b57e87-d1fc-4b43-91d9-d00a77bc0b5c/issue-10-18-inspired-design-decisions-giovanni-pintori-publicity.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b6b57e87-d1fc-4b43-91d9-d00a77bc0b5c/issue-10-18-inspired-design-decisions-giovanni-pintori-publicity.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b6b57e87-d1fc-4b43-91d9-d00a77bc0b5c/issue-10-18-inspired-design-decisions-giovanni-pintori-publicity.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b6b57e87-d1fc-4b43-91d9-d00a77bc0b5c/issue-10-18-inspired-design-decisions-giovanni-pintori-publicity.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b6b57e87-d1fc-4b43-91d9-d00a77bc0b5c/issue-10-18-inspired-design-decisions-giovanni-pintori-publicity.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Increased lightness and saturation\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Increasing lightness and saturation makes colors appear more vibrant against dark backgrounds. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b6b57e87-d1fc-4b43-91d9-d00a77bc0b5c/issue-10-18-inspired-design-decisions-giovanni-pintori-publicity.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>In my final Pintori-inspired design, colorful rectangles float above the dark grey background. This design needs just three structural elements; a header which again includes the Morris Motors logo, a figure element which contains not one, not two, but three outline images of the Morris Traveller, and the main element containing my running text:</p>\n\n<pre><code class=\"language-html\">&lt;header&gt;\n  &lt;svg&gt;…&lt;/svg&gt;\n&lt;/header&gt;\n\n&lt;figure&gt;\n  &lt;img&gt;\n  &lt;img&gt;\n  &lt;img&gt;\n&lt;/figure&gt;\n\n&lt;main&gt;\n  &lt;h1&gt;…&lt;/h1&gt;\n  &lt;p&gt;…&lt;/p&gt;\n  &lt;p&gt;…&lt;/p&gt;\n&lt;/main&gt;\n</code></pre>\n\n<p>To this minimal HTML, I add four purely presentational SVG images. As I don’t want these to be announced by assistive technologies, I add an ARIA hidden attribute to each of them:</p>\n\n<pre><code class=\"language-html\">&lt;svg id=\"bg-1\" aria-hidden=\"true\"&gt;…&lt;/svg&gt;\n&lt;svg id=\"bg-2\" aria-hidden=\"true\"&gt;…&lt;/svg&gt;\n&lt;svg id=\"bg-3\" aria-hidden=\"true\"&gt;…&lt;/svg&gt;\n&lt;svg id=\"bg-4\" aria-hidden=\"true\"&gt;…&lt;/svg&gt;\n</code></pre>\n\n<p>First, I specify foundation styles for background and foreground colors, then apply those same presentational SVG images to the background using data URIs:</p>\n\n<pre><code class=\"language-css\">body {\nbackground-color: #262626; }\nbackground-image: \nurl(\"data:image/svg+xml…\"),\nurl(\"data:image/svg+xml…\"),\nurl(\"data:image/svg+xml…\"),\nurl(\"data:image/svg+xml…\");\ncolor: #f3f2f2; }\n</code></pre>\n\n<p>Then, I specify background repeat and position values, placing each SVG in the centre, and stacking them vertically on the page. Finally, I set their sizes:</p>\n\n<pre><code class=\"language-css\">body {\nbackground-repeat: no-repeat;\nbackground-position:\n50% 20px,\n50% 240px,\n50% 460px,\n50% 680px;\nbackground-size: \n200px 200px,\n300px 200px,\n200px 200px,\n100px 100px; }\n</code></pre>\n\n<p>So the logo in my header matches the size of the SVG background behind it, I restrict its maximum width, then centre it using horizontal margins:</p>\n\n<pre><code class=\"language-css\">header {\nmax-width: 200px;\nmargin: 0 auto; }\n</code></pre>\n\n<p>Again, a horizontal scrolling panel is a useful way to present my three outlined Traveller images, so I set their figure’s display value to flex and prevent any horizontal overflow by setting its value to scroll:</p>\n\n<pre><code class=\"language-css\">figure {\ndisplay: flex;\nflex-wrap: nowrap;\nmargin: 0;\npadding: 0;\nmax-width: 100vw;\noverflow-x: scroll; }\n</code></pre>\n\n<p>Then, I specify a flex-basis value and an height to match:</p>\n\n<pre><code class=\"language-css\">figure img {\nflex-grow: 1;\nflex-basis: 320px;\nheight: 320px; }\n</code></pre>\n\n<p>I applied my four colorful SVGs as background images, so I don’t want them to appear on small screens. Using attribute selectors to precisely match a style’s property and value is an ideal way to target elements without resorting to additional class attributes:</p>\n\n<pre><code class=\"language-css\">[aria-hidden=\"true\"] {\ndisplay: none; }\n</code></pre>\n\n<p>This design needs only one media query breakpoint to apply layout styles for medium and large screens. I apply eight equal-width columns and eight rows, then remove the background images I applied for small screens:</p>\n\n<pre><code class=\"language-css\">@media (min-width: 48em) {\n\nbody {\ndisplay: grid;\ngrid-template-columns: repeat(8, 1fr);\ngrid-template-rows: repeat(8, auto);\nbackground-image: none; }\n</code></pre>\n\n<p>Then, I place the header and main elements between line numbers in my grid:</p>\n\n<pre><code class=\"language-css\">header {\ngrid-column: 1;\ngrid-row: 1; }\nmain {\ngrid-column: 5 / 8;\ngrid-row: 5 / 7; }\n</code></pre>\n\n<p>I need to place the figure’s images and division onto my grid, not the figure itself, so I change its display property to contents, which effectively removes it from the DOM for styling purposes:</p>\n\n<pre><code class=\"language-css\">figure {\ndisplay: contents; }\n</code></pre>\n\n<p>Then, I place each Traveller image into a different set of grid columns and rows, which alters their sizes along with their positions:</p>\n\n<pre><code class=\"language-css\">figure img:nth-of-type(1) {\ngrid-column: 3 / 6;\ngrid-row: 2 / 4; }\n\nfigure img:nth-of-type(2) {\ngrid-column: 5 / 8;\ngrid-row: 2 / 5; }\n\nfigure img:nth-of-type(3) {\ngrid-column: 3 / 4;\ngrid-row: 5 / 6; }\n</code></pre>\n\n<p>CSS transforms are ideal tools for fine-tuning the size and position of elements within grids’ constraints. They’re also useful for adding unusual touches to a design. I use rotate, scale, and translate to finely tune these images:</p>\n\n<pre><code class=\"language-css\">figure img:nth-of-type(1) {\ntransform: rotate(-20deg) translateX(-12rem); }\nfigure img:nth-of-type(2) { transform: scale(1.1); }\nfigure img:nth-of-type(3) { transform: scale(1.25); }\n</code></pre>\n\n<p>I now reveal the colorful, presentational rectangles and push them behind my content by setting a low z-index value. Where these images overlap, a mix-blend-mode adds even more color to this design:</p>\n\n<pre><code class=\"language-css\">[aria-hidden=\"true\"] { \ndisplay: block;\nz-index: 0; \nmix-blend-mode: multiply; }\n</code></pre>\n\n<p>In this final step, I place these shapes onto my grid, using rotations to add even more personality to this already colorful design:</p>\n\n<pre><code class=\"language-css\">.bg-1 {\ngrid-column: 2 / 4;\ngrid-row: 2 / 4;\ntransform: rotate(-30deg);\ntransform-origin: 75% 50%; }\n\n.bg-2 {\ngrid-column: 4 / 8;\ngrid-row: 2 / 5; }\n\n.bg-3 {\ngrid-column: 3 / 5;\ngrid-row: 4 / 6; }\n\n.bg-4 {\ngrid-column: 4 / 5;\ngrid-row: 6 / 7;\ntransform: rotate(5deg);\ntransform-origin: 0 0; }\n</code></pre>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e312b5d2-e8cf-4c0b-8f78-15515776fce9/issue-10-19-inspired-design-decisions-giovanni-pintori-publicity.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e312b5d2-e8cf-4c0b-8f78-15515776fce9/issue-10-19-inspired-design-decisions-giovanni-pintori-publicity.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e312b5d2-e8cf-4c0b-8f78-15515776fce9/issue-10-19-inspired-design-decisions-giovanni-pintori-publicity.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e312b5d2-e8cf-4c0b-8f78-15515776fce9/issue-10-19-inspired-design-decisions-giovanni-pintori-publicity.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e312b5d2-e8cf-4c0b-8f78-15515776fce9/issue-10-19-inspired-design-decisions-giovanni-pintori-publicity.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e312b5d2-e8cf-4c0b-8f78-15515776fce9/issue-10-19-inspired-design-decisions-giovanni-pintori-publicity.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e312b5d2-e8cf-4c0b-8f78-15515776fce9/issue-10-19-inspired-design-decisions-giovanni-pintori-publicity.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Left: The original colors for my design. Right: Increasing lightness and saturation by 10% increases their vibrancy.\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Left: The original colors for my design. Right: Increasing lightness and saturation by 10% increases their vibrancy. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e312b5d2-e8cf-4c0b-8f78-15515776fce9/issue-10-19-inspired-design-decisions-giovanni-pintori-publicity.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p><strong>NB:</strong> <em>Smashing members have access to a beautifully designed PDF of Andy’s Inspired Design Decisions magazine and full code examples from this article. You can also <a href=\"https://stuffandnonsense.co.uk/inspired-design-decisions/shop/\">buy the PDF and examples</a> from this, and every issue from Andy’s website.</em></p>\n\n<h4 id=\"read-more-from-the-series-1\">Read More From The Series</h4>\n\n<ul>\n<li><a href=\"https://www.smashingmagazine.com/2019/06/inspired-design-decisions-avaunt-magazine/\">Inspired Design Decisions: Avaunt Magazine</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2019/07/inspired-design-decisions-pressing-matters/\">Inspired Design Decisions: Pressing Matters</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2019/08/inspired-design-decisions-ernest-journal\">Inspired Design Decisions: Ernest Journal</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2019/09/inspired-design-decisions-alexey-brodovitch/\">Inspired Design Decisions: Alexey Brodovitch</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2019/10/inspired-design-decisions-bea-feitler/\">Inspired Design Decisions: Bea Feitler</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2020/03/inspired-design-decisions-neville-brody/\">Inspired Design Decisions: Neville Brody</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2020/03/inspired-design-decisions-otto-storch/\">Inspired Design Decisions: Otto Storch</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2020/04/inspired-design-decisions-herb-lubalin/\">Inspired Design Decisions: Herb Lubalin</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2020/05/inspired-design-decisions-max-huber/\">Inspired Design Decisions: Max Huber</a></li>\n</ul>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\">\n  <span>(ra, yk, il)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        ",
      "content": "With one or two occasional exceptions, I’ve spent the past twenty-two years designing for countless clients. A few of these projects lasted a year, some several months, but the majority for no more than a few weeks.\nBeing completely absorbed for a few weeks or months in designing a product interface or a website can be a thrill. It often starts with the gratification which comes from winning the work.",
      "contentSnippet": "With one or two occasional exceptions, I’ve spent the past twenty-two years designing for countless clients. A few of these projects lasted a year, some several months, but the majority for no more than a few weeks.\nBeing completely absorbed for a few weeks or months in designing a product interface or a website can be a thrill. It often starts with the gratification which comes from winning the work.",
      "guid": "https://www.smashingmagazine.com/2020/06/inspired-design-decisions-giovanni-pintori/",
      "isoDate": "2020-06-26T14:00:00.000Z"
    },
    {
      "creator": "Philip Kiely",
      "title": "Django Highlights: Wrangling Static Assets And Media Files (Part 4)",
      "link": "https://www.smashingmagazine.com/2020/06/django-highlights-wrangling-static-assets-media-files-part-4/",
      "pubDate": "Thu, 25 Jun 2020 12:30:00 +0000",
      "author": "Philip Kiely",
      "content:encoded": "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2020/06/django-highlights-wrangling-static-assets-media-files-part-4/\" />\n              <title>Django Highlights: Wrangling Static Assets And Media Files (Part 4)</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>Django Highlights: Wrangling Static Assets And Media Files (Part 4)</h1>\n                  \n                    \n                    <address>Philip Kiely</address>\n                  \n                  <time datetime=\"2020-06-25T12:30:00&#43;00:00\" class=\"op-published\">2020-06-25T12:30:00+00:00</time>\n                  <time datetime=\"2020-06-25T12:30:00&#43;00:00\" class=\"op-modified\">2020-07-10T03:35:48+00:00</time>\n                </header>\n                \n\n<p>Django websites involve a lot of files. It’s not just source code for the configuration, models, views, and templates, but also static assets: CSS and JavaScript, images, icons. As if that wasn’t enough already, sometimes users come along and want to upload their own files to your website. It’s enough to make any developer incredulous. Files everywhere!</p>\n\n<p>Here’s where I wish I could say (without caveats): “Don’t worry, Django has your back!” But unfortunately, when dealing with static assets and media files, there are a <em>lot</em> of caveats to deal with.</p>\n\n<p>Today, we’ll address storing and serving files for both single-server and scalable deployments while considering factors like compression, caching, and availability. We’ll also discuss the costs and benefits of CDNs and dedicated file storage solutions.</p>\n\n<p><strong>Note</strong>: <em>This is not a tutorial on how to deploy a Django site to any specific platform. Instead, like the other articles in the Django Highlights series (see below), it’s intended as a guide for front-end developers and designers to understand other parts of the process of creating a web application. Today, we’re focusing on what happens after the style hotfix or beautiful graphic you just finished is pushed to master. Together, we’ll develop an intuition for the strategies available to Django developers for serving these files to users worldwide in a secure, performant, and cost-effective manner.</em></p>\n\n<h4><span class=\"rh\">Previous Parts</span> In The Series:</h4>\n\n<ul>\n<li><a href=\"https://www.smashingmagazine.com/2020/02/django-highlights-user-models-authentication/\">Part 1</a>: User Models And Authentication</li>\n<li><a href=\"https://www.smashingmagazine.com/2020/04/django-highlights-templating-saves-lines/\">Part 2</a>: Templating Saves Lines</li>\n<li><a href=\"https://www.smashingmagazine.com/2020/04/django-highlights-models-admin-relational-database/\">Part 3</a>: Models, Admin, And Harnessing The Relational Database</li>\n</ul>\n\n\n  <div data-component=\"FeaturePanel\" data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container hidden\"></div>\n\n\n<h3 id=\"definitions\">Definitions</h3>\n\n<p>Most of these terms are pretty straightforward, but it’s worth taking a moment to establish a shared vocabulary for this discussion.</p>\n\n<p>The three types of files in a live Django application are:</p>\n\n<ol>\n<li><strong>Source Code</strong><br />\nThe Python and HTML files that are created with the Django framework. These files are the core of the application. Source code files are generally pretty small, measured in kilobytes.</li>\n<li><strong>Static Files</strong><br />\nAlso called &ldquo;static assets,&rdquo; these files include CSS and JavaScript, both written by the application developer and third-party libraries, as well as PDFs, software installers, images, music, videos, and icons. These files are only used client-side. Static files range from a few kilobytes of CSS to gigabytes of video.</li>\n<li><strong>Media Files</strong><br />\nAny file uploaded by a user, from profile pictures to personal documents, is called a media file. These files need to be securely and reliably stored and retrieved for the user. Media files can be of any size, the user might upload a couple of kilobytes of plaintext to a few gigabytes of video. If you’re on the latter end of this scale, you probably need more specialized advice than this article is prepared to give.</li>\n</ol>\n\n<p>The two types of Django deployments are:</p>\n\n<ol>\n<li><strong>Single-Server</strong><br />\nA single-server Django deployment is exactly what it sounds like: everything lives on a single server. This strategy is very simple and closely resembles the development environment, but cannot handle large or inconsistent amounts of traffic effectively. The single-server approach is only applicable for learning or demonstration projects, not real-word applications that require reliable uptime.</li>\n<li><strong>Scalable</strong><br />\nThere are lots of different ways to deploy a Django project that allows it to scale to meet user demand. These strategies often involve spinning up and down numerous servers and using tools like load balancers and managed databases. Fortunately, we can effectively lump everything more complex than a single-server deployment into this category for the purposes of this article.</li>\n</ol>\n\n<h3 id=\"option-1-default-django\">Option 1: Default Django</h3>\n\n<p>Small projects benefit from simple architecture. Django’s default handling of static assets and media files is just that: simple. For each, you have a root folder that stores the files and lives right next to the source code on the server. Simple. These root folders are generated and managed mostly through the <em>yourproject/settings.py</em> configuration.</p>\n\n<h4 id=\"static-assets\">Static Assets</h4>\n\n<p>The most important thing to understand when working with static files in Django is the <code>python manage.py collectstatic</code> command. This command rifles through the <em>static</em> folder of each app in the Django project and copies all static assets to the root folder. Running this command is an important part of deploying a Django project. Consider the following directory structure:</p>\n\n<pre><code class=\"language-py\">- project\n  - project\n    - settings.py\n    - urls.py\n    - ...\n  - app1\n    - static/\n      - app1\n        - style.css\n        - script.js\n        - img.jpg\n    - templates/\n    - views.py\n    - ...\n  - app2\n    - static/\n      - app2\n        - style.css\n        - image.png\n    - templates/\n    - views.py\n    - ...</code></pre>\n\n<p>Also assume the following settings in <em>project/settings.py</em>:</p>\n\n<pre><code class=\"language-py\">STATIC_URL = \"/static/\"\nSTATIC_ROOT = \"/path/on/server/to/djangoproject/static\"</code></pre>\n\n<p>Running the <code>python manage.py collectstatic</code> command will create the following folder on the server:</p>\n\n<pre><code class=\"language-py\">- /path/on/server/to/djangoproject/static\n  - app1\n    - style.css\n    - script.js\n    - img.jpg\n  - app2\n    - style.css\n    - image.png</code></pre>\n\n<p>Notice that within each static folder, there’s another folder with the app’s name. This is to prevent namespacing conflicts after the static files are collected; as you can see in the above file structure this keeps <em>app1/style.css</em> and <em>app2/style.css</em> distinct. From here, the application will look for static files in this structure at the <code>STATIC_ROOT</code> during production. As such, reference static files as follows in a template in <em>app1/templates/</em>:</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-css\">{% load static %}\n&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"{% static \"app1/style.css\" %}\"&gt;</code></pre>\n</div>\n\n<p>Django automatically figures out where to get the static file from in development to model this behavior, you do not need to run <code>collectstatic</code> during development.</p>\n\n<p>For more details, see <a href=\"https://docs.djangoproject.com/en/3.0/howto/static-files/\">the Django documentation</a>.</p>\n\n<h4 id=\"media-files\">Media Files</h4>\n\n<p>Imagine a professional networking site with a database of users. Each of those users would have an associated profile, which might contain, among other things, an avatar image and a resume document. Here’s a short example model of that information:</p>\n\n<pre><code class=\"language-py\">from django.db import models\nfrom django.contrib.auth.models import User\n\ndef avatar_path(instance, filename):\n    return \"avatar_{}_{}\".format(instance.user.id, filename)\n\nclass Profile(models.Model):\n    user = models.OneToOneField(User, on_delete=models.CASCADE)\n    resume = models.FileField(upload_to=\"path/string\")\n    avatar = models.ImageField(upload_to=avatar_path)</code></pre>\n\n<p>For this to work, you need the following options in <em>project/settings.py</em>, like with static assets:</p>\n\n<pre><code class=\"language-py\">MEDIA_URL = \"/media/\"\nMEDIA_ROOT = \"/path/on/server/to/media\"</code></pre>\n\n<p>An <code>ImageField</code> inherits from <code>FileField</code>, so it shares the same parameters and capabilities. Both fields have an optional <code>upload_to</code> argument, which takes a string that is a path and appends it to the <code>MEDIA_ROOT</code> to store the file, which is then accessible by the same path on top of <code>MEDIA_URL</code>. The <code>upload_to</code> argument can also take a function that returns a string, as demonstrated with the <code>avatar_path</code> function.</p>\n\n<p>Make sure to omit the media files directory and its contents from version control. Its contents may conflict when two developers test the same application on different machines, and it is, unlike static assets, not a part of the deployable Django application.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n\n\n\n<h3 id=\"option-2-django-with-services\">Option 2: Django With Services</h3>\n\n<p>My guiding philosophy is to use tools for what they’re best at. Django is an amazing framework, and it provides great tooling out of the box for user authentication, server-side rendering, working with models and forms, administrative functions, and dozens of other essential aspects of building web applications. However, its tooling for handling static assets and media files is not, in my opinion, well-suited for production on scalable sites. The Django core developers recognize that many people choose alternate approaches to handling these files in production; the framework is very good at getting out of your way when you do. Most Django sites intended for general use will want to incorporate static assets and handle media files using these non-Django-specific approaches.</p>\n\n<h4 id=\"static-assets-on-a-cdn\">Static Assets On A CDN</h4>\n\n<p>While small-to-medium projects can get away without one, a CDN (content delivery network) is easy to use and improves the performance of applications of any size. A CDN is a network of servers, generally worldwide, that distributes and serves web content, mostly static assets. Popular CDNs include <a href=\"https://www.cloudflare.com/cdn/\">Cloudflare CDN</a>, <a href=\"https://aws.amazon.com/cloudfront/\">Amazon CloudFront</a>, and <a href=\"https://www.fastly.com/products/cdn\">Fastly</a>. To use a CDN, you upload your static files, then in your application reference them as follows:</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-py\">&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.example.com/path/to/your/files/app1/style.css\"&gt;</code></pre>\n</div>\n\n<p>This process is easy to integrate with your Django deployment scripts. After running the <code>python manage.py collectstatic</code> command, copy the generated directory to your CDN (a process that varies substantially based on the service you’re using), then remove the static assets from the Django deployment package.</p>\n\n<p>In development, you’ll want to access different copies of your static assets than in production. This way, you can make changes locally without affecting the production site. You can either use local assets or run a second instance of the CDN to deliver the files. Configure <em>yourproject/settings.py</em> with some custom variable, like <code>CDN_URL</code>, and use that value in your templates to ensure you’re using the correct version of assets in development and production.</p>\n\n<p>One final note is that many libraries for CSS and JavaScript have free CDNs that most websites can use. If you’re loading, say, Bootstrap 4 or underscore.js, you can skip the hassle of using your own copy in development and the expense of serving your own copies in production by using these public CDNs.</p>\n\n<h4 id=\"media-files-with-a-dedicated-filestore\">Media Files with a Dedicated Filestore</h4>\n\n<p>No production Django site should store user files in a simple <em>/media/</em> folder somewhere on the server that runs the site. Here are three of the many reasons why not to:</p>\n\n<ol>\n<li>If you need to scale up the site by adding multiple servers, you need some way of copying and syncing the uploaded files across those servers.</li>\n<li>If a server crashes, the source code is backed up in your version control system, but media files aren’t backed up by default, unless you configured your server to do so, but for that effort you’d be better off using a dedicated filestore.</li>\n<li>In case of malicious activity, it’s somewhat better to keep user-uploaded files on a separate server from the one running the application, although this in no way removes the requirement to validate user-uploaded files.</li>\n</ol>\n\n<p>Integrating a third party to store your user-uploaded files is really easy. You don’t need to change anything in your code, except maybe removing or modifying the <code>upload_to</code> value of <code>FileField</code>s in your models, and configuring a few settings. For example, if you were planning to store your files in AWS S3, you’d want to do the following, which is very similar to the process of storing files with Google Cloud, Azure, Backblaze, or similar competing services.</p>\n\n<p>First, you’ll need to install the libraries <code>boto3</code> and <code>django-storages</code>. Then, you need to set up a bucket and IAM role on AWS, which is outside the scope of this article, but you can see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/walkthrough1.html\">instructions for here</a>. Once all of that is configured, you need to add three variables to your <em>project/settings.py</em>:</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-py\">DEFAULT_FILE_STORAGE = \"storages.backends.s3boto3.S3Boto3Storage\"\nAWS_STORAGE_BUCKET_NAME = \"BUCKET_NAME\"\nAWS_S3_REGION_NAME = \"us-east-2\"</code></pre>\n</div>\n\n<p>Additionally, you will need to set up credential access to your AWS bucket. Some tutorials will demonstrate adding an ID and secret key to your settings file or as environment variables, but these are insecure practices. Instead, use <code>django-storages</code> with the AWS CLI to configure the keys, as described <a href=\"https://docs.aws.amazon.com/cli/latest/reference/configure/\">here</a>. You may also be interested in the <code>django-storages</code> <a href=\"https://django-storages.readthedocs.io/en/latest/backends/amazon-S3.html\">documentation</a>.</p>\n\n<p>You don’t want development or testing media files to get mixed up with uploads from actual users. Avoiding this is pretty simple: set up multiple buckets, one for development (or one for each developer), one for testing, and one for production. Then, all you need to change is the <code>AWS_STORAGE_BUCKET_NAME</code> setting per environment and you’re good to go.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n\n\n\n<h3 id=\"performance-and-availability\">Performance And Availability</h3>\n\n<p>There are numerous factors that affect the performance and reliability of your website. Here are some important ones when considering static and media files that matter regardless of which approach you take to managing them.</p>\n\n<h4 id=\"cost\">Cost</h4>\n\n<p>Serving files to a user costs money for two reasons: storage and bandwidth. You have to pay the hosting provider to store the files for you, but you also have to pay them to serve the files. Bandwidth is substantially more expensive than storage (for example, AWS S3 charges 2.3 cents per gigabyte for storage versus 9 cents per gigabyte of data transfer out to the Internet at the time of writing). The economics of a file store like S3 or a CDN are different than the economics of a generalized host like a Digital Ocean droplet. Take advantage of specialization and economies of scale by moving expensive files to services designed for them. Furthermore, many file stores and CDNs offer free plans so sites that might be small enough to get away without using them can instead do so and reap the benefits without any additional infrastructure costs.</p>\n\n<h4 id=\"compression-and-transcoding\">Compression and Transcoding</h4>\n\n<p>Most of the problems caused by static assets like photos and videos are because they are big files. Naturally, developers address this by trying to make these files smaller. There are a number of ways to do this using a mix of <a href=\"https://en.wikipedia.org/wiki/Data_compression\">compression</a> and <a href=\"https://en.wikipedia.org/wiki/Transcoding\">transcoding</a> in two general categories: lossless and lossy. Lossless compression retains the original quality of the assets but provides relatively modest decreases in file size. Lossy compression, or transcoding into a lossy format, allows for much smaller file sizes at the expense of losing some of the quality of the original artifact. An example of this is transcoding video to a lower bitrate. For details, check out <a href=\"https://www.smashingmagazine.com/2018/10/video-playback-on-the-web-part-2/\">this article about optimizing video delivery</a>. When serving large files over the web, bandwidth speeds often demand that you serve highly compressed artifacts, requiring lossy compression.</p>\n\n<p>Unless you’re YouTube, compression and transcoding doesn’t happen on the fly. Static assets should be appropriately formatted prior to deployment, and you can enforce basic file type and file size restrictions on user uploads to ensure sufficient compression and appropriate formatting in your users&rsquo; media files.</p>\n\n<h4 id=\"minification\">Minification</h4>\n\n<p>While files of JavaScript and CSS aren’t usually as large as images, they can often be compressed to squeeze into fewer bytes. This process is called <a href=\"https://en.wikipedia.org/wiki/Minification_(programming)\">minification</a>. Minification does not change the encoding of the files, they’re still text, and a minified file still needs to be valid code for its original language. Minified files retain their original extensions.</p>\n\n<p>The main thing removed in a minified file is unnecessary whitespace, and from the computer’s perspective almost all whitespace in CSS and JavaScript is unnecessary. Minification schemes also shorten variable names and remove comments.</p>\n\n<p>Minification by default obfuscates code; as a developer, you should work exclusively with non-minified files. Some automatic step during the deployment process should minify the files before they are stored and served. If you’re using a library provided by a third-party CDN, make sure you’re using the minified version of that library if available. HTML files can be minified, but as Django uses server-side rendering, the processing cost of doing so on the fly would most likely outweigh the small decrease in page size.</p>\n\n<h4 id=\"global-availability\">Global Availability</h4>\n\n<p>Just like it takes less time to send a letter to your neighbor than it does to send it across the country, so to does it take less time to transmit data nearby than across the world. One of the ways that a CDN improves page performance is by copying assets onto servers across the world. Then, when a client makes a request, they receive the static assets from the nearest server (often called an edge node), decreasing load times. One of the advantages to using a CDN with a Django site is decoupling the global distribution of your static assets from the global distribution of your code.</p>\n\n<h4 id=\"client-side-caching\">Client-Side Caching</h4>\n\n<p>What’s better than having a static file on a server near your user? Having the static file already stored on your user’s device! Caching is the process of storing the results of a computation or request so that they can be accessed repeatedly more quickly. Just like a CSS stylesheet can be cached around the world in a CDN, it can be cached in the client’s browser the first time they load a page from your site. Then, the stylesheet is available on the device itself in subsequent requests, so the client is making fewer requests, improving page load time, and decreasing bandwidth use.</p>\n\n<p>Browsers perform their own caching operations, but if your site enjoys substantial traffic, you can optimize your client-side caching behavior using <a href=\"https://docs.djangoproject.com/en/3.0/topics/cache/\">Django’s cache framework</a>.</p>\n\n<h3 id=\"in-conclusion\">In Conclusion</h3>\n\n<p>Again, my guiding philosophy is to use tools for what they’re best at. Single-server projects and small scalable deployments with only lightweight static assets can use Django’s built-in static asset management, but most applications should separate out assets to be served over a CDN.</p>\n\n<p>If your project is intended for any kind of real-word use, do not store media files with Django’s default method, instead use a service. With enough traffic, where &ldquo;enough traffic&rdquo; is a relatively small number on the scale of the Internet, the additional complications to architecture, the development process, and deployment are more than worth it for the performance, reliability, and cost savings of using a separate CDN and file storage solution for static and media files, respectively.</p>\n\n<h4><span class=\"rh\">Recommended Reading</span></h4>\n\n<ul>\n<li><a href=\"https://www.smashingmagazine.com/2020/02/django-highlights-user-models-authentication/\">Part 1</a>: User Models And Authentication</li>\n<li><a href=\"https://www.smashingmagazine.com/2020/04/django-highlights-templating-saves-lines/\">Part 2</a>: Templating Saves Lines</li>\n<li><a href=\"https://www.smashingmagazine.com/2020/04/django-highlights-models-admin-relational-database/\">Part 3</a>: Models, Admin, And Harnessing The Relational Database</li>\n</ul>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\">\n  <span>(dm, ra, yk, il)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        ",
      "content": "Django websites involve a lot of files. It’s not just source code for the configuration, models, views, and templates, but also static assets: CSS and JavaScript, images, icons. As if that wasn’t enough already, sometimes users come along and want to upload their own files to your website. It’s enough to make any developer incredulous. Files everywhere!\nHere’s where I wish I could say (without caveats): “Don’t worry, Django has your back!",
      "contentSnippet": "Django websites involve a lot of files. It’s not just source code for the configuration, models, views, and templates, but also static assets: CSS and JavaScript, images, icons. As if that wasn’t enough already, sometimes users come along and want to upload their own files to your website. It’s enough to make any developer incredulous. Files everywhere!\nHere’s where I wish I could say (without caveats): “Don’t worry, Django has your back!",
      "guid": "https://www.smashingmagazine.com/2020/06/django-highlights-wrangling-static-assets-media-files-part-4/",
      "isoDate": "2020-06-25T12:30:00.000Z"
    },
    {
      "creator": "Adeneye David Abiodun",
      "title": "A Practical Guide To Testing React Applications With Jest",
      "link": "https://www.smashingmagazine.com/2020/06/practical-guide-testing-react-applications-jest/",
      "pubDate": "Wed, 24 Jun 2020 12:00:00 +0000",
      "author": "Adeneye David Abiodun",
      "content:encoded": "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2020/06/practical-guide-testing-react-applications-jest/\" />\n              <title>A Practical Guide To Testing React Applications With Jest</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>A Practical Guide To Testing React Applications With Jest</h1>\n                  \n                    \n                    <address>Adeneye David Abiodun</address>\n                  \n                  <time datetime=\"2020-06-24T12:00:00&#43;00:00\" class=\"op-published\">2020-06-24T12:00:00+00:00</time>\n                  <time datetime=\"2020-06-24T12:00:00&#43;00:00\" class=\"op-modified\">2020-07-10T03:35:48+00:00</time>\n                </header>\n                \n\n<p>In this article, I’m going to introduce you to a React testing tool named <a href=\"https://jestjs.io/en/\">Jest</a>, along with the popular library <a href=\"https://enzymejs.github.io/enzyme/\">Enzyme</a>, which is designed to test React components. I’ll introduce you to Jest testing techniques, including: running tests, testing React components, snapshot testing, and mocking.\nIf you are new to testing and wondering how to get started, you will find this tutorial helpful because we will start with an introduction to testing. By the end, you’ll be up and running, testing React applications using Jest and Enzyme. You should be familiar with <a href=\"https://reactjs.org/\">React</a> in order to follow this tutorial.</p>\n\n<h3 id=\"a-brief-introduction-to-testing\">A Brief Introduction To Testing</h3>\n\n<p>Testing is a line-by-line review of how your code will execute. A suite of tests for an application comprises various bit of code to verify whether an application is executing successfully and without error. Testing also comes in handy when updates are made to code. After updating a piece of code, you can run a test to ensure that the update does not break functionality already in the application.</p>\n\n<h3 id=\"why-test\">Why Test?</h3>\n\n<p>It’s good to understand why we doing something before doing it. So, why test, and what is its purpose?</p>\n\n<ol>\n<li>The first purpose of testing is to prevent regression. <a href=\"https://en.wikipedia.org/wiki/Regression_testing\">Regression</a> is the reappearance of a bug that had previously been fixed. It makes a feature stop functioning as intended after a certain event occurs.</li>\n<li>Testing ensures the functionality of complex components and modular applications.</li>\n<li>Testing is required for the effective performance of a software application or product.</li>\n</ol>\n\n<p>Testing makes an app more robust and less prone to error. It’s a way to verify that your code does what you want it to do and that your app works as intended for your users.</p>\n\n\n  <div data-component=\"FeaturePanel\" data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container hidden\"></div>\n\n\n<p>Let’s go over the types of testing and what they do.</p>\n\n<h4 id=\"unit-test\">Unit Test</h4>\n\n<p>In this type of test, individual units or components of the software are tested. A unit might be an individual function, method, procedure, module, or object. A unit test isolates a section of code and verifies its correctness, in order to validate that each unit of the software’s code performs as expected.</p>\n\n<p>In unit testing, individual procedures or functions are tested to guarantee that they are operating properly, and all components are tested individually. For instance, testing a function or whether a statement or loop in a program is functioning properly would fall under the scope of unit testing.</p>\n\n<h4 id=\"component-test\">Component Test</h4>\n\n<p>Component testing verifies the functionality of an individual part of an application. Tests are performed on each component in isolation from other components. Generally, React applications are made up of several components, so component testing deals with testing these components individually.</p>\n\n<p>For example, consider a website that has different web pages with many components. Every component will have its own subcomponents. Testing each module without considering integration with other components is referred to as component testing.</p>\n\n<p>Testing like this in React requires more sophisticated tools. So, we would need Jest and sometimes more sophisticated tools, like Enzyme, which we will discuss briefly later.</p>\n\n<h4 id=\"snapshot-test\">Snapshot Test</h4>\n\n<p>A snapshot test makes sure that the user interface (UI) of a web application does not change unexpectedly. It captures the code of a component at a moment in time, so that we can compare the component in one state with any other possible state it might take.</p>\n\n<p>We will learn about snapshot testing in a later section.</p>\n\n<h3 id=\"advantages-and-disadvantages-of-testing\">Advantages and Disadvantages of Testing</h3>\n\n<p>Testing is great and should be done, but it has advantages and disadvantages.</p>\n\n<h4 id=\"advantages\">Advantages</h4>\n\n<ol>\n<li>It prevents unexpected regression.</li>\n<li>It allows the developer to focus on the current task, rather than worrying about the past.</li>\n<li>It allows modular construction of an application that would otherwise be too complex to build.</li>\n<li>It reduces the need for manual verification.\n<br /></li>\n</ol>\n\n<h4 id=\"disadvantages\">Disadvantages</h4>\n\n<ol>\n<li>You need to write more code, as well as debug and maintain.</li>\n<li>Non-critical test failures might cause the app to be rejected in terms of continuous integration.</li>\n</ol>\n\n<h3 id=\"introduction-to-jest\">Introduction to Jest</h3>\n\n<p><a href=\"https://jestjs.io/en/\">Jest</a> is a delightful JavaScript testing framework with a focus on simplicity. It can be installed with npm or Yarn. Jest fits into a broader category of utilities known as <a href=\"https://www.quora.com/What-is-a-test-runner\">test runners</a>. It works great for React applications, but it also works great outside of React applications.</p>\n\n<p><a href=\"https://enzymejs.github.io/enzyme/\">Enzyme</a> is a library that is used to test React applications. It’s designed to test components, and it makes it possible to write assertions that simulate actions that confirm whether the UI is working correctly.</p>\n\n<p>Jest and Enzyme complement each other so well, so in this article we will be using both.</p>\n\n<h3 id=\"process-of-running-a-test-with-jest\">Process Of Running A Test With Jest</h3>\n\n<p>In this section, we will be installing Jest and writing tests. If you are new to React, then I recommend using <a href=\"https://create-react-app.dev/\">Create React App</a>, because it is ready for use and ships with Jest.</p>\n\n<pre><code class=\"language-bash\">npm init react-app my-app\n</code></pre>\n\n<p>We need to install Enzyme ****and <code>enzyme-adapter-react-16</code> with <code>react-test-renderer</code> (the number should be based on the version of React you’re using).</p>\n\n<pre><code class=\"language-bash\">npm install --save-dev enzyme enzyme-adapter-react-16 react-test-renderer\n</code></pre>\n\n<p>Now that we have created our project with both Jest and Enzyme, we need to create a <code>setupTest.js</code> file in the <code>src</code> folder of the project. The file should look like this:</p>\n\n<pre><code class=\"language-javascript\">import { configure } from \"enzyme\";\nimport Adapter from \"enzyme-adapter-react-16\";\nconfigure({ adapter: new Adapter() });\n</code></pre>\n\n<p>This imports Enzyme and sets up the adapter to run our tests.</p>\n\n<p>Before continuing, let’s learn some basics. Some key things are used a lot in this article, and you’ll need to understand them.</p>\n\n<ul>\n<li><code>it</code> or <code>test</code>\nYou would pass a function to this method, and the test runner would execute that function as a block of tests.</li>\n<li><code>describe</code>\nThis optional method is for grouping any number of <code>it</code> or <code>test</code> statements.</li>\n<li><code>expect</code>\nThis is the condition that the test needs to pass. It compares the received parameter to the matcher. It also gives you access to a number of matchers that let you validate different things. You can read more about it <a href=\"https://jestjs.io/docs/en/expect\">in the documentation</a>.</li>\n<li><code>mount</code>\nThis method renders the full DOM, including the child components of the parent component, in which we are running the tests.</li>\n<li><code>shallow</code>\nThis renders only the individual components that we are testing. It does not render child components. This enables us to test components in isolation.</li>\n</ul>\n\n<div class=\"sponsors__lead-place\"></div>\n\n\n\n\n<h3 id=\"creating-a-test-file\">Creating A Test File</h3>\n\n<p>How does Jest know what’s a test file and what isn’t? The first rule is that any files found in any directory with the name <code>__test__</code> are considered a test. If you put a JavaScript file in one of these folders, Jest will try to run it when you call Jest, for better or for worse. The second rule is that Jest will recognize any file with the suffix <code>.spec.js</code> or <code>.test.js</code>. It will search the names of all folders and all files in your entire repository.</p>\n\n<p>Let’s create our first test, for a React mini-application created for this tutorial. You can clone it <a href=\"https://github.com/daacode/react-jest\">on Git</a><a href=\"https://github.com/daacode/react-jest\">H</a><a href=\"https://github.com/daacode/react-jest\">ub</a>.  Run <code>npm install</code> to install all of the packages, and then <code>npm start</code> to launch the app. Check the <code>README.md</code> file for more information.</p>\n\n<p>Let’s open <code>App.test.js</code> to write our first test. First, check whether our app component renders correctly and whether we have specified an output:</p>\n\n<pre><code class=\"language-javascript\">it(\"renders without crashing\", () => {\n  shallow(&lt;App /&gt;);\n});\n\nit(\"renders Account header\", () => {\n  const wrapper = shallow(&lt;App /&gt;);\n  const welcome = &lt;h1&gt;Display Active Users Account Details&lt;/h1&gt;;\n  expect(wrapper.contains(welcome)).toEqual(true);\n});\n</code></pre>\n\n<p>In the test above, the first test, with <code>shallow</code>, checks to see whether our app component renders correctly without crashing. Remember that the <code>shallow</code> method renders only a single component, without child components.</p>\n\n<p>The second test checks whether we have specified an <code>h1</code>  tag output of “Display Active User Account” in our app component, with a <a href=\"https://jestjs.io/docs/en/expect.html\">Jest matcher</a> of <code>toEqual</code>.</p>\n\n<p>Now, run the test:</p>\n\n<pre><code class=\"language-bash\">npm run test \n/* OR */\nnpm test\n</code></pre>\n\n<p>The output in your terminal should like this:</p>\n\n<pre><code class=\"language-bash\">  PASS  src/App.test.js\n  √ renders without crashing (34ms)\n  √ renders Account header (13ms)\n\nTest Suites: 1 passed, 1 total\nTests:       2 passed, 2 total\nSnapshots:   0 total\nTime:        11.239s, estimated 16s\nRan all test suites related to changed files.\n\nWatch Usage: Press w to show more.\n</code></pre>\n\n<p>As you can see, our test passed. It shows we have one test suite named <code>App.test.js</code>, with two successful tests when Jest ran. We’ll talk about snapshot testing later, and you will also get to see an example of a failed test.</p>\n\n<h3 id=\"skipping-or-isolating-a-test\">Skipping Or Isolating A Test</h3>\n\n<p>Skipping or isolating a test means that when Jest runs, a specific marked test is not run.</p>\n\n<pre><code class=\"language-javascript\">it.skip(\"renders without crashing\", () => {\n  shallow(&lt;App /&gt;);\n});\n\nit(\"renders Account header\", () => {\n  const wrapper = shallow(&lt;App /&gt;);\n  const header = &lt;h1&gt;Display Active Users Account Details&lt;/h1&gt;;\n  expect(wrapper.contains(header)).toEqual(true);\n});\n</code></pre>\n\n<p>Our first test will be skipped because we’ve used the <code>skip</code> method to isolate the test. So, it will not run or make any changes to our test when Jest runs. Only the second one will run. You can also use <code>it.only()</code>.</p>\n\n<p>It’s a bit frustrating to make changes to a test file and then have to manually run <code>npm test</code> again. Jest has a nice feature called watch mode, which watches for file changes and runs tests accordingly. To run Jest in watch mode, you can run <code>npm test -- --watch</code> or <code>jest --watch</code>. I would also recommend leaving Jest running in the terminal window for the rest of this tutorial.</p>\n\n<h3 id=\"mocking-function\">Mocking Function</h3>\n\n<p>A mock is a convincing duplicate of an object or module without any real inner workings. It might have a tiny bit of functionality, but compared to the real thing, it’s a mock. It can be created automatically by Jest or manually.</p>\n\n<p>Why should we mock? Mocking reduces the number of dependencies — that is, the number of related files that have to be loaded and parsed when a test is run. So, using a lot of mocks makes tests execute more quickly.</p>\n\n<p>Mock functions are also known as “spies”, because they let you spy on the behavior of a function that is called directly by some other code, rather than only testing the output.</p>\n\n<p>There are two ways to mock a function: either by creating a mock function to use it in test code, or by writing a manual mock to override a module dependency.</p>\n\n<p>Manual mocks ****are used to stub out functionality with mock data. For example, instead of accessing a remote resource, like a website or a database, you might want to create a manual mock that allows you to use fake data.</p>\n\n<p>We will use a mock function in the next section.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n\n\n\n<h3 id=\"testing-react-components\">Testing React Components</h3>\n\n<p>The section will combine all of the knowledge we have gained so far in understanding how to test React components. Testing involves making sure the output of a component hasn’t unexpectedly changed to something else. Constructing components in the right way is by far the most effective way to ensure successful testing.</p>\n\n<p>One thing we can do is to test components props — specifically, testing whether props from one component are being passed to another. Jest and the Enzyme API allow us to create a mock function to simulate whether props are being passed between components.</p>\n\n<p>We have to pass the user-account props from the main <code>App</code> component to the <code>Account</code> component. We need to give user-account details to <code>Account</code> in order to render the active account of users. This is where mocking comes in handy, enabling us to test our components with fake data.</p>\n\n<p>Let’s create a mock for the <code>user</code> props:</p>\n\n<pre><code class=\"language-javascript\">const user = {\n  name: \"Adeneye David\",\n  email: \"david@gmail.com\",\n  username: \"Dave\",\n};\n</code></pre>\n\n<p>We have created a manual mock function in our test file and wrapped it around the components. Let’s say we are testing a large database of users. Accessing the database directly from our test file is not advisable. Instead, we create a mock function, which enables us to use fake data to test our component.</p>\n\n<pre><code class=\"language-javascript\">describe(\"<Account />\", () => {\n  it(\"accepts user account props\", () => {\n    const wrapper = mount(&lt;Account user={user} /&gt;);\n    expect(wrapper.props().user).toEqual(user);\n  });\n  it(\"contains users account email\", () => {\n    const wrapper = mount(&lt;Account user={user} /&gt;);\n    const value = wrapper.find(\"p\").text();\n    expect(value).toEqual(\"david@gmail.com\");\n  });\n});\n</code></pre>\n\n<p>We have two tests above, and we use a <code>describe</code> layer, which takes the component being tested. By specifying the props and values that we expect to be passed by the test, we are able to proceed.</p>\n\n<p>In the first test, we check whether the props that we passed to the mounted component equal the mock props that we created above.</p>\n\n<p>For the second test, we pass the user props to the mounted <code>Account</code> component. Then, we check whether we can find the <code>&lt;p&gt;</code> element that corresponds to what we have in the <code>Account</code> component. When we run the test suite, you’ll see that the test runs successfully.</p>\n\n<p>We can also test the state of our component. Let’s check whether the state of the error message is equal to null:</p>\n\n<pre><code class=\"language-javascript\">it(\"renders correctly with no error message\", () => {\n  const wrapper = mount(<App />);\n  expect(wrapper.state(\"error\")).toEqual(null);\n});\n</code></pre>\n\n<p>In this test, we check whether the state of our component error is equal to null, using a <code>toEqual()</code> matcher. If there is an error message in our app, the test will fail when run.</p>\n\n<p>In the next section, we will go through how to test React components with snapshot testing, another amazing technique.</p>\n\n<h3 id=\"snapshot-testing\">Snapshot Testing</h3>\n\n<p>Snapshot testing captures the code of a component at a moment in time, in order to compare it to a reference snapshot file stored alongside the test. It is used to keep track of changes in an app’s UI.</p>\n\n<p>The actual code representation of a snapshot is a JSON file, and this JSON contains a record of what the component looked like when the snapshot was made. During a test, Jest compares the contents of this JSON file to the output of the component during the test. If they match, the test passes; if they don&rsquo;t, the test fails.</p>\n\n<p>To convert an Enzyme wrapper to a format that is compatible with Jest snapshot testing, we have to install <code>enzyme-to-json</code>:</p>\n\n<pre><code class=\"language-bash\">npm install --save-dev enzyme-to-json\n</code></pre>\n\n<p>Let’s create our snapshot test. When we run it the first time, the snapshot of that component’s code will be composed and saved in a new <code>__snapshots__</code> folder in the <code>src</code> directory.</p>\n\n<pre><code class=\"language-javascript\">it(\"renders correctly\", () => {\n  const tree = shallow(&lt;App /&gt;);\n  expect(toJson(tree)).toMatchSnapshot();\n});\n</code></pre>\n \n\n<p>When the test above runs successfully, the current UI component will be compared to the existing one.</p>\n\n<p>Now, let’s run the test:</p>\n\n<pre><code class=\"language-bash\">npm run test\n</code></pre>\n\n<p>When the test suite runs, a new snapshot will be generated and saved to the <code>__snapshots__</code> folder. When we run a test subsequently, Jest will check whether the components match the snapshot.</p>\n\n<p>As explained in the previous section, that <code>shallow</code> method from the Enzyme package is used to render a single component and nothing else. It doesn’t render child components. Rather, it gives us a nice way to isolate code and get better information when debugging. Another method, named <code>mount</code>, is used to render the full DOM, including the child components of the parent component, in which we are running the tests.</p>\n\n<p>We can also update our snapshot, Let’s make some changes to our component in order to make our test fail, which will happen because the component no longer corresponds to what we have in the snapshot file. To do this, let’s change the <code>&lt;h3&gt;</code> tag in our component from <code>&lt;h3&gt; Loading...&lt;/h3&gt;</code> to <code>&lt;h3&gt;Fetching Users...&lt;/h3&gt;</code>. When the test runs, this what we will get in the terminal:</p>\n\n<div class=\"break-out\">\n <pre><code class=\"language-javascript\"> FAIL  src/App.test.js (30.696s)\n  × renders correctly (44ms)\n\n  ● renders correctly\n\n    expect(received).toMatchSnapshot()\n    Snapshot name: `renders correctly\n1\n\n    - Snapshot\n    + Received\n\n      <Fragment>\n        <h1>\n          Display Active Users Account Details\n        </h1>\n        <h3>\n    -     Loading...\n    +     Fetching Users...\n        </h3>\n      </Fragment>\n\n       7 | it(\"renders correctly\", ()\n=> {\n       8 |   const wrapper = shallow(<App />);\n    >  9 |   expect(toJson(wrapper)).toMatchSnapshot();\n         |                           ^      10 | });\n      11 |\n      12 | /* it(\"renders without crashing\", () => {\n\n      at Object.<anonymous> (src/App.test.js:9:27)\n\n › 1 snapshot failed.\nSnapshot Summary\n › 1 snapshot failed from 1 test suite. Inspect your code changes or press `u` to update them.\n\nTest Suites: 1 failed, 1 total\nTests:       1 failed, 1 total\nSnapshots:   1 failed, 1 total\nTime:        92.274s\nRan all test suites related to changed files.\n\nWatch Usage: Press w to show more.\n</code></pre>\n</div>\n\n<p>If we want our test to pass, we would either change the test to its previous state or update the snapshot file. In the command line, Jest provides instruction on how to update the snapshot. First, press <code>w</code> in the command line to show more, and then press <code>u</code> to update the snapshot.</p>\n\n<pre><code>› Press u to update failing snapshots.\n</code></pre>\n\n<p>When we press <code>u</code> to update the snapshot, the test will pass.</p>\n\n<h3 id=\"conclusion\">Conclusion</h3>\n\n<p>I hope you’ve enjoyed working through this tutorial. We’ve learned some Jest testing techniques using the Enzyme testing library. I’ve also introduced you to the process of running a test, testing React components, mocking, and snapshot testing. If you have any questions, you can leave them in the comments section below, and I’ll be happy to answer every one and work through any issues with you.</p>\n\n<h4 id=\"resources-and-further-reading\">Resources And Further Reading</h4>\n\n<ul>\n<li><a href=\"https://jestjs.io/docs/en/getting-started\">Jest documentation</a></li>\n<li><a href=\"https://enzymejs.github.io/enzyme/docs/api/\">Enzyme documentation</a></li>\n<li>“<a href=\"https://www.freecodecamp.org/news/testing-react-hooks/\">How to Test React Components: The Complete Guide</a>”, Mohammad Iqbal, freeCodeCamp</li>\n<li>“<a href=\"https://medium.com/codeclan/testing-react-with-jest-and-enzyme-20505fec4675\">Testing React With Jest and Enzyme</a>”, Dominic Fraser, CodeClan</li>\n</ul>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\">\n  <span>(ks, ra, il, al)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        ",
      "content": "In this article, I’m going to introduce you to a React testing tool named Jest, along with the popular library Enzyme, which is designed to test React components. I’ll introduce you to Jest testing techniques, including: running tests, testing React components, snapshot testing, and mocking. If you are new to testing and wondering how to get started, you will find this tutorial helpful because we will start with an introduction to testing.",
      "contentSnippet": "In this article, I’m going to introduce you to a React testing tool named Jest, along with the popular library Enzyme, which is designed to test React components. I’ll introduce you to Jest testing techniques, including: running tests, testing React components, snapshot testing, and mocking. If you are new to testing and wondering how to get started, you will find this tutorial helpful because we will start with an introduction to testing.",
      "guid": "https://www.smashingmagazine.com/2020/06/practical-guide-testing-react-applications-jest/",
      "isoDate": "2020-06-24T12:00:00.000Z"
    },
    {
      "creator": "Suzanne Scacca",
      "title": "How Web Designers Can Help Restaurants Move Into Digital Experiences",
      "link": "https://www.smashingmagazine.com/2020/06/web-designers-help-restaurants-digital-experiences/",
      "pubDate": "Tue, 23 Jun 2020 12:00:00 +0000",
      "author": "Suzanne Scacca",
      "content:encoded": "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2020/06/web-designers-help-restaurants-digital-experiences/\" />\n              <title>How Web Designers Can Help Restaurants Move Into Digital Experiences</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>How Web Designers Can Help Restaurants Move Into Digital Experiences</h1>\n                  \n                    \n                    <address>Suzanne Scacca</address>\n                  \n                  <time datetime=\"2020-06-23T12:00:00&#43;00:00\" class=\"op-published\">2020-06-23T12:00:00+00:00</time>\n                  <time datetime=\"2020-06-23T12:00:00&#43;00:00\" class=\"op-modified\">2020-07-10T03:35:48+00:00</time>\n                </header>\n                \n\n<p>As much as I’ve always loved the experience of going out to eat and ordering in takeout, it’s very rare that I enjoy visiting a restaurant’s website. But I get it. The restaurant industry tends to run on very slim profit margins, so it’s hard to justify spending money on a professionally designed website when all they want it to do is list their hours of operation and menu.</p>\n\n<p>However, I envision all that changing in 2020 (and beyond) as restaurants are forced to expand into digital in order to survive. Unlike a website that a novice might hack together with a cheap site builder, establishing a competitive digital presence isn’t something they’re going to be able to do on their own.</p>\n\n<p>That’s why web designers should seriously start thinking about expanding into this niche.</p>\n\n<h3 id=\"how-web-designers-can-help-restaurants-move-into-digital\">How Web Designers Can Help Restaurants Move into Digital</h3>\n\n<p>Usually, when something serious shakes up the restaurant industry, those that want to survive will adopt newer and better technologies to adapt. So, it’s not like restaurants are strangers to digital transformation. Until now, though, the focus has mainly been on investing in technology that improves how they work in-house.</p>\n\n<p>With everything that’s happened in 2020, though, restaurants are going to need web designers’ help in doing three things that ensure their survival in an increasingly digital world:</p>\n\n\n  <div data-component=\"FeaturePanel\" data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container hidden\"></div>\n\n\n<h4 id=\"1-modernize-the-restaurant-website\">1. Modernize The Restaurant Website</h4>\n\n<p>Whenever I write one of these posts, I spend time reviewing a few dozen websites to find the best examples to make my point. I’m not going to lie, this one was tough. While I knew I could turn to national chain restaurants to find modern-looking websites, I had a really hard time with others.</p>\n\n<p>While it’s not impossible to find an independent restaurant operator or local chain that has a great-looking website in 2020, I’d say that at least half of them are way behind the times, if they even have a website at all.</p>\n\n<p>Remember when websites were designed like this?</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ada67f96-0b9f-46ea-97c7-547da5fda0be/anonymous-restaurant-website.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ada67f96-0b9f-46ea-97c7-547da5fda0be/anonymous-restaurant-website.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ada67f96-0b9f-46ea-97c7-547da5fda0be/anonymous-restaurant-website.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ada67f96-0b9f-46ea-97c7-547da5fda0be/anonymous-restaurant-website.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ada67f96-0b9f-46ea-97c7-547da5fda0be/anonymous-restaurant-website.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ada67f96-0b9f-46ea-97c7-547da5fda0be/anonymous-restaurant-website.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ada67f96-0b9f-46ea-97c7-547da5fda0be/anonymous-restaurant-website.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"A blurred-out website to demonstrate how independent restaurants still have unresponsive designs\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      An outdated restaurant website in 2020, blurred out to protect its identity. (Source: Anonymous) (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ada67f96-0b9f-46ea-97c7-547da5fda0be/anonymous-restaurant-website.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>I’ve blurred out the restaurant’s name and details to protect its identity, but you can still get a sense of how bad this design is for 2020.</p>\n\n<p>Restaurant websites can’t afford to be crappy, non-responsive placeholders anymore. They need to become impressive digital presences that set the stage for what customers will experience when interacting with restaurants as diners.</p>\n\n<p>Let’s take a look at how <a href=\"https://www.in-n-out.com/\">In-N-Out Burger</a> has nailed modern web design. The first thing you’ll notice is it’s a <strong>responsive design</strong>. On desktop, the website fits the full width of the screen, so there’s no wasted space around the border. It looks good on a mobile device, too:</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6b868d6f-c601-4d59-aa37-4b387e07b560/innoutburger-restaurant-website-on-mobile.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6b868d6f-c601-4d59-aa37-4b387e07b560/innoutburger-restaurant-website-on-mobile.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6b868d6f-c601-4d59-aa37-4b387e07b560/innoutburger-restaurant-website-on-mobile.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6b868d6f-c601-4d59-aa37-4b387e07b560/innoutburger-restaurant-website-on-mobile.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6b868d6f-c601-4d59-aa37-4b387e07b560/innoutburger-restaurant-website-on-mobile.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6b868d6f-c601-4d59-aa37-4b387e07b560/innoutburger-restaurant-website-on-mobile.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6b868d6f-c601-4d59-aa37-4b387e07b560/innoutburger-restaurant-website-on-mobile.png\"\n\t\t\tsizes=\"70vw\"\n\t\t\talt=\"In-N-Out Burger website on mobile\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      The In-N-Out Burger mobile website is responsive and easy to read. (Source: <a href='https://www.in-n-out.com/'>In-N-Out Burger</a>) (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6b868d6f-c601-4d59-aa37-4b387e07b560/innoutburger-restaurant-website-on-mobile.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Also, take notice of the <strong>images</strong>. This is a burger joint, so you should expect the website to be full of burger photos, which it is. However, there’s something interesting to note about the burgers you find on the site.</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6a09417b-a7c3-4753-853b-54a65dd67ecf/innoutburger-restaurant-website.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6a09417b-a7c3-4753-853b-54a65dd67ecf/innoutburger-restaurant-website.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6a09417b-a7c3-4753-853b-54a65dd67ecf/innoutburger-restaurant-website.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6a09417b-a7c3-4753-853b-54a65dd67ecf/innoutburger-restaurant-website.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6a09417b-a7c3-4753-853b-54a65dd67ecf/innoutburger-restaurant-website.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6a09417b-a7c3-4753-853b-54a65dd67ecf/innoutburger-restaurant-website.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6a09417b-a7c3-4753-853b-54a65dd67ecf/innoutburger-restaurant-website.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"In-N-Out Burger website photos and transitions\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      The In-N-Out Burger website uses perfectly framed images and well-chosen transitions. (Source: <a href='https://www.in-n-out.com/'>In-N-Out Burger</a>) (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6a09417b-a7c3-4753-853b-54a65dd67ecf/innoutburger-restaurant-website.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>When someone enters a page where there’s a burger photo, the food slides into the frame as if someone were sliding it over to a customer in the restaurant. It’s a neat little transition and many visitors to the site might not even realize what’s happening, but it makes the experience feel more lifelike and interactive.</p>\n\n<p>Transitions aren’t the only things you can do to create this sort of experience. Background videos taken within the establishment work just as well as it gives customers the opportunity to walk through the establishment instead of relying on static images that only paint part of the picture.</p>\n\n<p>Another thing restaurant websites need to improve is how they’re <strong>organized</strong>.</p>\n\n<p>When people are ready to go out to eat or to dine in, don’t waste their time trying to force the restaurant’s history down their throats (which many of these sites surprisingly do). The navigation as well as the order in which CTAs appear on the home page should reflect the actions customers want to take.</p>\n\n<p>The thought process most likely goes like this:</p>\n\n<ol>\n<li>“I’m not sure what to order. Where’s the menu?” (Menu)</li>\n<li>“Do I need to make a reservation or can we just go whenever?” (Reservations)</li>\n<li>“Where is this place again?” (Locations <em>or</em> Contact)</li>\n</ol>\n\n<p>Or, these days, #2 looks more like this:</p>\n\n<ul>\n<li>“Do they do takeout? I wonder if they’ll deliver it.” (Order Online)</li>\n</ul>\n\n<p>There are other things customers might want to do on the website. Like buy gift cards or merchandise, sign up for rewards or apply for a job.</p>\n\n<p>So, while the above tasks should be a priority in terms of what visitors see first, make sure to look at the site’s data to see what else they’re interested in doing. Then, make sure those popular actions take center stage in the navigation and site design.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n\n\n\n<h4 id=\"2-empower-them-to-diversify-their-income\">2. Empower Them to Diversify Their Income</h4>\n\n<p>Under normal circumstances, profitability is a problem for many restaurants. Add a crisis to the mix and it’s going to become downright impossible to generate any profit — that is if they rely solely on dine-in business.</p>\n\n<p>Long before COVID-19, consumers were already showing a growing preference for digital dining solutions.</p>\n\n<p>According to <a href=\"https://www.prnewswire.com/news-releases/77-of-americans-would-rather-eat-a-homemade-meal-than-eat-out-in-2019-300762304.html\">Peapod</a>, 77% of U.S. consumers said they preferred eating at home than going out. But that doesn’t necessarily translate to ordering in from a restaurant.</p>\n\n<ul>\n<li>27% preferred to order groceries online and pick them up from the store.</li>\n<li>26% planned to use grocery delivery.</li>\n<li>20% were interested in meal kits.</li>\n</ul>\n\n<p>Then, you have information from <a href=\"https://www.restaurant.org/downloads/pdfs/research/research_offpremises_201910\">Technomic and the National Restaurant Association</a> that found that about <strong>60% of all restaurant sales in the U.S. come from off-premise dining</strong>.</p>\n\n<p>For restaurants that haven’t yet made the leap to digital dining options, they’re going to have to ASAP. This isn’t just a temporary thing either.</p>\n\n<blockquote class=\"pull-quote\">\n  <p>\n    <a class=\"pull-quote__link\" aria-label=\"Share on Twitter\" href=\"http://twitter.com/share?text=Restaurants%20that%20fail%20to%20digitize%20going%20forward%20won%e2%80%99t%20survive.%0a&url=https://smashingmagazine.com%2f2020%2f06%2fweb-designers-help-restaurants-digital-experiences%2f\">\n      Restaurants that fail to digitize going forward won’t survive.\n\n    </a>\n  </p>\n  <div class=\"pull-quote__quotation\">\n    <div class=\"pull-quote__bg\">\n      <span class=\"pull-quote__symbol\">“</span></div>\n  </div>\n</blockquote>\n\n<p>So, web designers are going to be needed to help them build out the following:</p>\n\n<ul>\n<li>An online ordering system for their website or a link to an external service,</li>\n<li>A reservation system (for when in-house dining is available).</li>\n</ul>\n\n<p>That’s just the bare minimum though. For instance, this is what <a href=\"https://www.snoozeeatery.com/\">Snooze Eatery</a> has done:</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d1a206ee-d741-4a2e-89ef-4b1aae21f03a/snooze-online-ordering.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d1a206ee-d741-4a2e-89ef-4b1aae21f03a/snooze-online-ordering.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d1a206ee-d741-4a2e-89ef-4b1aae21f03a/snooze-online-ordering.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d1a206ee-d741-4a2e-89ef-4b1aae21f03a/snooze-online-ordering.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d1a206ee-d741-4a2e-89ef-4b1aae21f03a/snooze-online-ordering.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d1a206ee-d741-4a2e-89ef-4b1aae21f03a/snooze-online-ordering.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d1a206ee-d741-4a2e-89ef-4b1aae21f03a/snooze-online-ordering.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Snooze Eatery online delivery or pickup\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Snooze Eatery advertises delivery or pickup on its website. (Source: <a href='https://www.snoozeeatery.com/'>Snooze Eatery</a>) (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d1a206ee-d741-4a2e-89ef-4b1aae21f03a/snooze-online-ordering.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>The first thing visitors see on the website is the online ordering option. When they click “Place Your Order”, they’re taken to the restaurant’s proprietary ordering portal:</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d05553d2-bdf3-440b-a0bf-060e62b91a30/snooze-online-ordering-portal.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d05553d2-bdf3-440b-a0bf-060e62b91a30/snooze-online-ordering-portal.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d05553d2-bdf3-440b-a0bf-060e62b91a30/snooze-online-ordering-portal.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d05553d2-bdf3-440b-a0bf-060e62b91a30/snooze-online-ordering-portal.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d05553d2-bdf3-440b-a0bf-060e62b91a30/snooze-online-ordering-portal.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d05553d2-bdf3-440b-a0bf-060e62b91a30/snooze-online-ordering-portal.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d05553d2-bdf3-440b-a0bf-060e62b91a30/snooze-online-ordering-portal.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Snooze Eatery online ordering portal\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Snooze Eatery’s online ordering portal. (Source: <a href='https://www.snoozeeatery.com/'>Snooze Eatery</a>) (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d05553d2-bdf3-440b-a0bf-060e62b91a30/snooze-online-ordering-portal.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>This in and of itself is a great solution for restaurants to have available through their websites as it allows them to control the ordering process and capture more of the profits (but that’s up to your clients to decide, of course). That said, many restaurants are getting creative and going beyond traditional online ordering options.</p>\n\n<p>Below the fold on the Snooze Eatery site, visitors will find this banner:</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/95922ace-635e-422a-a8b8-65b02b6a0840/snooze-mealkits-groceries.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/95922ace-635e-422a-a8b8-65b02b6a0840/snooze-mealkits-groceries.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/95922ace-635e-422a-a8b8-65b02b6a0840/snooze-mealkits-groceries.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/95922ace-635e-422a-a8b8-65b02b6a0840/snooze-mealkits-groceries.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/95922ace-635e-422a-a8b8-65b02b6a0840/snooze-mealkits-groceries.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/95922ace-635e-422a-a8b8-65b02b6a0840/snooze-mealkits-groceries.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/95922ace-635e-422a-a8b8-65b02b6a0840/snooze-mealkits-groceries.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Snooze Eatery neighborhood provisions: family-style meal kits and food essentials\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Snooze Eatery now offers neighborhood provisions. (Source: <a href='https://www.snoozeeatery.com/'>Snooze Eatery</a>) (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/95922ace-635e-422a-a8b8-65b02b6a0840/snooze-mealkits-groceries.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>As I mentioned earlier, there’s a good number of people who want to be able to order food online but then prepare it for themselves at home. While that would previously have left restaurants high and dry, that’s not the case anymore as many restaurants are expanding their offering to include family-style meal kits and groceries like Snooze.</p>\n\n<p>This alone means that web designers are going to become increasingly more important for restaurants. And don’t expect the work to end there. Restaurants will also need your help building other monetized offerings into their websites. For instance:</p>\n\n<ul>\n<li>Gift cards;</li>\n<li>Merchandise;</li>\n<li>Subscription services for meal kits, alcohol deliveries and more;</li>\n<li>Online memberships for cooking classes, premium recipes, etc.</li>\n</ul>\n\n<p>If they don’t have one yet, they’ll also probably need help creating a rewards and account management system as well.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n\n\n\n<h4 id=\"3-fix-their-brand-images-on-third-party-sites\">3. Fix Their Brand Images on Third-party Sites</h4>\n\n<p>Although the website should be the engine that powers everything for the business online, restaurants need other sites to help with visibility, too. For example:</p>\n\n<ul>\n<li><strong>Facebook</strong> to share photos, advertise location information and collect customer reviews;</li>\n<li><strong>Instagram</strong> to share photos, restaurant updates and customer-generated content;</li>\n<li><strong>Yelp</strong> and <strong>TripAdvisor</strong> to collect customer reviews and feedback;</li>\n<li><strong>Google My Business</strong> to create a local presence in Google search and Maps as well as to collect reviews;</li>\n<li>Delivery services like <strong>DoorDash</strong> to outsource delivery to;</li>\n<li>Reservation sites like <strong>OpenTable</strong> to outsource reservation bookings to.</li>\n</ul>\n\n<p>If customers are looking for restaurants online, they need to be willing and able to meet them where they are… before eventually bringing them to the website.</p>\n\n<p>Although it’s ultimately the restaurant’s responsibility to create these pages, you should provide assistance when it comes to the visual branding piece. For one, it ensures that there’s some consistency between all their platforms. Also, it enables you to fill in missing pieces that restaurateurs might not think about.</p>\n\n<p>Let’s take a look at Rhode Island staple, <a href=\"https://www.iggysri.com/\">IGGY’S</a>:</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5ebc0d3b-bedd-433a-9288-8111ca46d52f/iggysri-website.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5ebc0d3b-bedd-433a-9288-8111ca46d52f/iggysri-website.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5ebc0d3b-bedd-433a-9288-8111ca46d52f/iggysri-website.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5ebc0d3b-bedd-433a-9288-8111ca46d52f/iggysri-website.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5ebc0d3b-bedd-433a-9288-8111ca46d52f/iggysri-website.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5ebc0d3b-bedd-433a-9288-8111ca46d52f/iggysri-website.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5ebc0d3b-bedd-433a-9288-8111ca46d52f/iggysri-website.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"IGGY’S website with picture of clamcakes and 3 options for online ordering\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      IGGY’S website visitors are introduced to the restaurant with an image of its iconic clamcakes. (Source: <a href='https://www.iggysri.com/'>IGGY’S</a>) (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5ebc0d3b-bedd-433a-9288-8111ca46d52f/iggysri-website.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>The waterfront eatery immediately gets down to business and provides visitors with 3 options for ordering online (based on which location they want to go to).</p>\n\n<p>Here’s what the online ordering portal looks like:</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/336c4cc8-f420-4962-876e-5e4a2c565c82/iggys-online-ordering.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/336c4cc8-f420-4962-876e-5e4a2c565c82/iggys-online-ordering.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/336c4cc8-f420-4962-876e-5e4a2c565c82/iggys-online-ordering.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/336c4cc8-f420-4962-876e-5e4a2c565c82/iggys-online-ordering.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/336c4cc8-f420-4962-876e-5e4a2c565c82/iggys-online-ordering.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/336c4cc8-f420-4962-876e-5e4a2c565c82/iggys-online-ordering.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/336c4cc8-f420-4962-876e-5e4a2c565c82/iggys-online-ordering.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"IGGY’S online ordering portal\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      IGGY’S restaurant’s online ordering portal. (Source: <a href='https://www.iggysri.com/'>IGGY’S</a>) (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/336c4cc8-f420-4962-876e-5e4a2c565c82/iggys-online-ordering.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Notice how good this looks. It takes what would otherwise be a text-only menu and turns it into something much more attractive and, arguably, more effective in driving up sales.</p>\n\n<p>Now, contrast that with IGGY’S online ordering through <a href=\"https://www.doordash.com/\">DoorDash</a>:</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/017cf5dd-7c97-4e12-b0f8-6e434294196e/doordash-iggysri.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/017cf5dd-7c97-4e12-b0f8-6e434294196e/doordash-iggysri.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/017cf5dd-7c97-4e12-b0f8-6e434294196e/doordash-iggysri.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/017cf5dd-7c97-4e12-b0f8-6e434294196e/doordash-iggysri.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/017cf5dd-7c97-4e12-b0f8-6e434294196e/doordash-iggysri.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/017cf5dd-7c97-4e12-b0f8-6e434294196e/doordash-iggysri.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/017cf5dd-7c97-4e12-b0f8-6e434294196e/doordash-iggysri.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"DoorDash online ordering for IGGY’s\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      DoorDash customers can order online from IGGY’s restaurant. (Source: <a href='https://www.doordash.com/'>DoorDash</a>) (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/017cf5dd-7c97-4e12-b0f8-6e434294196e/doordash-iggysri.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>The items on this page rarely come with descriptions or images.</p>\n\n<p>Now, IGGY’S is a well-known restaurant around Rhode Island, so this might not be a dealbreaker for online customers. However, new customers might approach the menu with more trepidation than the one available through the IGGY’S website since it’s devoid of details.</p>\n\n<p>This is where your visual-centric approach comes in handy. By making sure each item comes with a high-resolution and mouth-watering photo (the same as the one used on the site), you can optimize this sales opportunity for them.</p>\n\n<p>It’s also important to ensure the brand elements are consistently presented. That way, if an existing customer runs across their favorite restaurant on DoorDash, they won’t hesitate to order because they’ll instantly know it’s their favorite restaurant.</p>\n\n<p>For example, the logo on DoorDash is nothing like the one on the website in terms of quality or looks:</p>\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/465cdd8f-d45a-4f3d-911d-3ddd729dcddd/doordash-iggys-logo.png\">\n    \n    <img\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/465cdd8f-d45a-4f3d-911d-3ddd729dcddd/doordash-iggys-logo.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/465cdd8f-d45a-4f3d-911d-3ddd729dcddd/doordash-iggys-logo.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/465cdd8f-d45a-4f3d-911d-3ddd729dcddd/doordash-iggys-logo.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/465cdd8f-d45a-4f3d-911d-3ddd729dcddd/doordash-iggys-logo.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/465cdd8f-d45a-4f3d-911d-3ddd729dcddd/doordash-iggys-logo.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/465cdd8f-d45a-4f3d-911d-3ddd729dcddd/doordash-iggys-logo.png\"\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"DoorDash logo and location information for IGGY’S RI\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      The DoorDash logo for IGGY’S doesn’t match the one on the website. (Source: <a href='https://www.doordash.com/'>DoorDash</a>) (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/465cdd8f-d45a-4f3d-911d-3ddd729dcddd/doordash-iggys-logo.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Be it the logo or another branded element, you want to make sure that 1) it matches the website and 2) looks good. This goes for online ordering sites like DoorDash as well as all the other ones I mentioned earlier.</p>\n\n<h3 id=\"wrapping-up\">Wrapping Up</h3>\n\n<p>We’re at a point now where restaurants can no longer be reluctant or stingy about improving their digital presence. And, as a web designer, this should get you excited.</p>\n\n<p>There’s a lot you can do to help businesses in this space beyond designing basic websites. Because so much of their digital transformation involves making sales online, you’ll get to design experiences that are intuitive, modern, and mouth-watering while also creating new monetized pathways for them.</p>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\">\n  <span>(ra, yk, il)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        ",
      "content": "As much as I’ve always loved the experience of going out to eat and ordering in takeout, it’s very rare that I enjoy visiting a restaurant’s website. But I get it. The restaurant industry tends to run on very slim profit margins, so it’s hard to justify spending money on a professionally designed website when all they want it to do is list their hours of operation and menu.",
      "contentSnippet": "As much as I’ve always loved the experience of going out to eat and ordering in takeout, it’s very rare that I enjoy visiting a restaurant’s website. But I get it. The restaurant industry tends to run on very slim profit margins, so it’s hard to justify spending money on a professionally designed website when all they want it to do is list their hours of operation and menu.",
      "guid": "https://www.smashingmagazine.com/2020/06/web-designers-help-restaurants-digital-experiences/",
      "isoDate": "2020-06-23T12:00:00.000Z"
    }
  ],
  "title": "Articles on Smashing Magazine — For Web Designers And Developers",
  "description": "Recent content in Articles on Smashing Magazine — For Web Designers And Developers",
  "generator": "Hugo -- gohugo.io",
  "link": "https://www.smashingmagazine.com/articles/",
  "language": "en-us",
  "lastBuildDate": "Fri, 10 Jul 2020 03:35:48 +0000"
}